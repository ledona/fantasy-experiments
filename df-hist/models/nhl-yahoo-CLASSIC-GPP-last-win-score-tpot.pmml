<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<PMML xmlns="http://www.dmg.org/PMML-4_4" xmlns:data="http://jpmml.org/jpmml-model/InlineTable" version="4.4">
	<Header>
		<Application name="JPMML-SkLearn library" version="1.7.10"/>
		<Timestamp>2022-09-04T03:24:53Z</Timestamp>
	</Header>
	<MiningBuildTask>
		<Extension name="repr">PMMLPipeline(steps=[('mapper', DataFrameMapper(drop_cols=[],
                features=[(['best-possible-score'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team_count'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team-med'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team-70.0th_pctl'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('med-dfs', 'C')"],
                           Continuou...
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'C')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'D')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'G')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'W')"],
                           ContinuousDomain(invalid_value_treatment='as_is'))])),
       ('selectpercentile', SelectorProxy(selector=SelectPercentile(percentile=41,
                                        score_func=&lt;function f_regression at 0x7f4a5f835d80&gt;))),
       ('pca', PCA(iterated_power=2, svd_solver='randomized')),
       ('randomforestregressor', RandomForestRegressor(bootstrap=False, min_samples_leaf=3, min_samples_split=6))])</Extension>
	</MiningBuildTask>
	<DataDictionary>
		<DataField name="last_winning_score" optype="continuous" dataType="double"/>
		<DataField name="best-possible-score" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="133.20000000000002" rightMargin="185.9"/>
		</DataField>
		<DataField name="team_count" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="4.0" rightMargin="16.0"/>
		</DataField>
		<DataField name="team-70.0th_pctl" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="3.0" rightMargin="4.0"/>
		</DataField>
		<DataField name="('med-dfs', 'D')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="2.4" rightMargin="4.0"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'G')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="12.62" rightMargin="18.8"/>
		</DataField>
	</DataDictionary>
	<MiningModel functionName="regression" algorithmName="sklearn.ensemble._forest.RandomForestRegressor">
		<MiningSchema>
			<MiningField name="last_winning_score" usageType="target"/>
			<MiningField name="best-possible-score" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="team_count" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="team-70.0th_pctl" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', 'D')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'G')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
		</MiningSchema>
		<ModelStats>
			<UnivariateStats field="best-possible-score">
				<Counts totalFreq="16" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="133.20000000000002" maximum="185.9" mean="155.70625" standardDeviation="15.121320575184562" median="150.5" interQuartileRange="19.849999999999966"/>
			</UnivariateStats>
			<UnivariateStats field="team_count">
				<Counts totalFreq="16" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="4.0" maximum="16.0" mean="10.375" standardDeviation="3.550968177835448" median="10.0" interQuartileRange="4.0"/>
			</UnivariateStats>
			<UnivariateStats field="team-70.0th_pctl">
				<Counts totalFreq="16" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="3.0" maximum="4.0" mean="3.66875" standardDeviation="0.4440140059727848" median="4.0" interQuartileRange="0.9250000000000016"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', 'D')">
				<Counts totalFreq="16" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="2.4" maximum="4.0" mean="3.26875" standardDeviation="0.4892197231306195" median="2.95" interQuartileRange="0.8250000000000002"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'G')">
				<Counts totalFreq="16" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="12.62" maximum="18.8" mean="15.973749999999999" standardDeviation="2.080008638804176" median="15.619999999999997" interQuartileRange="2.9399999999999995"/>
			</UnivariateStats>
		</ModelStats>
		<LocalTransformations>
			<DerivedField name="pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">155.70625</Constant>
						</Apply>
						<Constant dataType="double">0.982324552182577</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">10.375</Constant>
						</Apply>
						<Constant dataType="double">0.1817776263392261</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">3.66875</Constant>
						</Apply>
						<Constant dataType="double">0.004633990500442086</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'D')"/>
							<Constant dataType="double">3.26875</Constant>
						</Apply>
						<Constant dataType="double">-0.005763221630434277</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'G')"/>
							<Constant dataType="double">15.973749999999999</Constant>
						</Apply>
						<Constant dataType="double">-0.04405315142253205</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">155.70625</Constant>
						</Apply>
						<Constant dataType="double">0.13654491648709915</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">10.375</Constant>
						</Apply>
						<Constant dataType="double">-0.5381473677062601</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">3.66875</Constant>
						</Apply>
						<Constant dataType="double">0.029676489349416094</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'D')"/>
							<Constant dataType="double">3.26875</Constant>
						</Apply>
						<Constant dataType="double">-0.02640000440506217</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'G')"/>
							<Constant dataType="double">15.973749999999999</Constant>
						</Apply>
						<Constant dataType="double">0.8307678629795823</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">155.70625</Constant>
						</Apply>
						<Constant dataType="double">0.014007679593709809</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">10.375</Constant>
						</Apply>
						<Constant dataType="double">-0.04570261069194148</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">3.66875</Constant>
						</Apply>
						<Constant dataType="double">0.046582033956528573</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'D')"/>
							<Constant dataType="double">3.26875</Constant>
						</Apply>
						<Constant dataType="double">0.9977683574612621</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'G')"/>
							<Constant dataType="double">15.973749999999999</Constant>
						</Apply>
						<Constant dataType="double">-0.0018642022072146765</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0])"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3])"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2])"/>
			</DerivedField>
		</LocalTransformations>
		<Segmentation multipleModelMethod="average">
			<Segment id="1">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="2">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="3">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="4">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="5">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="6">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="7">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="8">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="9">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="10">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="11">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="12">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="13">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="14">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="15">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="16">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="17">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="18">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="19">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="20">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="21">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="22">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="23">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="24">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="25">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="26">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="27">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="28">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="29">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="30">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="31">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="32">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="33">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="34">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="35">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="36">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="37">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="38">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="39">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="40">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="41">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="42">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="43">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="44">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="45">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="46">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="47">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="48">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="49">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="50">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="51">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="52">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="53">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="54">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="55">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="56">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="57">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="58">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="59">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="60">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="61">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="62">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="63">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="64">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="65">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="66">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="67">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="68">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="69">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="70">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="71">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="72">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="73">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="74">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="75">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="76">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="77">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="78">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="79">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="80">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="81">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="82">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="83">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="84">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="85">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="86">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="87">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="88">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="89">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="90">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="91">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="92">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="93">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="94">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="95">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="96">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="97">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="98">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="99">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="100">
				<True/>
				<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))"/>
					</MiningSchema>
					<Node score="106.925">
						<True/>
						<Node score="77.16666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[0]))" operator="lessOrEqual" value="-5.358563661575317"/>
							<Node score="84.15000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[3]))" operator="lessOrEqual" value="-0.08998847752809525"/>
							</Node>
						</Node>
						<Node score="89.77999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, team-70.0th_pctl, ('med-dfs', 'D'), ('70.0th-pctl-dfs', 'G'))[2]))" operator="lessOrEqual" value="0.8454094231128693"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
		</Segmentation>
	</MiningModel>
</PMML>
