<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<PMML xmlns="http://www.dmg.org/PMML-4_4" xmlns:data="http://jpmml.org/jpmml-model/InlineTable" version="4.4">
	<Header>
		<Application name="JPMML-SkLearn library" version="1.7.10"/>
		<Timestamp>2022-09-04T05:22:11Z</Timestamp>
	</Header>
	<MiningBuildTask>
		<Extension name="repr">PMMLPipeline(steps=[('mapper', DataFrameMapper(drop_cols=[],
                features=[(['best-possible-score'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team_count'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team-med'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team-70.0th_pctl'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('med-dfs', '1B')"],
                           Continuo...
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'C')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'OF')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'P')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'SS')"],
                           ContinuousDomain(invalid_value_treatment='as_is'))])),
       ('selectfrommodel', SelectorProxy(selector=SelectFromModel(estimator=ExtraTreesRegressor(max_features=0.9000000000000001),
                                       threshold=0.0))),
       ('polynomialfeatures', PolynomialFeatures(include_bias=False)),
       ('adaboostregressor', AdaBoostRegressor(loss='square', n_estimators=100))])</Extension>
	</MiningBuildTask>
	<DataDictionary>
		<DataField name="last_winning_score" optype="continuous" dataType="double"/>
		<DataField name="best-possible-score" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="80.0" rightMargin="178.0"/>
		</DataField>
		<DataField name="team_count" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="2.0" rightMargin="3.0"/>
		</DataField>
		<DataField name="team-med" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="1.0" rightMargin="15.0"/>
		</DataField>
		<DataField name="team-70.0th_pctl" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="1.7" rightMargin="15.8"/>
		</DataField>
		<DataField name="('med-dfs', '1B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="17.0"/>
		</DataField>
		<DataField name="('med-dfs', '2B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="17.0"/>
		</DataField>
		<DataField name="('med-dfs', '3B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="22.0"/>
		</DataField>
		<DataField name="('med-dfs', 'C')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="17.0"/>
		</DataField>
		<DataField name="('med-dfs', 'OF')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="17.0"/>
		</DataField>
		<DataField name="('med-dfs', 'P')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="-14.4745" rightMargin="28.275"/>
		</DataField>
		<DataField name="('med-dfs', 'SS')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="20.5"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="25.399999999999995"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="21.0"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="1.5999999999999943" rightMargin="26.0"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="19.9"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="2.0" rightMargin="25.4"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="-14.3215" rightMargin="32.775"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.7999999999999998" rightMargin="22.5"/>
		</DataField>
	</DataDictionary>
	<MiningModel functionName="regression" algorithmName="sklearn.ensemble._weight_boosting.AdaBoostRegressor">
		<MiningSchema>
			<MiningField name="last_winning_score" usageType="target"/>
			<MiningField name="best-possible-score" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="team_count" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="team-med" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="team-70.0th_pctl" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', '1B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', '2B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', '3B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', 'C')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', 'OF')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', 'P')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', 'SS')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', '1B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', '2B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', '3B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'C')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'OF')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'P')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'SS')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
		</MiningSchema>
		<ModelStats>
			<UnivariateStats field="best-possible-score">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="80.0" maximum="178.0" mean="114.67825" standardDeviation="22.92067576162716" median="112.59625" interQuartileRange="26.374750000000006"/>
			</UnivariateStats>
			<UnivariateStats field="team_count">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="2.0" maximum="3.0" mean="2.0428571428571427" standardDeviation="0.2025349554108261" median="2.0" interQuartileRange="0.0"/>
			</UnivariateStats>
			<UnivariateStats field="team-med">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="1.0" maximum="15.0" mean="4.65" standardDeviation="2.6435230821224702" median="4.25" interQuartileRange="2.875"/>
			</UnivariateStats>
			<UnivariateStats field="team-70.0th_pctl">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="1.7" maximum="15.8" mean="5.578571428571428" standardDeviation="2.7676133533189544" median="5.05" interQuartileRange="3.3749999999999996"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', '1B')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="17.0" mean="5.035714285714286" standardDeviation="4.437922155831994" median="4.0" interQuartileRange="3.875"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', '2B')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="17.0" mean="4.764285714285714" standardDeviation="3.9818529683081585" median="4.0" interQuartileRange="4.375"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', '3B')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="22.0" mean="5.728571428571429" standardDeviation="4.874632377556951" median="4.0" interQuartileRange="4.0"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', 'C')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="17.0" mean="3.7785714285714285" standardDeviation="4.0032448573320005" median="2.5" interQuartileRange="5.875"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', 'OF')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="17.0" mean="4.507142857142857" standardDeviation="2.4661897406190576" median="4.0" interQuartileRange="3.0"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', 'P')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="-14.4745" maximum="28.275" mean="12.918500000000003" standardDeviation="7.710225168566739" median="13.452" interQuartileRange="8.934875000000002"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', 'SS')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="20.5" mean="6.507142857142857" standardDeviation="4.561087634343728" median="5.5" interQuartileRange="5.375"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', '1B')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="25.399999999999995" mean="8.507142857142858" standardDeviation="5.91318916680745" median="7.299999999999999" interQuartileRange="8.224999999999998"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', '2B')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="21.0" mean="7.402857142857142" standardDeviation="4.570588315635134" median="6.349999999999998" interQuartileRange="3.95"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', '3B')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="1.5999999999999943" maximum="26.0" mean="8.528571428571427" standardDeviation="5.564380156909865" median="6.85" interQuartileRange="6.375"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'C')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="19.9" mean="5.721428571428571" standardDeviation="4.410892130596156" median="5.0" interQuartileRange="4.425000000000002"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'OF')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="2.0" maximum="25.4" mean="8.49285714285714" standardDeviation="4.377224215954067" median="7.6" interQuartileRange="4.125000000000001"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'P')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="-14.3215" maximum="32.775" mean="16.71498" standardDeviation="8.131225445573554" median="17.87575" interQuartileRange="10.128525000000002"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'SS')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.7999999999999998" maximum="22.5" mean="9.128571428571426" standardDeviation="5.142960316425407" median="8.349999999999998" interQuartileRange="6.350000000000002"/>
			</UnivariateStats>
		</ModelStats>
		<LocalTransformations>
			<DerivedField name="('med-dfs', 'C'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'C')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'C'):('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="team_count:team-70.0th_pctl" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="team-70.0th_pctl"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:team-70.0th_pctl)" optype="continuous" dataType="float">
				<FieldRef field="team_count:team-70.0th_pctl"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:team-70.0th_pctl))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:team-70.0th_pctl)"/>
			</DerivedField>
			<DerivedField name="team_count:('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="team_count:('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="team-med:('med-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-med"/>
					<FieldRef field="('med-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-med:('med-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="team-med:('med-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(team-med:('med-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-med:('med-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="team-70.0th_pctl"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl^2)" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl^2"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl^2))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl^2)"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'SS')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('70.0th-pctl-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('70.0th-pctl-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="float(best-possible-score)" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score)"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:team-70.0th_pctl" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="team-70.0th_pctl"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:team-70.0th_pctl)" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:team-70.0th_pctl"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:team-70.0th_pctl))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:team-70.0th_pctl)"/>
			</DerivedField>
			<DerivedField name="best-possible-score:('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="team-med:('med-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-med"/>
					<FieldRef field="('med-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-med:('med-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="team-med:('med-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(team-med:('med-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-med:('med-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="team_count:('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="team_count:('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:team_count" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="team_count"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:team_count)" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:team_count"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:team_count))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:team_count)"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'OF'):('med-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'OF')"/>
					<FieldRef field="('med-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'OF'):('med-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'OF'):('med-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'OF'):('med-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'OF'):('med-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'P')^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="('med-dfs', 'P')"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'P')^2)" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'P')^2"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'P')^2))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'P')^2)"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'SS')"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:team-med" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="team-med"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:team-med)" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:team-med"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:team-med))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:team-med)"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="team-med:('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-med"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-med:('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="team-med:('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(team-med:('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-med:('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'P')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B'):('med-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '3B')"/>
					<FieldRef field="('med-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B'):('med-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B'):('med-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B'):('med-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B'):('med-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="team_count:('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="team_count:('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'P')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '1B'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '1B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '1B'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'P'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'P')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'P'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '3B')^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '3B')^2)" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '3B')^2"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '3B')^2))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '3B')^2)"/>
			</DerivedField>
			<DerivedField name="best-possible-score^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="best-possible-score"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score^2)" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score^2"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score^2))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score^2)"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '2B'):('med-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '2B')"/>
					<FieldRef field="('med-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '2B'):('med-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '2B'):('med-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '2B'):('med-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '2B'):('med-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('med-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('med-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('med-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('med-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('med-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('med-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="team_count:('med-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="('med-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:('med-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="team_count:('med-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:('med-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:('med-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="team_count:('med-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="('med-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:('med-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="team_count:('med-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:('med-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:('med-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '1B'):('med-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '1B')"/>
					<FieldRef field="('med-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '1B'):('med-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '1B'):('med-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '1B'):('med-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '1B'):('med-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="team-med:('med-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-med"/>
					<FieldRef field="('med-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-med:('med-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="team-med:('med-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(team-med:('med-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-med:('med-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('med-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('med-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('med-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('med-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('med-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('med-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '1B')"/>
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'P')"/>
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '2B'):('med-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '2B')"/>
					<FieldRef field="('med-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '2B'):('med-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '2B'):('med-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '2B'):('med-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '2B'):('med-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:('med-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('med-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('med-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('med-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('med-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('med-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '2B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="team_count:team-med" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="team-med"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:team-med)" optype="continuous" dataType="float">
				<FieldRef field="team_count:team-med"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:team-med))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:team-med)"/>
			</DerivedField>
			<DerivedField name="team-med:('med-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-med"/>
					<FieldRef field="('med-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-med:('med-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="team-med:('med-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(team-med:('med-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-med:('med-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '2B'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '2B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '2B'):('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl)" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl)"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B'):('med-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '3B')"/>
					<FieldRef field="('med-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B'):('med-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B'):('med-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B'):('med-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B'):('med-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', 'SS')^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'SS')^2)" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'SS')^2"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'SS')^2))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'SS')^2)"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('med-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('med-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('med-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('med-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('med-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('med-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'C'):('med-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'C')"/>
					<FieldRef field="('med-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'C'):('med-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'C'):('med-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'C'):('med-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'C'):('med-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'OF')"/>
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="team_count:('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="team_count:('70.0th-pctl-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:('70.0th-pctl-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="team-med:('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-med"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-med:('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="team-med:('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(team-med:('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-med:('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'OF')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '1B'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '1B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '1B'):('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="team_count^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="team_count"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count^2)" optype="continuous" dataType="float">
				<FieldRef field="team_count^2"/>
			</DerivedField>
			<DerivedField name="double(float(team_count^2))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count^2)"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '1B'):('med-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '1B')"/>
					<FieldRef field="('med-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '1B'):('med-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '1B'):('med-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '1B'):('med-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'C'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'C')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'C'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('med-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('med-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('med-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('med-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('med-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('med-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'P')"/>
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '1B')^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '1B')^2)" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '1B')^2"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '1B')^2))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '1B')^2)"/>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('70.0th-pctl-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', 'OF')^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'OF')^2)" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'OF')^2"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'OF')^2))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'OF')^2)"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'OF')^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="('med-dfs', 'OF')"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'OF')^2)" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'OF')^2"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'OF')^2))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'OF')^2)"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="team-med:team-70.0th_pctl" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-med"/>
					<FieldRef field="team-70.0th_pctl"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-med:team-70.0th_pctl)" optype="continuous" dataType="float">
				<FieldRef field="team-med:team-70.0th_pctl"/>
			</DerivedField>
			<DerivedField name="double(float(team-med:team-70.0th_pctl))" optype="continuous" dataType="double">
				<FieldRef field="float(team-med:team-70.0th_pctl)"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'P'):('med-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'P')"/>
					<FieldRef field="('med-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'P'):('med-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'P'):('med-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'P'):('med-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B'):('70.0th-pctl-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B'):('70.0th-pctl-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('med-dfs', '1B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('med-dfs', '1B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('med-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('med-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('med-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('med-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="team_count:('med-dfs', '1B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="('med-dfs', '1B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:('med-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="team_count:('med-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:('med-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:('med-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:('med-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('med-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('med-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('med-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('med-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('med-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'SS')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', 'P')^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'P')^2)" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'P')^2"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'P')^2))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'P')^2)"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '2B')^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '2B')^2)" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '2B')^2"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '2B')^2))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '2B')^2)"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '1B'):('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '1B')"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '1B'):('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '1B'):('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '1B'):('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="team-med:('med-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-med"/>
					<FieldRef field="('med-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-med:('med-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="team-med:('med-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(team-med:('med-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-med:('med-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:('med-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('med-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('med-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('med-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('med-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('med-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'C'):('med-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'C')"/>
					<FieldRef field="('med-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'C'):('med-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'C'):('med-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'C'):('med-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'C'):('med-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'C'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'C')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'C'):('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="team-med:('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-med"/>
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-med:('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="team-med:('70.0th-pctl-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(team-med:('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-med:('70.0th-pctl-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'C'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'C')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'C'):('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
		</LocalTransformations>
		<Segmentation multipleModelMethod="weightedMedian">
			<Segment id="1" weight="2.8160003510762723">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(team-med:('med-dfs', '3B')))"/>
						<MiningField name="double(float(team-70.0th_pctl^2))"/>
					</MiningSchema>
					<Node score="118.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="114.29999923706055"/>
							<Node score="74.81379310344829">
								<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.399999618530273"/>
								<Node score="94.39580645161291">
									<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="8.0"/>
								</Node>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="8.299999952316284"/>
							<Node score="136.5">
								<SimplePredicate field="double(float(team-med:('med-dfs', '3B')))" operator="lessOrEqual" value="153.0"/>
							</Node>
						</Node>
						<Node score="122.94">
							<SimplePredicate field="double(float(team-70.0th_pctl^2))" operator="lessOrEqual" value="145.0"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="2" weight="3.2460136591201714">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(best-possible-score))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="105.9712">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="238.73999786376953"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="155.73374938964844"/>
							</Node>
							<Node score="81.654375">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.60499954223633"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="3" weight="3.730914396527006">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-med:('med-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="98.9641666666667">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
								<Node score="80.93666666666667">
									<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="2109.6756591796875"/>
								</Node>
							</Node>
							<Node score="126.22666666666665">
								<SimplePredicate field="double(float(team-med:('med-dfs', 'SS')))" operator="lessOrEqual" value="209.625"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="4" weight="3.933711499723086">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'P')^2))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="113.55799999999999">
							<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="27.199999809265137"/>
							<Node score="54.53333333333333">
								<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="194.5"/>
								<Node score="79.58333333333333">
									<SimplePredicate field="double(float(('med-dfs', 'OF'):('med-dfs', 'P')))" operator="lessOrEqual" value="59.03499794006348"/>
								</Node>
							</Node>
							<Node score="91.82333333333334">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="57.85000038146973"/>
							</Node>
						</Node>
						<Node score="111.7">
							<SimplePredicate field="double(float(('med-dfs', 'P')^2))" operator="lessOrEqual" value="176.48999786376953"/>
							<Node score="80.5">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="156.23146438598633"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="5" weight="3.535875853554648">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(best-possible-score:team-med))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="118.07500076293945"/>
							<Node score="103.96285714285715">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="50.75"/>
								<Node score="84.65148148148148">
									<SimplePredicate field="double(float(best-possible-score:team-med))" operator="lessOrEqual" value="471.71400451660156"/>
								</Node>
							</Node>
							<Node score="78.565">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="98.68790435791016"/>
							</Node>
						</Node>
						<Node score="112.34999999999998">
							<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="308.3500061035156"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="6" weight="2.6672443063940223">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('70.0th-pctl-dfs', 'OF')"/>
						<MiningField name="('70.0th-pctl-dfs', 'SS')"/>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(team-med:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
							<Node score="65.625">
								<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.399999618530273"/>
								<Node score="93.87642857142859">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="139.76000213623047"/>
								</Node>
							</Node>
						</Node>
						<Node score="114.85">
							<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="292.5"/>
							<Node score="126.56999999999996">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="100.84450149536133"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="7" weight="4.196367488095105">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('med-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="141.22357142857143">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="18.100000381469727"/>
							<Node score="50.79999999999999">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="90.67499923706055"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(('med-dfs', '3B'):('med-dfs', 'P')))" operator="lessOrEqual" value="42.625000953674316"/>
								</Node>
							</Node>
							<Node score="89.9166666666667">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="64.45000076293945"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="8" weight="3.952486842207065">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', '2B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="229.07217407226562"/>
							<Node score="89.69235294117648">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1206.3599853515625"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="85.70000076293945"/>
								</Node>
							</Node>
							<Node score="131.2423076923077">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="41.0"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="9" weight="3.00499450971372">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="104.38236842105266">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="96.32099914550781"/>
								<Node score="60.666666666666664">
									<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="13.599999904632568"/>
								</Node>
							</Node>
							<Node score="143.2941176470588">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="-32.140950202941895"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="10" weight="3.3011885116589075">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'SS')"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'SS')^2" optype="continuous" dataType="double">
							<Apply function="pow">
								<FieldRef field="('med-dfs', 'SS')"/>
								<Constant dataType="integer">2</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'SS')^2)" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'SS')^2"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'SS')^2))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'SS')^2)"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="132.0">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="157.68000030517578"/>
							<Node score="108.91607142857148">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="335.5"/>
								<Node score="85.68222222222222">
									<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="111.8375015258789"/>
								</Node>
							</Node>
							<Node score="153.0">
								<SimplePredicate field="double(float(('med-dfs', 'SS')^2))" operator="lessOrEqual" value="218.125"/>
							</Node>
						</Node>
						<Node score="59.25">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="236.42625427246094"/>
							<Node score="64.79999999999998">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="12.5"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="11" weight="4.470781285798242">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B')^2))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="35.20000076293945"/>
							<Node score="64.3">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B')^2))" operator="lessOrEqual" value="51.8799991607666"/>
								<Node score="87.11600000000001">
									<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="8.000000238418579"/>
								</Node>
							</Node>
						</Node>
						<Node score="107.93285714285715">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="147.5"/>
							<Node score="82.24">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="10158.3232421875"/>
							</Node>
						</Node>
						<Node score="132.015">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="141.75"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="12" weight="3.6415401974502357">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="121.26666666666664">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'P')))" operator="lessOrEqual" value="98.25374984741211"/>
							<Node score="77.00461538461538">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="114.29999923706055"/>
								<Node score="102.98307692307694">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="91.21366882324219"/>
								</Node>
							</Node>
							<Node score="130.1">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="307.75"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="143.69400024414062"/>
						</Node>
						<Node score="90.05333333333334">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="53.16862487792969"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="13" weight="3.457183345794549">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="0.949999988079071"/>
						</Node>
						<Node score="134.81">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="91.65510204081636">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1138.8599853515625"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="14" weight="2.7647452517813655">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(team_count:('med-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(team_count:('med-dfs', 'P')))" operator="lessOrEqual" value="43.875"/>
							<Node score="113.87000000000002">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
								<Node score="80.53800000000001">
									<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13663.28125"/>
								</Node>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="15" weight="2.9901359764632365">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '2B')"/>
						<MiningField name="('70.0th-pctl-dfs', 'SS')"/>
						<MiningField name="best-possible-score"/>
						<MiningField name="('med-dfs', 'C')"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(team_count:('med-dfs', '3B')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('med-dfs', '2B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '2B'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '2B')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '2B'):('70.0th-pctl-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'SS'))"/>
						</DerivedField>
						<DerivedField name="best-possible-score:('med-dfs', 'C')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="best-possible-score"/>
								<FieldRef field="('med-dfs', 'C')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(best-possible-score:('med-dfs', 'C'))" optype="continuous" dataType="float">
							<FieldRef field="best-possible-score:('med-dfs', 'C')"/>
						</DerivedField>
						<DerivedField name="double(float(best-possible-score:('med-dfs', 'C')))" optype="continuous" dataType="double">
							<FieldRef field="float(best-possible-score:('med-dfs', 'C'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="136.5">
						<True/>
						<Node score="98.40240000000001">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="46.54999923706055"/>
							<Node score="96.69789473684213">
								<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'C')))" operator="lessOrEqual" value="291.9312438964844"/>
								<Node score="81.6376923076923">
									<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="27.199999809265137"/>
								</Node>
							</Node>
							<Node score="106.13250000000001">
								<SimplePredicate field="double(float(team_count:('med-dfs', '3B')))" operator="lessOrEqual" value="9.0"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', '2B')))" operator="lessOrEqual" value="89.25"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="16" weight="3.3985500120474463">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(team-med:('med-dfs', 'C')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', '2B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="89.75"/>
							<Node score="50.79999999999999">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="17.0"/>
							</Node>
						</Node>
						<Node score="125.72727272727273">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="196.61812591552734"/>
							<Node score="98.69666666666667">
								<SimplePredicate field="double(float(team-med:('med-dfs', 'C')))" operator="lessOrEqual" value="70.25"/>
							</Node>
						</Node>
						<Node score="67.125">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', '2B')))" operator="lessOrEqual" value="29.125000953674316"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="17" weight="2.0597870690107785">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('70.0th-pctl-dfs', '1B')"/>
						<MiningField name="('70.0th-pctl-dfs', '3B')"/>
						<MiningField name="('70.0th-pctl-dfs', 'C')"/>
						<MiningField name="('70.0th-pctl-dfs', 'OF')"/>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(team-med:('med-dfs', '3B')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
								<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '3B'))"/>
						</DerivedField>
						<DerivedField name="('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="136.5">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(team-med:('med-dfs', '3B')))" operator="lessOrEqual" value="56.25"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.949999809265137"/>
								<Node score="87.71844444444446">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="245.1999969482422"/>
								</Node>
							</Node>
						</Node>
						<Node score="123.1">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="117.0250015258789"/>
							<Node score="107.63">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="20.299999713897705"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="-229.49535751342773"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="18" weight="3.3666097564413233">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', '3B')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="91.66538461538462">
						<True/>
						<Node score="125.676">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'P')))" operator="lessOrEqual" value="57.52499961853027"/>
							<Node score="100.08333333333334">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="810.6594848632812"/>
								<Node score="76.76166666666667">
									<SimplePredicate field="double(float(best-possible-score:('med-dfs', '3B')))" operator="lessOrEqual" value="470.9750061035156"/>
								</Node>
							</Node>
							<Node score="107.651">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="76.11000061035156"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="86.18500137329102"/>
						</Node>
						<Node score="63.9735294117647">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'P')))" operator="lessOrEqual" value="78.77375030517578"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="19" weight="3.440829443125955">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'OF')"/>
						<MiningField name="('70.0th-pctl-dfs', 'C')"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team_count:team-med))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'OF')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="270.522216796875"/>
							<Node score="73.89636363636363">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="18056.125"/>
								<Node score="92.75848484848487">
									<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="79.34095001220703"/>
								</Node>
							</Node>
							<Node score="116.74882352941178">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="110.44999694824219"/>
							</Node>
						</Node>
						<Node score="59.25">
							<SimplePredicate field="double(float(team_count:team-med))" operator="lessOrEqual" value="12.0"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="20" weight="4.543536201693602">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
					</MiningSchema>
					<Node score="117.67500000000001">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="7159.592529296875"/>
						</Node>
						<Node score="60.44">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="117.92850112915039"/>
							<Node score="89.63470588235295">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="5.049999952316284"/>
							</Node>
						</Node>
						<Node score="102.91833333333334">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="129.4250030517578"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="21" weight="3.8531944798023865">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(team-med:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', 'P')))"/>
						<MiningField name="double(float(team_count:('med-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-med:('med-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="92.18">
						<True/>
						<Node score="118.0">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'P')))" operator="lessOrEqual" value="100.38250350952148"/>
							<Node score="67.6588888888889">
								<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="201.64999771118164"/>
								<Node score="91.61958333333332">
									<SimplePredicate field="double(float(team-med:('med-dfs', 'OF')))" operator="lessOrEqual" value="11.0"/>
								</Node>
							</Node>
							<Node score="123.0">
								<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="168.4499969482422"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="98.40250015258789"/>
						</Node>
						<Node score="109.06666666666666">
							<SimplePredicate field="double(float(team_count:('med-dfs', 'P')))" operator="lessOrEqual" value="57.06075096130371"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="22" weight="3.123146340839783">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '2B')"/>
						<MiningField name="('70.0th-pctl-dfs', 'C')"/>
						<MiningField name="('med-dfs', '3B')"/>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('med-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '2B'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '2B')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '2B'):('70.0th-pctl-dfs', 'C')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'C'))"/>
						</DerivedField>
						<DerivedField name="('med-dfs', '3B')^2" optype="continuous" dataType="double">
							<Apply function="pow">
								<FieldRef field="('med-dfs', '3B')"/>
								<Constant dataType="integer">2</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '3B')^2)" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '3B')^2"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '3B')^2))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '3B')^2)"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="108.55000000000001">
							<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="15.600000381469727"/>
							<Node score="58.92142857142857">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13907.80615234375"/>
								<Node score="82.10615384615386">
									<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="21.425000190734863"/>
								</Node>
							</Node>
							<Node score="100.0">
								<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="2.0"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '3B')^2))" operator="lessOrEqual" value="58.5"/>
						</Node>
						<Node score="101.0">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', '2B')))" operator="lessOrEqual" value="140.625"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="23" weight="3.0670817674610924">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team_count"/>
						<MiningField name="('med-dfs', 'OF')"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(team-med:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team-70.0th_pctl))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team_count:('med-dfs', 'OF')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team_count"/>
								<FieldRef field="('med-dfs', 'OF')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team_count:('med-dfs', 'OF'))" optype="continuous" dataType="float">
							<FieldRef field="team_count:('med-dfs', 'OF')"/>
						</DerivedField>
						<DerivedField name="double(float(team_count:('med-dfs', 'OF')))" optype="continuous" dataType="double">
							<FieldRef field="float(team_count:('med-dfs', 'OF'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="111.70000000000002">
						<True/>
						<Node score="59.25">
							<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="47.0"/>
							<Node score="63.26666666666666">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="25.050000190734863"/>
								<Node score="89.53714285714287">
									<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="15.5"/>
								</Node>
							</Node>
							<Node score="0.0">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="270.6750030517578"/>
							</Node>
						</Node>
						<Node score="123.0">
							<SimplePredicate field="double(float(team_count:('med-dfs', 'OF')))" operator="lessOrEqual" value="13.0"/>
							<Node score="122.88">
								<SimplePredicate field="double(float(team-70.0th_pctl))" operator="lessOrEqual" value="8.899999618530273"/>
							</Node>
						</Node>
						<Node score="100.0">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="33.09999990463257"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="24" weight="4.384760060970858">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '1B')"/>
						<MiningField name="('70.0th-pctl-dfs', '3B')"/>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '1B'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '1B')"/>
								<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '1B'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '1B'):('70.0th-pctl-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '1B'):('70.0th-pctl-dfs', '3B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="127.3499984741211"/>
							<Node score="108.61000000000001">
								<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.949999809265137"/>
								<Node score="84.87764705882353">
									<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="116.5"/>
								</Node>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="25" weight="4.500854834368502">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '2B')"/>
						<MiningField name="('med-dfs', '3B')"/>
						<MiningField name="double(float(team-med:('med-dfs', '3B')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(best-possible-score:team-med))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('med-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '2B'):('med-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '2B')"/>
								<FieldRef field="('med-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '2B'):('med-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '2B'):('med-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '2B'):('med-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '2B'):('med-dfs', '3B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="136.5">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', '3B')))" operator="lessOrEqual" value="55.0"/>
							<Node score="50.79999999999999">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="90.79999923706055"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(('med-dfs', '3B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="9.5"/>
								</Node>
							</Node>
							<Node score="100.92676470588236">
								<SimplePredicate field="double(float(best-possible-score:team-med))" operator="lessOrEqual" value="1176.0"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('med-dfs', 'P')))" operator="lessOrEqual" value="-115.54712677001953"/>
						</Node>
						<Node score="123.43571428571428">
							<SimplePredicate field="double(float(team-med:('med-dfs', '3B')))" operator="lessOrEqual" value="119.625"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="26" weight="3.524984121944711">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B')^2))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'OF')))"/>
						<MiningField name="double(float(team-med:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(team-70.0th_pctl))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="45.60000038146973"/>
							<Node score="82.35944444444443">
								<SimplePredicate field="double(float(team-70.0th_pctl))" operator="lessOrEqual" value="6.75"/>
								<Node score="107.75">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B')^2))" operator="lessOrEqual" value="3.2799999713897705"/>
								</Node>
							</Node>
						</Node>
						<Node score="109.19538461538463">
							<SimplePredicate field="double(float(team-med:('med-dfs', 'OF')))" operator="lessOrEqual" value="73.5"/>
							<Node score="122.97818181818182">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="79.27799987792969"/>
							</Node>
						</Node>
						<Node score="136.5">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="141.75"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="27" weight="3.1166220038162926">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team-med"/>
						<MiningField name="double(float(team-med:('med-dfs', '3B')))"/>
						<MiningField name="double(float(best-possible-score:team-med))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-med:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'SS')^2))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="float(team-med)" optype="continuous" dataType="float">
							<FieldRef field="team-med"/>
						</DerivedField>
						<DerivedField name="double(float(team-med))" optype="continuous" dataType="double">
							<FieldRef field="float(team-med)"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="111.76466666666668">
							<SimplePredicate field="double(float(team-med:('med-dfs', '3B')))" operator="lessOrEqual" value="89.375"/>
							<Node score="70.5375">
								<SimplePredicate field="double(float(best-possible-score:team-med))" operator="lessOrEqual" value="471.2259979248047"/>
								<Node score="80.24999999999999">
									<SimplePredicate field="double(float(team-med))" operator="lessOrEqual" value="3.5"/>
								</Node>
							</Node>
							<Node score="100.35088235294117">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'SS')^2))" operator="lessOrEqual" value="132.5"/>
							</Node>
						</Node>
						<Node score="126.04999999999995">
							<SimplePredicate field="double(float(team-med:('med-dfs', 'OF')))" operator="lessOrEqual" value="174.75"/>
							<Node score="136.5">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="292.5450472831726"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="28" weight="3.9835310577169927">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(team-70.0th_pctl))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('med-dfs', 'OF')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('med-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="111.7">
						<True/>
						<Node score="128.986">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="136.49274444580078"/>
							<Node score="102.69565217391305">
								<SimplePredicate field="double(float(team-70.0th_pctl))" operator="lessOrEqual" value="7.700000286102295"/>
								<Node score="81.52199999999998">
									<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'SS')))" operator="lessOrEqual" value="36.29999923706055"/>
								</Node>
							</Node>
							<Node score="153.0">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('med-dfs', 'P')))" operator="lessOrEqual" value="-61.38087463378906"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="30.0"/>
						</Node>
						<Node score="85.80000000000003">
							<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="156.10800170898438"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="29" weight="3.7823787886347104">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'P')^2))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="134.125">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="342.1889953613281"/>
							<Node score="50.79999999999999">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="5.599999904632568"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(('med-dfs', 'P')^2))" operator="lessOrEqual" value="265.1412582397461"/>
								</Node>
							</Node>
							<Node score="101.41277777777779">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="139.4199981689453"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="30" weight="2.716715780635772">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="93.42500000000001">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13412.26220703125"/>
								<Node score="55.78000000000001">
									<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="279.3875427246094"/>
								</Node>
							</Node>
							<Node score="109.2139285714286">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="29.199999809265137"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="31" weight="4.08703232266855">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="98.23166666666667">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'P')))" operator="lessOrEqual" value="57.52499961853027"/>
							<Node score="82.85999999999999">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="31242.125"/>
								<Node score="110.83350000000003">
									<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="51.19999885559082"/>
								</Node>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="86.18500137329102"/>
						</Node>
						<Node score="64.87142857142858">
							<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="557.1524963378906"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="32" weight="3.2655418934455587">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', '3B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-med:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'C')))"/>
					</MiningSchema>
					<Node score="66.075">
						<True/>
						<Node score="109.46333333333332">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="66.24750137329102"/>
							<Node score="117.90400000000002">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('med-dfs', 'P')))" operator="lessOrEqual" value="23.97987550497055"/>
								<Node score="153.0">
									<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="-90.16499710083008"/>
								</Node>
							</Node>
							<Node score="87.58655172413789">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="31.399999618530273"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="130.17499923706055"/>
						</Node>
						<Node score="99.99000000000001">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="16.199999809265137"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="33" weight="3.965253720959553">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '3B')"/>
						<MiningField name="('70.0th-pctl-dfs', 'P')"/>
						<MiningField name="double(float(team-med:('med-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team_count^2))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '3B'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '3B')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '3B'):('70.0th-pctl-dfs', 'P')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'P'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(team_count^2))" operator="lessOrEqual" value="6.5"/>
							<Node score="136.5">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="25.132824897766113"/>
								<Node score="118.22250000000003">
									<SimplePredicate field="double(float(team-med:('med-dfs', 'SS')))" operator="lessOrEqual" value="183.375"/>
								</Node>
							</Node>
							<Node score="88.39377358490569">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="89.0999984741211"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="34" weight="3.1970455790336936">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('70.0th-pctl-dfs', '1B')"/>
						<MiningField name="('70.0th-pctl-dfs', 'SS')"/>
						<MiningField name="double(float(team-med:('med-dfs', '3B')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="72.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="89.7750015258789"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="41.549999713897705"/>
							</Node>
						</Node>
						<Node score="121.57454545454551">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="255.89749908447266"/>
							<Node score="90.98499999999997">
								<SimplePredicate field="double(float(team-med:('med-dfs', '3B')))" operator="lessOrEqual" value="32.5"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="35" weight="2.3453090873202083">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')))"/>
					</MiningSchema>
					<Node score="142.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="7755.049072265625"/>
							<Node score="73.52499999999999">
								<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="31.699999809265137"/>
								<Node score="50.79999999999999">
									<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="5.1000001430511475"/>
								</Node>
							</Node>
						</Node>
						<Node score="52.25">
							<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="983.0249938964844"/>
							<Node score="90.9963157894737">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="66.41999816894531"/>
							</Node>
						</Node>
						<Node score="118.75363636363636">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="125.5999984741211"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="36" weight="3.102801248022347">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '2B')"/>
						<MiningField name="('70.0th-pctl-dfs', '1B')"/>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '2B'):('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '2B')"/>
								<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '2B'):('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '2B'):('70.0th-pctl-dfs', '1B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '2B'):('70.0th-pctl-dfs', '1B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
								<Node score="87.93755555555556">
									<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.399999618530273"/>
								</Node>
							</Node>
							<Node score="122.69">
								<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="208.95000457763672"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="37" weight="3.9629791042452127">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(team-70.0th_pctl^2))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="306.8699951171875"/>
							<Node score="121.50428571428571">
								<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.949999809265137"/>
								<Node score="88.32826923076915">
									<SimplePredicate field="double(float(team-70.0th_pctl^2))" operator="lessOrEqual" value="47.64999961853027"/>
								</Node>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="38" weight="3.605538224446983">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('70.0th-pctl-dfs', '3B')"/>
						<MiningField name="('70.0th-pctl-dfs', 'SS')"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="134.55428571428573">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="340.9364929199219"/>
							<Node score="69.64000000000001">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="64.75"/>
								<Node score="94.60600000000004">
									<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="55.49049949645996"/>
								</Node>
							</Node>
							<Node score="153.0">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="-34.09932470321655"/>
							</Node>
						</Node>
						<Node score="59.25">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="181.43000030517578"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="39" weight="3.457204991831093">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="134.1875">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="89.0250015258789"/>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="23.75"/>
							<Node score="91.50580645161287">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="-86.5981035232544"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="40" weight="3.977059021612682">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="124.46499999999997">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="80.48749923706055"/>
							<Node score="87.08">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="6.099999904632568"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'OF')))" operator="lessOrEqual" value="38.47500038146973"/>
							<Node score="81.92555555555555">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="183.92889404296875"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="7.968677520751953"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="41" weight="3.3822783092124658">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B')^2))"/>
						<MiningField name="double(float(('med-dfs', 'SS')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'C')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B')^2))" operator="lessOrEqual" value="4.144999980926514"/>
							<Node score="50.79999999999999">
								<SimplePredicate field="double(float(('med-dfs', 'SS')))" operator="lessOrEqual" value="4.5"/>
							</Node>
						</Node>
						<Node score="150.64285714285714">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="292.0874938964844"/>
							<Node score="98.11297872340432">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="80.4000015258789"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="42" weight="2.1569696704870487">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'C')"/>
						<MiningField name="('med-dfs', 'SS')"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'C'):('med-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'C')"/>
								<FieldRef field="('med-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'C'):('med-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'C'):('med-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'C'):('med-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'C'):('med-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="6753.586181640625"/>
							<Node score="72.0">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('med-dfs', 'SS')))" operator="lessOrEqual" value="8.75"/>
							</Node>
						</Node>
						<Node score="116.28400000000005">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="238.73999786376953"/>
							<Node score="82.15062500000002">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13412.26220703125"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="43" weight="4.158250686492845">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team_count"/>
						<MiningField name="('70.0th-pctl-dfs', 'OF')"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', '3B')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'OF')^2))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team_count:('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team_count"/>
								<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team_count:('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
							<FieldRef field="team_count:('70.0th-pctl-dfs', 'OF')"/>
						</DerivedField>
						<DerivedField name="double(float(team_count:('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
							<FieldRef field="float(team_count:('70.0th-pctl-dfs', 'OF'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', '3B')))" operator="lessOrEqual" value="1530.5789794921875"/>
							<Node score="93.29500000000003">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="46.15999984741211"/>
								<Node score="68.19333333333333">
									<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="2012.7070922851562"/>
								</Node>
							</Node>
							<Node score="69.5">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="18.0"/>
							</Node>
						</Node>
						<Node score="126.04999999999995">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="69.60000038146973"/>
							<Node score="107.63">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="32.55000019073486"/>
							</Node>
						</Node>
						<Node score="136.5">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'OF')^2))" operator="lessOrEqual" value="420.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="44" weight="3.7259135626776776">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'SS')"/>
						<MiningField name="('70.0th-pctl-dfs', 'SS')"/>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'OF')^2))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'SS'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'SS')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'SS'):('70.0th-pctl-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="34.29999923706055"/>
							<Node score="100.33">
								<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="59.82500076293945"/>
								<Node score="76.79071428571426">
									<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="231.61699676513672"/>
								</Node>
							</Node>
						</Node>
						<Node score="113.83896551724138">
							<SimplePredicate field="double(float(('med-dfs', 'OF')^2))" operator="lessOrEqual" value="169.0"/>
							<Node score="84.67">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="4.0"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="45" weight="3.60863800888571">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="136.5">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="116.5"/>
							<Node score="61.0790909090909">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="50.75"/>
								<Node score="83.7809090909091">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="79.86899948120117"/>
								</Node>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="2229.5"/>
							<Node score="110.89852941176474">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="3181.574951171875"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="-61.975873947143555"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="46" weight="3.206859402954959">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('70.0th-pctl-dfs', 'OF')"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', 'P')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="float(('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', 'OF'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="114.97380952380952">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="1.800000011920929"/>
						</Node>
						<Node score="69.37083333333332">
							<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="53.125"/>
							<Node score="91.62781249999996">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="7.650000095367432"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'P')))" operator="lessOrEqual" value="-7.1744998544454575"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="47" weight="2.2116877697941217">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team-med:team-70.0th_pctl))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="132.07142857142858">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="65.95999999999998">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="92.32500076293945"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="2.449999988079071"/>
								</Node>
							</Node>
							<Node score="95.98309090909085">
								<SimplePredicate field="double(float(team-med:team-70.0th_pctl))" operator="lessOrEqual" value="79.0999984741211"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="48" weight="3.667802220786462">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'P')"/>
						<MiningField name="('70.0th-pctl-dfs', '2B')"/>
						<MiningField name="('70.0th-pctl-dfs', 'C')"/>
						<MiningField name="('70.0th-pctl-dfs', 'SS')"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B')^2))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'P'):('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'P')"/>
								<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'P'):('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'P'):('70.0th-pctl-dfs', '2B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'P'):('70.0th-pctl-dfs', '2B'))"/>
						</DerivedField>
						<DerivedField name="('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="60.214285714285715">
						<True/>
						<Node score="123.97666666666665">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="108.1624984741211"/>
							<Node score="97.16657894736842">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="55.0"/>
								<Node score="65.88">
									<SimplePredicate field="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))" operator="lessOrEqual" value="37.21249961853027"/>
								</Node>
							</Node>
							<Node score="153.0">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="-110.78850144147873"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B')^2))" operator="lessOrEqual" value="9.224999696016312"/>
						</Node>
						<Node score="92.245">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="26.540000438690186"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="49" weight="3.5898917758412074">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="53.92142857142858">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="86.11000061035156"/>
								<Node score="90.66343750000001">
									<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'P')))" operator="lessOrEqual" value="34.98299980163574"/>
								</Node>
							</Node>
							<Node score="113.33800000000001">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="135.4749984741211"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="50" weight="3.243632483338361">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="142.21999999999997">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="242.99999237060547"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="96.6500015258789"/>
								<Node score="62.89090909090907">
									<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="82.92799949645996"/>
								</Node>
							</Node>
							<Node score="90.13482758620685">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="161.83499908447266"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="51" weight="3.387411894090298">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="104.54285714285717">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="292.0874938964844"/>
							<Node score="75.241875">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13412.26220703125"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="6753.586181640625"/>
								</Node>
							</Node>
							<Node score="124.25142857142853">
								<SimplePredicate field="double(float(('med-dfs', 'SS')))" operator="lessOrEqual" value="4.75"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="52" weight="2.3766201270099625">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="117.92850112915039"/>
								<Node score="83.18030303030308">
									<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.949999809265137"/>
								</Node>
							</Node>
							<Node score="110.67458333333339">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="307.75"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="53" weight="2.3791867573358014">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '2B')"/>
						<MiningField name="('med-dfs', 'C')"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', '3B')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '2B'):('med-dfs', 'C')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '2B')"/>
								<FieldRef field="('med-dfs', 'C')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '2B'):('med-dfs', 'C'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '2B'):('med-dfs', 'C')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '2B'):('med-dfs', 'C')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '2B'):('med-dfs', 'C'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="110.96222222222221">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="55.54666666666665">
								<SimplePredicate field="double(float(best-possible-score:('med-dfs', '3B')))" operator="lessOrEqual" value="484.5625"/>
								<Node score="81.84222222222225">
									<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'C')))" operator="lessOrEqual" value="2.25"/>
								</Node>
							</Node>
							<Node score="90.09083333333331">
								<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'OF')))" operator="lessOrEqual" value="15.300000190734863"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="54" weight="3.1605597125576805">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="best-possible-score"/>
						<MiningField name="('70.0th-pctl-dfs', 'C')"/>
						<MiningField name="double(float(team-70.0th_pctl^2))"/>
						<MiningField name="double(float(team-med:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="best-possible-score:('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="best-possible-score"/>
								<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(best-possible-score:('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
							<FieldRef field="best-possible-score:('70.0th-pctl-dfs', 'C')"/>
						</DerivedField>
						<DerivedField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
							<FieldRef field="float(best-possible-score:('70.0th-pctl-dfs', 'C'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="45.60000038146973"/>
							<Node score="72.85">
								<SimplePredicate field="double(float(team-70.0th_pctl^2))" operator="lessOrEqual" value="45.56500053405762"/>
								<Node score="100.27615384615385">
									<SimplePredicate field="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))" operator="lessOrEqual" value="87.8172492980957"/>
								</Node>
							</Node>
						</Node>
						<Node score="124.03749999999997">
							<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="224.6999969482422"/>
							<Node score="107.63">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="16.75"/>
							</Node>
						</Node>
						<Node score="136.5">
							<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="1161.4000244140625"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="55" weight="3.7731458712368258">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'OF')"/>
						<MiningField name="('70.0th-pctl-dfs', '3B')"/>
						<MiningField name="best-possible-score"/>
						<MiningField name="('med-dfs', 'P')"/>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B')^2))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('med-dfs', 'P')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'OF'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'OF')"/>
								<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'OF'):('70.0th-pctl-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '3B'))"/>
						</DerivedField>
						<DerivedField name="best-possible-score:('med-dfs', 'P')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="best-possible-score"/>
								<FieldRef field="('med-dfs', 'P')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(best-possible-score:('med-dfs', 'P'))" optype="continuous" dataType="float">
							<FieldRef field="best-possible-score:('med-dfs', 'P')"/>
						</DerivedField>
						<DerivedField name="double(float(best-possible-score:('med-dfs', 'P')))" optype="continuous" dataType="double">
							<FieldRef field="float(best-possible-score:('med-dfs', 'P'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="126.04999999999995">
							<SimplePredicate field="double(float(('med-dfs', 'C'):('med-dfs', 'P')))" operator="lessOrEqual" value="7.349999904632568"/>
							<Node score="113.93000000000002">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="104.75"/>
								<Node score="94.94666666666667">
									<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'P')))" operator="lessOrEqual" value="2061.48193359375"/>
								</Node>
							</Node>
							<Node score="153.0">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B')^2))" operator="lessOrEqual" value="341.18499755859375"/>
							</Node>
						</Node>
						<Node score="94.81454545454545">
							<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="14.000000476837158"/>
							<Node score="61.56153846153845">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="77.36795043945312"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="56" weight="2.804648541867625">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:('med-dfs', '3B')))"/>
						<MiningField name="double(float(team-med:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'SS')))"/>
						<MiningField name="double(float(team-med:team-70.0th_pctl))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', '1B')))"/>
					</MiningSchema>
					<Node score="136.5">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="79.88000106811523"/>
							<Node score="95.23818181818181">
								<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="119.71500015258789"/>
								<Node score="68.82058823529411">
									<SimplePredicate field="double(float(team_count:('med-dfs', '3B')))" operator="lessOrEqual" value="9.5"/>
								</Node>
							</Node>
						</Node>
						<Node score="119.06470588235294">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', '1B')))" operator="lessOrEqual" value="130.4000015258789"/>
							<Node score="102.37928571428571">
								<SimplePredicate field="double(float(team-med:team-70.0th_pctl))" operator="lessOrEqual" value="57.32499885559082"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'SS')))" operator="lessOrEqual" value="14.75"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="57" weight="3.4003074873099797">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(team_count:('med-dfs', '1B')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="8229.936279296875"/>
							<Node score="50.79999999999999">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="33.20000076293945"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="43.0"/>
							<Node score="89.53060606060609">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							</Node>
						</Node>
						<Node score="123.19695652173912">
							<SimplePredicate field="double(float(team_count:('med-dfs', '1B')))" operator="lessOrEqual" value="30.0"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="58" weight="3.391354849043866">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(team_count:('med-dfs', '3B')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="66.31176470588235">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.43349838256836"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(team_count:('med-dfs', '3B')))" operator="lessOrEqual" value="4.5"/>
							</Node>
							<Node score="82.59">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="18.649999618530273"/>
							</Node>
						</Node>
						<Node score="127.46960000000003">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="272.4347229003906"/>
							<Node score="103.22000000000001">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="55.0"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="59" weight="3.0413484580859538">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team_count"/>
						<MiningField name="('70.0th-pctl-dfs', 'P')"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', '2B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team_count:('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team_count"/>
								<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team_count:('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
							<FieldRef field="team_count:('70.0th-pctl-dfs', 'P')"/>
						</DerivedField>
						<DerivedField name="double(float(team_count:('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
							<FieldRef field="float(team_count:('70.0th-pctl-dfs', 'P'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="9197.6201171875"/>
							<Node score="69.55624999999999">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="45.18000030517578"/>
								<Node score="55.0">
									<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="21.25"/>
								</Node>
							</Node>
						</Node>
						<Node score="127.1976470588235">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="157.68000030517578"/>
							<Node score="94.285">
								<SimplePredicate field="double(float(best-possible-score:('med-dfs', '2B')))" operator="lessOrEqual" value="606.7575073242188"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="60" weight="4.167605304680198">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'P')^2))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B')^2))"/>
					</MiningSchema>
					<Node score="118.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.80849838256836"/>
							<Node score="66.33571428571427">
								<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.949999809265137"/>
								<Node score="85.17517241379315">
									<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="25.850000381469727"/>
								</Node>
							</Node>
						</Node>
						<Node score="72.9">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="55.0"/>
							<Node score="105.14200000000001">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'P')^2))" operator="lessOrEqual" value="986.1168823242188"/>
							</Node>
						</Node>
						<Node score="125.65374999999996">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B')^2))" operator="lessOrEqual" value="119.72000122070312"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="61" weight="3.3190874239461454">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:team-med))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="71.82823529411766">
								<SimplePredicate field="double(float(best-possible-score:team-med))" operator="lessOrEqual" value="811.6897277832031"/>
								<Node score="100.59187500000003">
									<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="20.899999618530273"/>
								</Node>
							</Node>
							<Node score="127.12555555555552">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="360.0749969482422"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="62" weight="3.858087016401313">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="135.5">
						<True/>
						<Node score="124.78199999999997">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="70.79999923706055"/>
							<Node score="112.47250000000003">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="42.125"/>
								<Node score="80.00749999999998">
									<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="810.6594848632812"/>
								</Node>
							</Node>
							<Node score="110.38">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="16.75"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="5.5"/>
						</Node>
						<Node score="61.8125">
							<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="87.89999771118164"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="63" weight="4.495653826410527">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('70.0th-pctl-dfs', 'P')"/>
						<MiningField name="team-70.0th_pctl"/>
						<MiningField name="('med-dfs', '3B')"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(team-70.0th_pctl))"/>
						<MiningField name="double(float(('med-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team-70.0th_pctl:('med-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-70.0th_pctl"/>
								<FieldRef field="('med-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-70.0th_pctl:('med-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="team-70.0th_pctl:('med-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(team-70.0th_pctl:('med-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-70.0th_pctl:('med-dfs', '3B'))"/>
						</DerivedField>
						<DerivedField name="float(('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', 'P'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="110.58842105263159">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', 'OF')))" operator="lessOrEqual" value="4.75"/>
							<Node score="97.64399999999999">
								<SimplePredicate field="double(float(team-70.0th_pctl))" operator="lessOrEqual" value="6.75"/>
								<Node score="50.79999999999999">
									<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="291.84499740600586"/>
								</Node>
							</Node>
						</Node>
						<Node score="84.09375">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="127.5"/>
							<Node score="66.26666666666667">
								<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', '3B')))" operator="lessOrEqual" value="16.325000286102295"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="-2.7357497215270996"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="64" weight="3.8278775534333227">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('med-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="55.628571428571426">
						<True/>
						<Node score="122.96399999999998">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'P')))" operator="lessOrEqual" value="57.52499961853027"/>
							<Node score="89.65499999999999">
								<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="36.357398986816406"/>
								<Node score="72.0">
									<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="7885.1201171875"/>
								</Node>
							</Node>
							<Node score="110.19000000000005">
								<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', '2B')))" operator="lessOrEqual" value="33.89999961853027"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="86.18500137329102"/>
						</Node>
						<Node score="115.56999999999998">
							<SimplePredicate field="double(float(('med-dfs', 'C'):('med-dfs', 'P')))" operator="lessOrEqual" value="42.0625"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="65" weight="3.164349028945498">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'SS')"/>
						<MiningField name="('70.0th-pctl-dfs', '3B')"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '2B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'SS')"/>
								<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))" operator="lessOrEqual" value="93.3552474975586"/>
							<Node score="109.7">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1206.3599853515625"/>
								<Node score="84.29999999999997">
									<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="1471.608154296875"/>
								</Node>
							</Node>
							<Node score="123.76249999999999">
								<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="200.5500030517578"/>
							</Node>
						</Node>
						<Node score="90.28666666666668">
							<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="60.19000053405762"/>
							<Node score="68.33333333333334">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="26.800000190734863"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="66" weight="3.149175409696311">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B')^2))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B')^2))" operator="lessOrEqual" value="0.9050000011920929"/>
						</Node>
						<Node score="107.7291111111111">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="292.0874938964844"/>
							<Node score="67.95">
								<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="233.75"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="67" weight="4.10420701367305">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'SS')"/>
						<MiningField name="('70.0th-pctl-dfs', 'OF')"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', 'P')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', 'SS')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'SS'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'SS')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'SS'):('70.0th-pctl-dfs', 'OF')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'OF'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="118.3">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="7159.592529296875"/>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'SS')))" operator="lessOrEqual" value="114.9000015258789"/>
							<Node score="89.46019607843138">
								<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="131.5999984741211"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'P')))" operator="lessOrEqual" value="-113.75869888067245"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="68" weight="3.0696108603231673">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'C')"/>
						<MiningField name="('70.0th-pctl-dfs', '2B')"/>
						<MiningField name="('70.0th-pctl-dfs', '3B')"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(team-med:('med-dfs', '2B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'C'):('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'C')"/>
								<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'C'):('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'C'):('70.0th-pctl-dfs', '2B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'C'):('70.0th-pctl-dfs', '2B'))"/>
						</DerivedField>
						<DerivedField name="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
								<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="95.9000015258789"/>
							<Node score="55.00000000000001">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="18.600000381469727"/>
								<Node score="72.0">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="16.5"/>
								</Node>
							</Node>
						</Node>
						<Node score="113.17575757575761">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="88.53636363636367">
								<SimplePredicate field="double(float(team-med:('med-dfs', '2B')))" operator="lessOrEqual" value="7.75"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="69" weight="2.418182237121298">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '1B')"/>
						<MiningField name="('med-dfs', '3B')"/>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(team-70.0th_pctl^2))"/>
						<MiningField name="double(float(('med-dfs', 'OF')))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '1B'):('med-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '1B')"/>
								<FieldRef field="('med-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '1B'):('med-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '1B'):('med-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '1B'):('med-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '1B'):('med-dfs', '3B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="745.125"/>
							<Node score="63.31827586206897">
								<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.949999809265137"/>
								<Node score="102.9693333333333">
									<SimplePredicate field="double(float(('med-dfs', 'OF')))" operator="lessOrEqual" value="3.75"/>
								</Node>
							</Node>
						</Node>
						<Node score="122.02499999999998">
							<SimplePredicate field="double(float(team-70.0th_pctl^2))" operator="lessOrEqual" value="225.63999938964844"/>
							<Node score="108.52142857142859">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', '3B')))" operator="lessOrEqual" value="51.375"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="70" weight="3.3979954029049693">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '2B')"/>
						<MiningField name="('70.0th-pctl-dfs', '2B')"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(team_count^2))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '2B'):('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '2B')"/>
								<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '2B'):('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '2B'):('70.0th-pctl-dfs', '2B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '2B'):('70.0th-pctl-dfs', '2B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="858.4499816894531"/>
								<Node score="76.75965517241382">
									<SimplePredicate field="double(float(team_count^2))" operator="lessOrEqual" value="6.5"/>
								</Node>
							</Node>
							<Node score="116.23363636363636">
								<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="219.625"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="71" weight="2.8918185241231256">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="148.875">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="57.42083333333334">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.80849838256836"/>
								<Node score="89.48379310344825">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="25.25"/>
								</Node>
							</Node>
							<Node score="107.00055555555556">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="213.94000244140625"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="72" weight="3.2351234331546794">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'OF')^2))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'P')))" operator="lessOrEqual" value="57.52499961853027"/>
							<Node score="88.78428571428572">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.80849838256836"/>
								<Node score="63.400000000000006">
									<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="13.349999904632568"/>
								</Node>
							</Node>
							<Node score="110.22769230769231">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'OF')^2))" operator="lessOrEqual" value="327.0800018310547"/>
							</Node>
						</Node>
						<Node score="59.25">
							<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="45.619998931884766"/>
							<Node score="93.05250000000002">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="242.67000579833984"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="73" weight="3.8027022789067106">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="7199.9326171875"/>
						</Node>
						<Node score="119.94657142857143">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="84.26950000000002">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="17290.8798828125"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="74" weight="2.488420946059176">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="118.69434782608697">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="270.6269989013672"/>
						</Node>
						<Node score="92.62000000000002">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="117.92850112915039"/>
							<Node score="69.21153846153845">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="142.7610092163086"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'P')))" operator="lessOrEqual" value="-75.20675200223923"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="75" weight="3.924406466990525">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')))"/>
					</MiningSchema>
					<Node score="59.25">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="19.0"/>
							<Node score="78.0181818181818">
								<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="27.600000381469727"/>
								<Node score="116.63000000000002">
									<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="12.855000019073486"/>
								</Node>
							</Node>
						</Node>
						<Node score="131.43999999999997">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="167.8778533935547"/>
							<Node score="111.09142857142858">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="151.875"/>
							</Node>
						</Node>
						<Node score="86.5">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="42.0"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="76" weight="3.6599320234176056">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('med-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="114.15305555555558">
							<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="319.50799560546875"/>
							<Node score="71.46142857142857">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="9602.26611328125"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(('med-dfs', '3B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="6.5"/>
								</Node>
							</Node>
							<Node score="92.18">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="1.550000011920929"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="77" weight="3.858928529753385">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-med:('med-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('med-dfs', 'OF')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'C')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', 'C'):('med-dfs', 'OF')))" operator="lessOrEqual" value="12.0"/>
							<Node score="68.47142857142858">
								<SimplePredicate field="double(float(team-med:('med-dfs', '2B')))" operator="lessOrEqual" value="22.875"/>
								<Node score="83.9833333333333">
									<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="10.487099647521973"/>
								</Node>
							</Node>
						</Node>
						<Node score="76.2">
							<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="3647.0"/>
							<Node score="113.0409523809524">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="86.92499923706055"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="78" weight="3.979822896834125">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="108.23825000000004">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="614.2993469238281"/>
								<Node score="68.776">
									<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="91.6364517211914"/>
								</Node>
							</Node>
							<Node score="153.0">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="-39.384124755859375"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="79" weight="3.652204677222202">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '1B')"/>
						<MiningField name="('med-dfs', 'C')"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-med:('med-dfs', 'C')))"/>
						<MiningField name="double(float(team_count:team-med))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '1B'):('med-dfs', 'C')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '1B')"/>
								<FieldRef field="('med-dfs', 'C')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '1B'):('med-dfs', 'C'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '1B'):('med-dfs', 'C')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '1B'):('med-dfs', 'C')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '1B'):('med-dfs', 'C'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="89.0">
							<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="158.02999877929688"/>
							<Node score="103.40916666666668">
								<SimplePredicate field="double(float(team_count:team-med))" operator="lessOrEqual" value="13.25"/>
								<Node score="79.52157894736843">
									<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="2133.799072265625"/>
								</Node>
							</Node>
							<Node score="0.0">
								<SimplePredicate field="double(float(team-med:('med-dfs', 'C')))" operator="lessOrEqual" value="41.625"/>
							</Node>
						</Node>
						<Node score="118.0">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', 'C')))" operator="lessOrEqual" value="79.125"/>
							<Node score="126.04999999999995">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="2327.719970703125"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="80" weight="2.905044626544728">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team-med"/>
						<MiningField name="('70.0th-pctl-dfs', 'C')"/>
						<MiningField name="('med-dfs', 'C')"/>
						<MiningField name="('70.0th-pctl-dfs', '3B')"/>
						<MiningField name="double(float(team-70.0th_pctl^2))"/>
						<MiningField name="double(float(('med-dfs', 'OF')^2))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team-med:('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-med"/>
								<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-med:('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
							<FieldRef field="team-med:('70.0th-pctl-dfs', 'C')"/>
						</DerivedField>
						<DerivedField name="double(float(team-med:('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-med:('70.0th-pctl-dfs', 'C'))"/>
						</DerivedField>
						<DerivedField name="('med-dfs', 'C'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'C')"/>
								<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'C'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'C'):('70.0th-pctl-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'C'):('70.0th-pctl-dfs', '3B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="21.399999618530273"/>
							<Node score="71.28333333333332">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="13.5"/>
								<Node score="96.51416666666667">
									<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="326.33551025390625"/>
								</Node>
							</Node>
						</Node>
						<Node score="112.08785714285717">
							<SimplePredicate field="double(float(('med-dfs', 'OF')^2))" operator="lessOrEqual" value="169.0"/>
							<Node score="69.5">
								<SimplePredicate field="double(float(team-70.0th_pctl^2))" operator="lessOrEqual" value="25.040000915527344"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="81" weight="3.203600252233615">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="138.403">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="243.78199768066406"/>
							</Node>
							<Node score="94.67725490196077">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="55.0"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="82" weight="3.317857852136345">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(team-med:('med-dfs', 'C')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'C')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="243.48249053955078"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(team-med:('med-dfs', 'C')))" operator="lessOrEqual" value="13.125"/>
								<Node score="88.58955555555556">
									<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="26.600000381469727"/>
								</Node>
							</Node>
							<Node score="110.70421052631579">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="140.10000610351562"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="83" weight="4.211475517378363">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', 'OF')^2))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '2B')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'OF')))" operator="lessOrEqual" value="38.47500038146973"/>
							<Node score="103.24789473684213">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="81.95000076293945"/>
								<Node score="83.73350000000002">
									<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="117.92850112915039"/>
								</Node>
							</Node>
						</Node>
						<Node score="113.8">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="235.3499984741211"/>
							<Node score="126.05000000000004">
								<SimplePredicate field="double(float(('med-dfs', 'OF')^2))" operator="lessOrEqual" value="37.0"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="84" weight="4.642459859662975">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '3B')"/>
						<MiningField name="('med-dfs', 'C')"/>
						<MiningField name="team-med"/>
						<MiningField name="('70.0th-pctl-dfs', 'OF')"/>
						<MiningField name="('med-dfs', 'P')"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '3B'):('med-dfs', 'C')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '3B')"/>
								<FieldRef field="('med-dfs', 'C')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '3B'):('med-dfs', 'C'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '3B'):('med-dfs', 'C')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '3B'):('med-dfs', 'C')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '3B'):('med-dfs', 'C'))"/>
						</DerivedField>
						<DerivedField name="team-med:('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-med"/>
								<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-med:('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
							<FieldRef field="team-med:('70.0th-pctl-dfs', 'OF')"/>
						</DerivedField>
						<DerivedField name="double(float(team-med:('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-med:('70.0th-pctl-dfs', 'OF'))"/>
						</DerivedField>
						<DerivedField name="team-med:('med-dfs', 'P')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-med"/>
								<FieldRef field="('med-dfs', 'P')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-med:('med-dfs', 'P'))" optype="continuous" dataType="float">
							<FieldRef field="team-med:('med-dfs', 'P')"/>
						</DerivedField>
						<DerivedField name="double(float(team-med:('med-dfs', 'P')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-med:('med-dfs', 'P'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="120.57692307692311">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="82.17499923706055"/>
							<Node score="72.0">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('med-dfs', 'C')))" operator="lessOrEqual" value="1.25"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="745.125"/>
							<Node score="87.25225806451617">
								<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="65.5"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(team-med:('med-dfs', 'P')))" operator="lessOrEqual" value="-97.30874633789062"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="85" weight="3.154998399385901">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(team-70.0th_pctl^2))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="69.5">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="42.720001220703125"/>
							<Node score="106.97857142857143">
								<SimplePredicate field="double(float(team-70.0th_pctl^2))" operator="lessOrEqual" value="45.56500053405762"/>
								<Node score="83.41000000000001">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="280.34571838378906"/>
								</Node>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="146.3470001220703"/>
							<Node score="121.36937499999999">
								<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="25.5"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="86" weight="4.252119859279084">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'OF')"/>
						<MiningField name="('70.0th-pctl-dfs', '2B')"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))"/>
						<MiningField name="double(float(team-med:('70.0th-pctl-dfs', '1B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'OF')"/>
								<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="84.77899932861328"/>
							<Node score="72.0">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="22.0"/>
							</Node>
						</Node>
						<Node score="128.465625">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))" operator="lessOrEqual" value="38.81837558746338"/>
							<Node score="96.4">
								<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="274.40699768066406"/>
							</Node>
						</Node>
						<Node score="93.60717391304348">
							<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="149.75"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="87" weight="2.5128524246987727">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(team_count:('med-dfs', '1B')))"/>
						<MiningField name="double(float(team-med:('70.0th-pctl-dfs', '1B')))"/>
					</MiningSchema>
					<Node score="100.065">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="6.525000095367432"/>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="43.0"/>
							<Node score="94.17310344827587">
								<SimplePredicate field="double(float(team_count:('med-dfs', '1B')))" operator="lessOrEqual" value="15.5"/>
							</Node>
						</Node>
						<Node score="120.88387096774193">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="371.09999084472656"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="88" weight="3.941739253565236">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team_count"/>
						<MiningField name="('med-dfs', 'SS')"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', '2B')))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team_count:('med-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team_count"/>
								<FieldRef field="('med-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team_count:('med-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="team_count:('med-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(team_count:('med-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(team_count:('med-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="745.125"/>
							<Node score="120.5325">
								<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="59.353126525878906"/>
								<Node score="86.51166666666666">
									<SimplePredicate field="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="44.75"/>
								</Node>
							</Node>
							<Node score="72.68571428571428">
								<SimplePredicate field="double(float(team_count:('med-dfs', 'SS')))" operator="lessOrEqual" value="17.5"/>
							</Node>
						</Node>
						<Node score="107.58055555555558">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', '2B')))" operator="lessOrEqual" value="1774.5"/>
							<Node score="121.13055555555553">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="127.6875"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="89" weight="3.140753084170744">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'OF'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="86.5">
						<True/>
						<Node score="76.49428571428572">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="204.5449981689453"/>
							<Node score="123.0">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('med-dfs', 'P')))" operator="lessOrEqual" value="8.416749954223633"/>
								<Node score="90.84321428571427">
									<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="410.41050720214844"/>
								</Node>
							</Node>
							<Node score="0.0">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="19.649999618530273"/>
							</Node>
						</Node>
						<Node score="110.86625000000001">
							<SimplePredicate field="double(float(('med-dfs', 'OF'):('med-dfs', 'P')))" operator="lessOrEqual" value="103.46075057983398"/>
							<Node score="119.62714285714284">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="232.91287994384766"/>
							</Node>
						</Node>
						<Node score="100.0">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="19.09999990463257"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="90" weight="4.170175908281655">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('70.0th-pctl-dfs', '2B')"/>
						<MiningField name="('med-dfs', 'OF')"/>
						<MiningField name="('70.0th-pctl-dfs', 'P')"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('med-dfs', 'OF')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="float(('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', '2B'))"/>
						</DerivedField>
						<DerivedField name="('med-dfs', 'OF'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'OF')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'OF'):('70.0th-pctl-dfs', 'P')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'P'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="126.04999999999995">
						<True/>
						<Node score="69.5">
							<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="1075.2699584960938"/>
							<Node score="93.94750000000002">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="51.650001525878906"/>
								<Node score="83.36833333333333">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="6.650000095367432"/>
								</Node>
							</Node>
							<Node score="59.25">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="55.25"/>
							</Node>
						</Node>
						<Node score="81.5">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="90.3499984741211"/>
							<Node score="108.60178571428567">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="15.625"/>
							</Node>
						</Node>
						<Node score="118.0">
							<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="109.42494583129883"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="91" weight="4.1542548751023185">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '1B')"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(team-med:team-70.0th_pctl))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '1B')^2" optype="continuous" dataType="double">
							<Apply function="pow">
								<FieldRef field="('med-dfs', '1B')"/>
								<Constant dataType="integer">2</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '1B')^2)" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '1B')^2"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '1B')^2))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '1B')^2)"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="105.05516129032256">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(('med-dfs', '1B')^2))" operator="lessOrEqual" value="0.5"/>
								<Node score="97.43">
									<SimplePredicate field="double(float(team-med:team-70.0th_pctl))" operator="lessOrEqual" value="19.675000190734863"/>
								</Node>
							</Node>
							<Node score="82.71307692307693">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="116.5"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="92" weight="3.670148838826397">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('med-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="50.79999999999999">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="8498.834716796875"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('med-dfs', 'OF')))" operator="lessOrEqual" value="8.75"/>
							</Node>
						</Node>
						<Node score="134.10999999999999">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="97.46173913043476">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="55.75"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="93" weight="2.645687210551649">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'SS')^2))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="7757.962646484375"/>
							<Node score="73.22">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="16.40000057220459"/>
								<Node score="50.79999999999999">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'SS')^2))" operator="lessOrEqual" value="24.260000228881836"/>
								</Node>
							</Node>
						</Node>
						<Node score="108.4187878787879">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="83.50391304347828">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="117.92850112915039"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="94" weight="3.4676336702211437">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(team-med:('70.0th-pctl-dfs', '1B')))"/>
					</MiningSchema>
					<Node score="118.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="54.0"/>
							<Node score="92.45090909090908">
								<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="149.75"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="1.7499999403953552"/>
								</Node>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'C'):('med-dfs', 'P')))" operator="lessOrEqual" value="-39.804874420166016"/>
						</Node>
						<Node score="124.52499999999998">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="122.42500305175781"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="95" weight="3.512194423618234">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(team-70.0th_pctl))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', '1B')))"/>
					</MiningSchema>
					<Node score="110.245">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))" operator="lessOrEqual" value="32.846375465393066"/>
							<Node score="123.0">
								<SimplePredicate field="double(float(team-70.0th_pctl))" operator="lessOrEqual" value="12.599999904632568"/>
								<Node score="126.04999999999995">
									<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', '1B')))" operator="lessOrEqual" value="32.97499942779541"/>
								</Node>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="139.81382751464844"/>
							<Node score="73.16647058823527">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="50.75"/>
							</Node>
						</Node>
						<Node score="94.43111111111115">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="12045.20263671875"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="96" weight="2.8141697349164105">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(team-70.0th_pctl))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B')^2))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="63.39583333333332">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="52.10000038146973"/>
							<Node score="98.01428571428573">
								<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'P')))" operator="lessOrEqual" value="57.52499961853027"/>
								<Node score="82.62380952380951">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B')^2))" operator="lessOrEqual" value="44.2450008392334"/>
								</Node>
							</Node>
							<Node score="0.0">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="63.28095245361328"/>
							</Node>
						</Node>
						<Node score="115.08833333333332">
							<SimplePredicate field="double(float(team-70.0th_pctl))" operator="lessOrEqual" value="15.0"/>
							<Node score="123.76249999999999">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="100.84450149536133"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="97" weight="3.5571347163666136">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('70.0th-pctl-dfs', '1B')"/>
						<MiningField name="('70.0th-pctl-dfs', 'OF')"/>
						<MiningField name="('med-dfs', '2B')"/>
						<MiningField name="('med-dfs', 'SS')"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'P')^2))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF'))"/>
						</DerivedField>
						<DerivedField name="('med-dfs', '2B'):('med-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '2B')"/>
								<FieldRef field="('med-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '2B'):('med-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '2B'):('med-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '2B'):('med-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '2B'):('med-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="118.0">
						<True/>
						<Node score="96.19037735849055">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="260.76000213623047"/>
							<Node score="74.25833333333333">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'P')^2))" operator="lessOrEqual" value="314.7091979980469"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="30.97000026702881"/>
								</Node>
							</Node>
							<Node score="62.69999999999999">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="62.40756034851074"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'SS')))" operator="lessOrEqual" value="196.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="98" weight="3.228900424423203">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team-70.0th_pctl"/>
						<MiningField name="('70.0th-pctl-dfs', '1B')"/>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(team-med:team-70.0th_pctl))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team-70.0th_pctl:('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-70.0th_pctl"/>
								<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-70.0th_pctl:('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
							<FieldRef field="team-70.0th_pctl:('70.0th-pctl-dfs', '1B')"/>
						</DerivedField>
						<DerivedField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-70.0th_pctl:('70.0th-pctl-dfs', '1B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="106.2746153846154">
							<SimplePredicate field="double(float(team-med:team-70.0th_pctl))" operator="lessOrEqual" value="78.67499923706055"/>
							<Node score="55.0">
								<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="191.8000030517578"/>
								<Node score="73.52499999999999">
									<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="19.100000381469727"/>
								</Node>
							</Node>
							<Node score="92.59777777777776">
								<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="27.649999618530273"/>
							</Node>
						</Node>
						<Node score="123.0">
							<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="234.50000381469727"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="99" weight="2.9574614428989516">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="67.85714285714286">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="89.0250015258789"/>
							</Node>
							<Node score="96.84459459459457">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="111.68563079833984"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="100" weight="3.761746112341317">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '2B')"/>
						<MiningField name="('70.0th-pctl-dfs', '3B')"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(('med-dfs', 'P')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '2B'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '2B')"/>
								<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '2B'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '2B'):('70.0th-pctl-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '2B'):('70.0th-pctl-dfs', '3B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'C'):('med-dfs', 'P')))" operator="lessOrEqual" value="7.349999904632568"/>
							<Node score="94.85647058823528">
								<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="60.70000076293945"/>
								<Node score="72.44999999999999">
									<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="11.300000190734863"/>
								</Node>
							</Node>
							<Node score="126.04999999999995">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="25.800000190734863"/>
							</Node>
						</Node>
						<Node score="64.375">
							<SimplePredicate field="double(float(('med-dfs', 'P')))" operator="lessOrEqual" value="13.974999904632568"/>
							<Node score="104.31">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="69.9224967956543"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
		</Segmentation>
	</MiningModel>
</PMML>
