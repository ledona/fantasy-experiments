<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<PMML xmlns="http://www.dmg.org/PMML-4_4" xmlns:data="http://jpmml.org/jpmml-model/InlineTable" version="4.4">
	<Header>
		<Application name="SkLearn2PMML package" version="0.88.1"/>
		<Timestamp>2022-12-13T02:24:17Z</Timestamp>
	</Header>
	<MiningBuildTask>
		<Extension name="repr">PMMLPipeline(steps=[('mapper', DataFrameMapper(drop_cols=[],
                features=[(['best-possible-score'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team_count'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team-med'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team-70.0th_pctl'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('med-dfs', '1B')"],
                           Continuo...
                          (["('70.0th-pctl-dfs', 'C')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'OF')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'P')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'SS')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['service'],
                           [CategoricalDomain(), OneHotEncoder()])])),
       ('variancethreshold', SelectorProxy(selector=VarianceThreshold(threshold=0.005))),
       ('polynomialfeatures', PolynomialFeatures(include_bias=False)),
       ('adaboostregressor', AdaBoostRegressor(learning_rate=0.5, n_estimators=100))])</Extension>
	</MiningBuildTask>
	<DataDictionary>
		<DataField name="last_winning_score" optype="continuous" dataType="double"/>
		<DataField name="best-possible-score" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="80.0" rightMargin="178.0"/>
		</DataField>
		<DataField name="team_count" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="2.0" rightMargin="3.0"/>
		</DataField>
		<DataField name="team-med" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="1.0" rightMargin="15.0"/>
		</DataField>
		<DataField name="team-70.0th_pctl" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="1.7" rightMargin="15.8"/>
		</DataField>
		<DataField name="('med-dfs', '1B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="17.0"/>
		</DataField>
		<DataField name="('med-dfs', '2B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="17.0"/>
		</DataField>
		<DataField name="('med-dfs', '3B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="22.0"/>
		</DataField>
		<DataField name="('med-dfs', 'C')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="17.0"/>
		</DataField>
		<DataField name="('med-dfs', 'OF')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="17.0"/>
		</DataField>
		<DataField name="('med-dfs', 'P')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="-14.4745" rightMargin="28.275"/>
		</DataField>
		<DataField name="('med-dfs', 'SS')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="20.5"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="25.399999999999995"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="21.0"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="1.5999999999999943" rightMargin="26.0"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.0" rightMargin="19.9"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="2.0" rightMargin="25.4"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="-14.3215" rightMargin="32.775"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.7999999999999998" rightMargin="22.5"/>
		</DataField>
	</DataDictionary>
	<MiningModel functionName="regression" algorithmName="sklearn.ensemble._weight_boosting.AdaBoostRegressor">
		<MiningSchema>
			<MiningField name="last_winning_score" usageType="target"/>
			<MiningField name="best-possible-score" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="team_count" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="team-med" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="team-70.0th_pctl" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', '1B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', '2B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', '3B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', 'C')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', 'OF')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', 'P')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', 'SS')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', '1B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', '2B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', '3B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'C')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'OF')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'P')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'SS')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
		</MiningSchema>
		<ModelStats>
			<UnivariateStats field="best-possible-score">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="80.0" maximum="178.0" mean="114.67825" standardDeviation="22.92067576162716" median="112.59625" interQuartileRange="26.374750000000006"/>
			</UnivariateStats>
			<UnivariateStats field="team_count">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="2.0" maximum="3.0" mean="2.0428571428571427" standardDeviation="0.2025349554108261" median="2.0" interQuartileRange="0.0"/>
			</UnivariateStats>
			<UnivariateStats field="team-med">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="1.0" maximum="15.0" mean="4.65" standardDeviation="2.6435230821224702" median="4.25" interQuartileRange="2.875"/>
			</UnivariateStats>
			<UnivariateStats field="team-70.0th_pctl">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="1.7" maximum="15.8" mean="5.578571428571428" standardDeviation="2.7676133533189544" median="5.05" interQuartileRange="3.3749999999999996"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', '1B')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="17.0" mean="5.035714285714286" standardDeviation="4.437922155831994" median="4.0" interQuartileRange="3.875"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', '2B')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="17.0" mean="4.764285714285714" standardDeviation="3.9818529683081585" median="4.0" interQuartileRange="4.375"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', '3B')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="22.0" mean="5.728571428571429" standardDeviation="4.874632377556951" median="4.0" interQuartileRange="4.0"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', 'C')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="17.0" mean="3.7785714285714285" standardDeviation="4.0032448573320005" median="2.5" interQuartileRange="5.875"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', 'OF')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="17.0" mean="4.507142857142857" standardDeviation="2.4661897406190576" median="4.0" interQuartileRange="3.0"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', 'P')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="-14.4745" maximum="28.275" mean="12.918500000000003" standardDeviation="7.710225168566739" median="13.452" interQuartileRange="8.934875000000002"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', 'SS')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="20.5" mean="6.507142857142857" standardDeviation="4.561087634343728" median="5.5" interQuartileRange="5.375"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', '1B')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="25.399999999999995" mean="8.507142857142858" standardDeviation="5.91318916680745" median="7.299999999999999" interQuartileRange="8.224999999999998"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', '2B')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="21.0" mean="7.402857142857142" standardDeviation="4.570588315635134" median="6.349999999999998" interQuartileRange="3.95"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', '3B')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="1.5999999999999943" maximum="26.0" mean="8.528571428571427" standardDeviation="5.564380156909865" median="6.85" interQuartileRange="6.375"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'C')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.0" maximum="19.9" mean="5.721428571428571" standardDeviation="4.410892130596156" median="5.0" interQuartileRange="4.425000000000002"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'OF')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="2.0" maximum="25.4" mean="8.49285714285714" standardDeviation="4.377224215954067" median="7.6" interQuartileRange="4.125000000000001"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'P')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="-14.3215" maximum="32.775" mean="16.71498" standardDeviation="8.131225445573554" median="17.87575" interQuartileRange="10.128525000000002"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'SS')">
				<Counts totalFreq="70" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.7999999999999998" maximum="22.5" mean="9.128571428571426" standardDeviation="5.142960316425407" median="8.349999999999998" interQuartileRange="6.350000000000002"/>
			</UnivariateStats>
		</ModelStats>
		<LocalTransformations>
			<DerivedField name="best-possible-score:('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '2B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:team_count" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="team_count"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:team_count)" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:team_count"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:team_count))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:team_count)"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '1B')"/>
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="team_count:('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="team_count:('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:team-70.0th_pctl" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="team-70.0th_pctl"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:team-70.0th_pctl)" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:team-70.0th_pctl"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:team-70.0th_pctl))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:team-70.0th_pctl)"/>
			</DerivedField>
			<DerivedField name="best-possible-score:('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('70.0th-pctl-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('70.0th-pctl-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="team_count:team-70.0th_pctl" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="team-70.0th_pctl"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:team-70.0th_pctl)" optype="continuous" dataType="float">
				<FieldRef field="team_count:team-70.0th_pctl"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:team-70.0th_pctl))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:team-70.0th_pctl)"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '1B'):('med-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '1B')"/>
					<FieldRef field="('med-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '1B'):('med-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '1B'):('med-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '1B'):('med-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '1B'):('med-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '2B')^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '2B')^2)" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '2B')^2"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '2B')^2))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '2B')^2)"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'P'):('med-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'P')"/>
					<FieldRef field="('med-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'P'):('med-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'P'):('med-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'P'):('med-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="best-possible-score"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score^2)" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score^2"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score^2))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score^2)"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'P')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'OF')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="float(best-possible-score)" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score)"/>
			</DerivedField>
			<DerivedField name="team_count:('med-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="('med-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:('med-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="team_count:('med-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:('med-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:('med-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'SS')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:('med-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('med-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('med-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('med-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('med-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('med-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="team_count:team-med" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="team-med"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:team-med)" optype="continuous" dataType="float">
				<FieldRef field="team_count:team-med"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:team-med))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:team-med)"/>
			</DerivedField>
			<DerivedField name="team-med:('med-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-med"/>
					<FieldRef field="('med-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-med:('med-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="team-med:('med-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(team-med:('med-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-med:('med-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '1B'):('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '1B')"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '1B'):('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '1B'):('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '1B'):('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="team-70.0th_pctl"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl^2)" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl^2"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl^2))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl^2)"/>
			</DerivedField>
			<DerivedField name="best-possible-score:('med-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('med-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('med-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('med-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('med-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('med-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('med-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('med-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('med-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('med-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('med-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('med-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'SS')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '1B'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '1B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '1B'):('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'P')"/>
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B'):('med-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '3B')"/>
					<FieldRef field="('med-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B'):('med-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B'):('med-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B'):('med-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B'):('med-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('70.0th-pctl-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('70.0th-pctl-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B'):('med-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '3B')"/>
					<FieldRef field="('med-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B'):('med-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B'):('med-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B'):('med-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B'):('med-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('70.0th-pctl-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('70.0th-pctl-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'P'):('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'P')"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'P'):('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'P'):('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'P'):('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:('med-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('med-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('med-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('med-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('med-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('med-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', 'P')^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'P')^2)" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'P')^2"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'P')^2))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'P')^2)"/>
			</DerivedField>
			<DerivedField name="team_count:('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="team_count:('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '1B'):('med-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '1B')"/>
					<FieldRef field="('med-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '1B'):('med-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '1B'):('med-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '1B'):('med-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '1B'):('med-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="team_count:('med-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="('med-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:('med-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="team_count:('med-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:('med-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:('med-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'OF')"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '2B'):('med-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '2B')"/>
					<FieldRef field="('med-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '2B'):('med-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '2B'):('med-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '2B'):('med-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '2B'):('med-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B'):('70.0th-pctl-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B'):('70.0th-pctl-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'C'):('med-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'C')"/>
					<FieldRef field="('med-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'C'):('med-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'C'):('med-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'C'):('med-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'C'):('med-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'P')"/>
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="team_count:('med-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="('med-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:('med-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="team_count:('med-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:('med-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:('med-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '1B')^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="('med-dfs', '1B')"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '1B')^2)" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '1B')^2"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '1B')^2))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '1B')^2)"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'P')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'SS')"/>
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="best-possible-score:('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="best-possible-score"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(best-possible-score:('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="best-possible-score:('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(best-possible-score:('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '1B')^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '1B')^2)" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '1B')^2"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '1B')^2))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '1B')^2)"/>
			</DerivedField>
			<DerivedField name="team_count:('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team_count"/>
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team_count:('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="team_count:('70.0th-pctl-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(team_count:('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team_count:('70.0th-pctl-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B')^2" optype="continuous" dataType="double">
				<Apply function="pow">
					<FieldRef field="('med-dfs', '3B')"/>
					<Constant dataType="integer">2</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B')^2)" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B')^2"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B')^2))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B')^2)"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('70.0th-pctl-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '1B'):('med-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '1B')"/>
					<FieldRef field="('med-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '1B'):('med-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '1B'):('med-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '1B'):('med-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('med-dfs', '3B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('med-dfs', '3B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('med-dfs', '3B'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('med-dfs', '3B')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('med-dfs', '3B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('med-dfs', '3B'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'C'):('med-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'C')"/>
					<FieldRef field="('med-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'C'):('med-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'C'):('med-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'C'):('med-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'C'):('med-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('med-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('med-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('med-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('med-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('med-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('med-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '3B'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '3B')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '3B'):('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('70.0th-pctl-dfs', 'C')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'C'))"/>
			</DerivedField>
			<DerivedField name="team-med:('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-med"/>
					<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-med:('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="team-med:('70.0th-pctl-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(team-med:('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-med:('70.0th-pctl-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="team-med:('med-dfs', '2B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-med"/>
					<FieldRef field="('med-dfs', '2B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-med:('med-dfs', '2B'))" optype="continuous" dataType="float">
				<FieldRef field="team-med:('med-dfs', '2B')"/>
			</DerivedField>
			<DerivedField name="double(float(team-med:('med-dfs', '2B')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-med:('med-dfs', '2B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'OF'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'OF')"/>
					<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'OF'):('70.0th-pctl-dfs', 'OF')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'OF'))"/>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl)" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl)"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'OF')"/>
					<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', '2B'):('med-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', '2B')"/>
					<FieldRef field="('med-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', '2B'):('med-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', '2B'):('med-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', '2B'):('med-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', '2B'):('med-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="('med-dfs', 'OF'):('med-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="('med-dfs', 'OF')"/>
					<FieldRef field="('med-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(('med-dfs', 'OF'):('med-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="('med-dfs', 'OF'):('med-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(('med-dfs', 'OF'):('med-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(('med-dfs', 'OF'):('med-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('med-dfs', 'SS')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('med-dfs', 'SS')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('med-dfs', 'SS'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('med-dfs', 'SS')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('med-dfs', 'SS')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('med-dfs', 'SS'))"/>
			</DerivedField>
			<DerivedField name="team-70.0th_pctl:('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
				<Apply function="*">
					<FieldRef field="team-70.0th_pctl"/>
					<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
				</Apply>
			</DerivedField>
			<DerivedField name="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
				<FieldRef field="team-70.0th_pctl:('70.0th-pctl-dfs', 'P')"/>
			</DerivedField>
			<DerivedField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
				<FieldRef field="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P'))"/>
			</DerivedField>
			<DerivedField name="float(team-med)" optype="continuous" dataType="float">
				<FieldRef field="team-med"/>
			</DerivedField>
			<DerivedField name="double(float(team-med))" optype="continuous" dataType="double">
				<FieldRef field="float(team-med)"/>
			</DerivedField>
		</LocalTransformations>
		<Segmentation multipleModelMethod="weightedMedian" missingPredictionTreatment="returnMissing">
			<Segment id="1" weight="1.019465628920446">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="121.33999999999999">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="2109.6756591796875"/>
							<Node score="91.31800000000001">
								<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="83.18875122070312"/>
								<Node score="75.51899999999998">
									<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="30.02500057220459"/>
								</Node>
							</Node>
							<Node score="57.71428571428571">
								<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="236.125"/>
							</Node>
						</Node>
						<Node score="99.92571428571429">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="15.100000381469727"/>
							<Node score="84.6275">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="6.25"/>
							</Node>
						</Node>
						<Node score="105.43181818181819">
							<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="51.852901458740234"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="2" weight="1.0312636985995247">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team-med"/>
						<MiningField name="('70.0th-pctl-dfs', '3B')"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team-med:('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-med"/>
								<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-med:('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="team-med:('70.0th-pctl-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(team-med:('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-med:('70.0th-pctl-dfs', '3B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="143.1">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="314.1182098388672"/>
							<Node score="95.34500000000001">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
								<Node score="77.71">
									<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="796.8478088378906"/>
								</Node>
							</Node>
							<Node score="122.48249999999999">
								<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="152.375"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="3" weight="1.067792994364878">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '2B')"/>
						<MiningField name="('70.0th-pctl-dfs', '1B')"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('med-dfs', '2B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B')^2))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '2B'):('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '2B')"/>
								<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '2B'):('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '2B'):('70.0th-pctl-dfs', '1B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '2B'):('70.0th-pctl-dfs', '1B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1206.3599853515625"/>
							<Node score="104.73625000000001">
								<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.949999809265137"/>
								<Node score="86.28375000000001">
									<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="2767.873779296875"/>
								</Node>
							</Node>
						</Node>
						<Node score="116.425">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="170.8499984741211"/>
							<Node score="124.82999999999997">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', '2B')))" operator="lessOrEqual" value="54.25"/>
							</Node>
						</Node>
						<Node score="136.5">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B')^2))" operator="lessOrEqual" value="420.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="4" weight="0.9464020145986684">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="113.439">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))" operator="lessOrEqual" value="195.6500015258789"/>
							<Node score="74.96608695652174">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="14708.658203125"/>
								<Node score="92.23875000000002">
									<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="65.60354995727539"/>
								</Node>
							</Node>
							<Node score="97.20555555555556">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="13.800000190734863"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="5" weight="0.5527699175470734">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team-70.0th_pctl"/>
						<MiningField name="('70.0th-pctl-dfs', 'SS')"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(team_count:('med-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team-70.0th_pctl:('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-70.0th_pctl"/>
								<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="team-70.0th_pctl:('70.0th-pctl-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-70.0th_pctl:('70.0th-pctl-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="82.17499923706055"/>
							<Node score="72.0">
								<SimplePredicate field="double(float(team_count:('med-dfs', 'P')))" operator="lessOrEqual" value="27.753499507904053"/>
							</Node>
						</Node>
						<Node score="108.671">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="84.29048780487804">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="68.92499923706055"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="6" weight="1.0707329258823954">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '3B')"/>
						<MiningField name="('med-dfs', 'OF')"/>
						<MiningField name="('med-dfs', 'C')"/>
						<MiningField name="('70.0th-pctl-dfs', 'P')"/>
						<MiningField name="team-70.0th_pctl"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(team_count:team-med))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '3B'):('med-dfs', 'OF')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '3B')"/>
								<FieldRef field="('med-dfs', 'OF')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '3B'):('med-dfs', 'OF'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '3B'):('med-dfs', 'OF')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '3B'):('med-dfs', 'OF')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '3B'):('med-dfs', 'OF'))"/>
						</DerivedField>
						<DerivedField name="('med-dfs', 'C'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'C')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'C'):('70.0th-pctl-dfs', 'P')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'P'))"/>
						</DerivedField>
						<DerivedField name="team-70.0th_pctl:('med-dfs', 'OF')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-70.0th_pctl"/>
								<FieldRef field="('med-dfs', 'OF')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-70.0th_pctl:('med-dfs', 'OF'))" optype="continuous" dataType="float">
							<FieldRef field="team-70.0th_pctl:('med-dfs', 'OF')"/>
						</DerivedField>
						<DerivedField name="double(float(team-70.0th_pctl:('med-dfs', 'OF')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-70.0th_pctl:('med-dfs', 'OF'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="759.4500122070312"/>
							<Node score="98.01105263157896">
								<SimplePredicate field="double(float(team_count:team-med))" operator="lessOrEqual" value="13.25"/>
								<Node score="78.97129032258061">
									<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="2151.9185791015625"/>
								</Node>
							</Node>
						</Node>
						<Node score="111.47499999999998">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="65.5"/>
							<Node score="98.0">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="28.888550281524658"/>
							</Node>
						</Node>
						<Node score="128.66249999999997">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'OF')))" operator="lessOrEqual" value="183.3000030517578"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="7" weight="1.028489585586508">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('70.0th-pctl-dfs', '3B')"/>
						<MiningField name="('70.0th-pctl-dfs', 'P')"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(team-med:('med-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '2B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'P')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'P'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="136.5">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(team-med:('med-dfs', 'C')))" operator="lessOrEqual" value="76.5"/>
							<Node score="93.46477272727275">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1142.8875122070312"/>
								<Node score="67.83625">
									<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="9407.00341796875"/>
								</Node>
							</Node>
						</Node>
						<Node score="122.96">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="157.0999984741211"/>
							<Node score="118.0">
								<SimplePredicate field="double(float(team-med:('med-dfs', 'C')))" operator="lessOrEqual" value="98.75"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="-100.1463508605957"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="8" weight="0.7564480554603757">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '2B')"/>
						<MiningField name="('med-dfs', 'C')"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team-70.0th_pctl^2))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', '2B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '2B'):('med-dfs', 'C')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '2B')"/>
								<FieldRef field="('med-dfs', 'C')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '2B'):('med-dfs', 'C'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '2B'):('med-dfs', 'C')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '2B'):('med-dfs', 'C')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '2B'):('med-dfs', 'C'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="124.7">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="1.7999999523162842"/>
							<Node score="50.79999999999999">
								<SimplePredicate field="double(float(team-70.0th_pctl^2))" operator="lessOrEqual" value="26.000000953674316"/>
							</Node>
						</Node>
						<Node score="64.16833333333335">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', '2B')))" operator="lessOrEqual" value="842.1000061035156"/>
							<Node score="90.77325581395348">
								<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'C')))" operator="lessOrEqual" value="27.625"/>
							</Node>
						</Node>
						<Node score="103.29416666666667">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="19.0"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="9" weight="0.4266867455280798">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="124.85">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="576.8900146484375"/>
								<Node score="76.43296296296296">
									<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="16.299999713897705"/>
								</Node>
							</Node>
							<Node score="98.62884615384615">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1206.3599853515625"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="10" weight="0.21799634901343892">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="120.53399999999998">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="57.86666666666665">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="8253.342529296875"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="18.132099628448486"/>
								</Node>
							</Node>
							<Node score="88.36088888888888">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="128.4000015258789"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="11" weight="0.9207388962517014">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team_count"/>
						<MiningField name="('70.0th-pctl-dfs', '1B')"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team_count:('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team_count"/>
								<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team_count:('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
							<FieldRef field="team_count:('70.0th-pctl-dfs', '1B')"/>
						</DerivedField>
						<DerivedField name="double(float(team_count:('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
							<FieldRef field="float(team_count:('70.0th-pctl-dfs', '1B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'P')))" operator="lessOrEqual" value="95.8275032043457"/>
							<Node score="73.3955">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.80849838256836"/>
								<Node score="92.99111111111112">
									<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="25.5"/>
								</Node>
							</Node>
							<Node score="109.51041666666669">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="263.0250015258789"/>
							</Node>
						</Node>
						<Node score="86.15">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="7.299999952316284"/>
							<Node score="92.18">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="15.699999809265137"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="12" weight="0.8363453583623438">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="111.61060606060607">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="292.0874938964844"/>
							<Node score="78.0176923076923">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.80849838256836"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="7159.592529296875"/>
								</Node>
							</Node>
							<Node score="79.39166666666665">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="12.735000133514404"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="13" weight="0.9407602729936876">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(team-70.0th_pctl^2))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('med-dfs', 'SS')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="87.75">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="751.0874938964844"/>
							<Node score="106.49937500000004">
								<SimplePredicate field="double(float(team-70.0th_pctl^2))" operator="lessOrEqual" value="42.96500015258789"/>
								<Node score="77.48066666666668">
									<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="231.61699676513672"/>
								</Node>
							</Node>
							<Node score="0.0">
								<SimplePredicate field="double(float(team-70.0th_pctl^2))" operator="lessOrEqual" value="69.78499984741211"/>
							</Node>
						</Node>
						<Node score="120.56222222222222">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('med-dfs', 'SS')))" operator="lessOrEqual" value="103.5"/>
							<Node score="92.0">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="982.7250061035156"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="14" weight="1.0531967356477296">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '1B')"/>
						<MiningField name="('med-dfs', '3B')"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(team_count:team-med))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('med-dfs', 'C')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '1B'):('med-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '1B')"/>
								<FieldRef field="('med-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '1B'):('med-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '1B'):('med-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '1B'):('med-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '1B'):('med-dfs', '3B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="121.761">
						<True/>
						<Node score="86.5">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="45.85000038146973"/>
							<Node score="60.70769230769229">
								<SimplePredicate field="double(float(team_count:team-med))" operator="lessOrEqual" value="13.25"/>
								<Node score="90.27347826086957">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="5.049999952316284"/>
								</Node>
							</Node>
							<Node score="0.0">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', '3B')))" operator="lessOrEqual" value="66.0"/>
							</Node>
						</Node>
						<Node score="90.07666666666665">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="18295.5615234375"/>
							<Node score="113.03285714285714">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('med-dfs', 'C')))" operator="lessOrEqual" value="28.25"/>
							</Node>
						</Node>
						<Node score="144.75">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="24.9831600189209"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="15" weight="0.714423130464174">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '2B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="123.80599999999997">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="238.73999786376953"/>
							<Node score="88.92648148148149">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
								<Node score="25.399999999999995">
									<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="6.419999837875366"/>
								</Node>
							</Node>
							<Node score="153.0">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="-126.60725402832031"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="16" weight="0.8478478423427249">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team-med"/>
						<MiningField name="team-70.0th_pctl"/>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team-med:team-70.0th_pctl" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-med"/>
								<FieldRef field="team-70.0th_pctl"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-med:team-70.0th_pctl)" optype="continuous" dataType="float">
							<FieldRef field="team-med:team-70.0th_pctl"/>
						</DerivedField>
						<DerivedField name="double(float(team-med:team-70.0th_pctl))" optype="continuous" dataType="double">
							<FieldRef field="float(team-med:team-70.0th_pctl)"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="149.90999603271484"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.949999809265137"/>
								<Node score="86.02296296296294">
									<SimplePredicate field="double(float(team-med:team-70.0th_pctl))" operator="lessOrEqual" value="54.67499923706055"/>
								</Node>
							</Node>
						</Node>
						<Node score="86.5">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="109.29499816894531"/>
							<Node score="112.18555555555557">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="198.28524780273438"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="17" weight="0.9976009598684091">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', '3B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="84.87166666666667">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.60499954223633"/>
							<Node score="63.33960000000001">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="564.9150085449219"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(best-possible-score:('med-dfs', '3B')))" operator="lessOrEqual" value="120.625"/>
								</Node>
							</Node>
							<Node score="94.81400000000001">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="104.25"/>
							</Node>
						</Node>
						<Node score="117.23045454545458">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="30976.25"/>
							<Node score="95.4833333333333">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="33.555999755859375"/>
							</Node>
						</Node>
						<Node score="136.5">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="96.20000076293945"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="18" weight="0.6542157753349308">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'C')"/>
						<MiningField name="('70.0th-pctl-dfs', 'C')"/>
						<MiningField name="team-med"/>
						<MiningField name="('med-dfs', '1B')"/>
						<MiningField name="best-possible-score"/>
						<MiningField name="('med-dfs', 'SS')"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'C'):('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'C')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'C'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'C'):('70.0th-pctl-dfs', 'C')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'C')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'C'))"/>
						</DerivedField>
						<DerivedField name="team-med:('med-dfs', '1B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-med"/>
								<FieldRef field="('med-dfs', '1B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-med:('med-dfs', '1B'))" optype="continuous" dataType="float">
							<FieldRef field="team-med:('med-dfs', '1B')"/>
						</DerivedField>
						<DerivedField name="double(float(team-med:('med-dfs', '1B')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-med:('med-dfs', '1B'))"/>
						</DerivedField>
						<DerivedField name="best-possible-score:('med-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="best-possible-score"/>
								<FieldRef field="('med-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(best-possible-score:('med-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="best-possible-score:('med-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(best-possible-score:('med-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(best-possible-score:('med-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="136.5">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="43.35000038146973"/>
							<Node score="55.41300000000001">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))" operator="lessOrEqual" value="195.6500015258789"/>
								<Node score="86.005">
									<SimplePredicate field="double(float(('med-dfs', 'C'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="8.75"/>
								</Node>
							</Node>
						</Node>
						<Node score="113.68480000000001">
							<SimplePredicate field="double(float(team-med:('med-dfs', '1B')))" operator="lessOrEqual" value="122.625"/>
							<Node score="69.5">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="473.18919372558594"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'SS')))" operator="lessOrEqual" value="2613.875"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="19" weight="0.6756834483943517">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="111.27043478260869">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="6753.586181640625"/>
							</Node>
							<Node score="85.06512195121951">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="121.0"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="20" weight="0.5015104963466852">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'P')^2))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="51.57857142857142">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="64.45000076293945"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="7755.049072265625"/>
								<Node score="56.18888888888889">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="51.44000053405762"/>
								</Node>
							</Node>
							<Node score="89.2895348837209">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="170.26000213623047"/>
							</Node>
						</Node>
						<Node score="126.04999999999995">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="414.99501037597656"/>
							<Node score="122.94">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'P')^2))" operator="lessOrEqual" value="471.48827743530273"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="21" weight="0.882242833022237">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', '2B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="121.81933333333333">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="270.19000244140625"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="9279.47998046875"/>
								<Node score="68.13333333333333">
									<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="21.699999809265137"/>
								</Node>
							</Node>
							<Node score="90.97676470588237">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="126.81250381469727"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="22" weight="0.8441609505086608">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('med-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="70.51666666666667">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="96.98749923706055"/>
								<Node score="70.50214285714286">
									<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="50.48000144958496"/>
								</Node>
							</Node>
							<Node score="104.42977272727275">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', 'P')))" operator="lessOrEqual" value="133.8426284790039"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="23" weight="0.692428965369902">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team_count:('med-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="342.1889953613281"/>
							<Node score="73.74766666666666">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1206.3599853515625"/>
								<Node score="99.42653846153846">
									<SimplePredicate field="double(float(team_count:('med-dfs', 'OF')))" operator="lessOrEqual" value="8.5"/>
								</Node>
							</Node>
							<Node score="119.69999999999997">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="3128.630126953125"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="24" weight="0.7949997237066379">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team_count"/>
						<MiningField name="('70.0th-pctl-dfs', 'OF')"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team_count:('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team_count"/>
								<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team_count:('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
							<FieldRef field="team_count:('70.0th-pctl-dfs', 'OF')"/>
						</DerivedField>
						<DerivedField name="double(float(team_count:('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
							<FieldRef field="float(team_count:('70.0th-pctl-dfs', 'OF'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.80849838256836"/>
								<Node score="77.15176470588236">
									<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="21.59999942779541"/>
								</Node>
							</Node>
							<Node score="107.85925925925928">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="234.75"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="25" weight="0.9640075280946782">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="95.75909090909092">
						<True/>
						<Node score="108.65789473684215">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'P')))" operator="lessOrEqual" value="57.52499961853027"/>
							<Node score="101.1725">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="810.6594848632812"/>
								<Node score="74.67">
									<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="22.100000381469727"/>
								</Node>
							</Node>
							<Node score="139.25">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))" operator="lessOrEqual" value="-68.71249866485596"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="86.18500137329102"/>
						</Node>
						<Node score="56.04">
							<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="2056.6286010742188"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="26" weight="0.7231886989876302">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '1B')"/>
						<MiningField name="('70.0th-pctl-dfs', 'SS')"/>
						<MiningField name="double(float(('med-dfs', '1B'):('med-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '1B'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '1B')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '1B'):('70.0th-pctl-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="149.45999908447266"/>
							<Node score="85.5084">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))" operator="lessOrEqual" value="195.6500015258789"/>
								<Node score="44.879999999999995">
									<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="7755.049072265625"/>
								</Node>
							</Node>
						</Node>
						<Node score="113.12166666666667">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', '2B')))" operator="lessOrEqual" value="125.25"/>
							<Node score="126.04999999999995">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))" operator="lessOrEqual" value="70.08387660980225"/>
							</Node>
						</Node>
						<Node score="136.5">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="236.89999389648438"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="27" weight="0.7025691486657668">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="72.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="84.77899932861328"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="21.264999389648438"/>
							</Node>
						</Node>
						<Node score="106.6715384615385">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="292.0874938964844"/>
							<Node score="83.64428571428573">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.80849838256836"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="28" weight="0.9467737969427489">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('70.0th-pctl-dfs', 'C')"/>
						<MiningField name="('70.0th-pctl-dfs', 'SS')"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="126.20666666666665">
						<True/>
						<Node score="67.93054054054056">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="40.89999961853027"/>
							<Node score="88.97571428571428">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="19.75999927520752"/>
								<Node score="109.815">
									<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="553.6174926757812"/>
								</Node>
							</Node>
							<Node score="0.0">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="14.0"/>
							</Node>
						</Node>
						<Node score="92.8">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="18126.25"/>
							<Node score="109.33000000000001">
								<SimplePredicate field="double(float(('med-dfs', 'OF')))" operator="lessOrEqual" value="4.25"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="-72.96047592163086"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="29" weight="0.7833980674618465">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('med-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))" operator="lessOrEqual" value="195.6500015258789"/>
							<Node score="71.48000000000002">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="15792.041015625"/>
								<Node score="94.8984">
									<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="59.95224952697754"/>
								</Node>
							</Node>
							<Node score="117.90874999999998">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('med-dfs', 'SS')))" operator="lessOrEqual" value="63.5"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="30" weight="1.1857770659177724">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13412.26220703125"/>
							<Node score="78.9274074074074">
								<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="236.875"/>
								<Node score="50.79999999999999">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="5.0350000858306885"/>
								</Node>
							</Node>
						</Node>
						<Node score="111.90727272727275">
							<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
							<Node score="96.31181818181817">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="68.9338493347168"/>
							</Node>
						</Node>
						<Node score="122.75699999999999">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="360.19000244140625"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="31" weight="0.9850196097096203">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(team_count:team-med))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('med-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="51.96999931335449"/>
							<Node score="59.812727272727265">
								<SimplePredicate field="double(float(team_count:team-med))" operator="lessOrEqual" value="13.25"/>
								<Node score="92.99588235294118">
									<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="20.199999809265137"/>
								</Node>
							</Node>
						</Node>
						<Node score="83.66499999999999">
							<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1037.0449829101562"/>
							<Node score="108.75777777777778">
								<SimplePredicate field="double(float(('med-dfs', 'C'):('med-dfs', 'SS')))" operator="lessOrEqual" value="42.0"/>
							</Node>
						</Node>
						<Node score="123.05166666666666">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="307.75"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="32" weight="0.6078882899247227">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team-med"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team-med^2" optype="continuous" dataType="double">
							<Apply function="pow">
								<FieldRef field="team-med"/>
								<Constant dataType="integer">2</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-med^2)" optype="continuous" dataType="float">
							<FieldRef field="team-med^2"/>
						</DerivedField>
						<DerivedField name="double(float(team-med^2))" optype="continuous" dataType="double">
							<FieldRef field="float(team-med^2)"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="104.84727272727274">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="88.0625"/>
							<Node score="50.79999999999999">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="6.5"/>
							</Node>
						</Node>
						<Node score="140.625">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="45.54719924926758"/>
							<Node score="103.73307692307695">
								<SimplePredicate field="double(float(team-med^2))" operator="lessOrEqual" value="112.25"/>
							</Node>
						</Node>
						<Node score="74.12212121212119">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="178.4123992919922"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="33" weight="1.1166642278834031">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'P')^2))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="72.9">
							<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="3181.574951171875"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13412.26220703125"/>
								<Node score="78.0497142857143">
									<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.949999809265137"/>
								</Node>
							</Node>
							<Node score="116.63040000000001">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'P')^2))" operator="lessOrEqual" value="986.1168823242188"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="34" weight="0.6992625706556628">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(team_count:('med-dfs', '3B')))"/>
						<MiningField name="double(float(('med-dfs', '1B')^2))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="64.45000076293945"/>
							<Node score="50.79999999999999">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="7755.049072265625"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(team_count:('med-dfs', '3B')))" operator="lessOrEqual" value="5.5"/>
								</Node>
							</Node>
							<Node score="82.36803921568628">
								<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'P')))" operator="lessOrEqual" value="117.70970153808594"/>
							</Node>
						</Node>
						<Node score="115.59000000000002">
							<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="2229.5"/>
							<Node score="122.88">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="31.475000381469727"/>
							</Node>
						</Node>
						<Node score="136.5">
							<SimplePredicate field="double(float(('med-dfs', '1B')^2))" operator="lessOrEqual" value="181.25"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="35" weight="0.7384872968706356">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="63.049615384615386">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="117.92850112915039"/>
								<Node score="91.511875">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="25.25"/>
								</Node>
							</Node>
							<Node score="105.26611111111112">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="38.5"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="36" weight="0.8684642481524213">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('med-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="131.2325">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="62.723684210526294">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="97.10000228881836"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(('med-dfs', '3B'):('med-dfs', 'SS')))" operator="lessOrEqual" value="7.5"/>
								</Node>
							</Node>
							<Node score="92.72690476190478">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="37" weight="0.7627567587180141">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="118.70954545454548">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="92.691">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13412.26220703125"/>
								<Node score="64.72896551724138">
									<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="2020.7750854492188"/>
								</Node>
							</Node>
							<Node score="73.05">
								<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="9.949999809265137"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="38" weight="1.2046233740499062">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="best-possible-score"/>
						<MiningField name="('med-dfs', 'P')"/>
						<MiningField name="('med-dfs', '3B')"/>
						<MiningField name="('70.0th-pctl-dfs', '1B')"/>
						<MiningField name="double(float(team-70.0th_pctl^2))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="best-possible-score:('med-dfs', 'P')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="best-possible-score"/>
								<FieldRef field="('med-dfs', 'P')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(best-possible-score:('med-dfs', 'P'))" optype="continuous" dataType="float">
							<FieldRef field="best-possible-score:('med-dfs', 'P')"/>
						</DerivedField>
						<DerivedField name="double(float(best-possible-score:('med-dfs', 'P')))" optype="continuous" dataType="double">
							<FieldRef field="float(best-possible-score:('med-dfs', 'P'))"/>
						</DerivedField>
						<DerivedField name="('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '3B')"/>
								<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="111.7">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'P')))" operator="lessOrEqual" value="35.17049980163574"/>
							<Node score="114.49416666666669">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="115.75000381469727"/>
								<Node score="84.27833333333331">
									<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'P')))" operator="lessOrEqual" value="1952.1856079101562"/>
								</Node>
							</Node>
							<Node score="122.904">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="189.10000610351562"/>
							</Node>
						</Node>
						<Node score="60.512499999999996">
							<SimplePredicate field="double(float(team-70.0th_pctl^2))" operator="lessOrEqual" value="44.2450008392334"/>
							<Node score="89.82272727272726">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="85.53799819946289"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="1700.1500244140625"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="39" weight="0.8212707524094268">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', '1B')^2))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B')^2))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B')^2))" operator="lessOrEqual" value="3.880000114440918"/>
							<Node score="50.79999999999999">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="16.100000381469727"/>
							</Node>
						</Node>
						<Node score="98.82886363636364">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="165.6750030517578"/>
							<Node score="77.96785714285714">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="473.07000732421875"/>
							</Node>
						</Node>
						<Node score="129.69">
							<SimplePredicate field="double(float(('med-dfs', '1B')^2))" operator="lessOrEqual" value="227.25"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="40" weight="0.9239990368955148">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', '3B')^2))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="138.64">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="244.62499237060547"/>
							<Node score="71.80058823529411">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="9775.6611328125"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(('med-dfs', '3B')^2))" operator="lessOrEqual" value="2.5"/>
								</Node>
							</Node>
							<Node score="94.77050000000003">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="41" weight="0.9164231348559567">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="133.08749999999998">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="321.2699890136719"/>
							<Node score="67.9346153846154">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="807.34375"/>
								<Node score="100.21250000000002">
									<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="7.75"/>
								</Node>
							</Node>
							<Node score="102.77520000000003">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="156.87999725341797"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="42" weight="0.5809080403335364">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', '1B'):('med-dfs', '2B')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', '3B')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="72.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="89.0"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score:('med-dfs', '3B')))" operator="lessOrEqual" value="120.625"/>
							</Node>
							<Node score="50.79999999999999">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', '2B')))" operator="lessOrEqual" value="3.5"/>
							</Node>
						</Node>
						<Node score="52.881249999999994">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="64.45000076293945"/>
							<Node score="94.10875000000001">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="39.5"/>
							</Node>
						</Node>
						<Node score="119.00899999999999">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="261.81500244140625"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="43" weight="0.7339487364258168">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="124.96249999999999">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="292.0874938964844"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', '3B')))" operator="lessOrEqual" value="27.024999618530273"/>
								<Node score="77.10972222222223">
									<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="18.300000190734863"/>
								</Node>
							</Node>
							<Node score="100.336">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="1082.6399536132812"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="44" weight="1.1109381354241197">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('med-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="63.400000000000006">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="46.22999954223633"/>
							<Node score="108.75833333333334">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="22.975000381469727"/>
								<Node score="81.45866666666667">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="41.63999938964844"/>
								</Node>
							</Node>
							<Node score="62.792222222222236">
								<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'P')))" operator="lessOrEqual" value="81.62750244140625"/>
							</Node>
						</Node>
						<Node score="113.56333333333332">
							<SimplePredicate field="double(float(('med-dfs', 'C'):('med-dfs', 'P')))" operator="lessOrEqual" value="134.1311264038086"/>
							<Node score="153.0">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="-11.95359992980957"/>
							</Node>
						</Node>
						<Node score="78.32999999999998">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="6.3999998569488525"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="45" weight="0.8404496977321209">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team-med"/>
						<MiningField name="('70.0th-pctl-dfs', 'P')"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', '3B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team-med:('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-med"/>
								<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-med:('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
							<FieldRef field="team-med:('70.0th-pctl-dfs', 'P')"/>
						</DerivedField>
						<DerivedField name="double(float(team-med:('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-med:('70.0th-pctl-dfs', 'P'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="59.25">
						<True/>
						<Node score="139.18888888888887">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="340.9364929199219"/>
							<Node score="79.82799999999999">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="10356.04541015625"/>
								<Node score="50.79999999999999">
									<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="26.853150367736816"/>
								</Node>
							</Node>
							<Node score="103.04243243243246">
								<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', '3B')))" operator="lessOrEqual" value="120.42499542236328"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="20.949999809265137"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="46" weight="0.88328001533111">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'P')"/>
						<MiningField name="('70.0th-pctl-dfs', 'OF')"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'P'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'P')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'P'):('70.0th-pctl-dfs', 'OF')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'OF'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="89.0"/>
							<Node score="72.0">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="103.95000076293945"/>
								<Node score="50.79999999999999">
									<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="86.38294982910156"/>
								</Node>
							</Node>
						</Node>
						<Node score="111.21689655172416">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="83.92500000000003">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13412.26220703125"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="47" weight="0.6975224679733096">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="best-possible-score"/>
						<MiningField name="('med-dfs', 'C')"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', '2B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="best-possible-score:('med-dfs', 'C')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="best-possible-score"/>
								<FieldRef field="('med-dfs', 'C')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(best-possible-score:('med-dfs', 'C'))" optype="continuous" dataType="float">
							<FieldRef field="best-possible-score:('med-dfs', 'C')"/>
						</DerivedField>
						<DerivedField name="double(float(best-possible-score:('med-dfs', 'C')))" optype="continuous" dataType="double">
							<FieldRef field="float(best-possible-score:('med-dfs', 'C'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="95.66650009155273"/>
							<Node score="57.64444444444445">
								<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', '2B')))" operator="lessOrEqual" value="29.200000762939453"/>
								<Node score="77.25">
									<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'C')))" operator="lessOrEqual" value="163.7375030517578"/>
								</Node>
							</Node>
						</Node>
						<Node score="132.3981818181818">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="90.43450000000003">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1110.5249633789062"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="48" weight="0.6353997384620247">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="119.89294117647063">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="93.82933333333334">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.80849838256836"/>
								<Node score="65.14611111111111">
									<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="2012.7070922851562"/>
								</Node>
							</Node>
							<Node score="91.08058823529412">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="13.800000190734863"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="49" weight="0.9434296750416008">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'P')))" operator="lessOrEqual" value="57.52499961853027"/>
							<Node score="108.77500000000003">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="38.5"/>
								<Node score="79.60444444444445">
									<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="231.61699676513672"/>
								</Node>
							</Node>
						</Node>
						<Node score="64.43846153846154">
							<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="49.21000099182129"/>
							<Node score="94.80111111111114">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="4.0"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="50" weight="1.0781775348776466">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(team_count:team-med))"/>
						<MiningField name="double(float(team_count:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', '3B')^2))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'C')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="86.5">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="745.125"/>
							<Node score="74.2296">
								<SimplePredicate field="double(float(team_count:team-med))" operator="lessOrEqual" value="13.25"/>
								<Node score="101.771875">
									<SimplePredicate field="double(float(team_count:('med-dfs', 'OF')))" operator="lessOrEqual" value="7.5"/>
								</Node>
							</Node>
							<Node score="0.0">
								<SimplePredicate field="double(float(('med-dfs', '3B')^2))" operator="lessOrEqual" value="102.5"/>
							</Node>
						</Node>
						<Node score="109.08000000000001">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="291.25"/>
							<Node score="125.34555555555552">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="50.39999961853027"/>
							</Node>
						</Node>
						<Node score="136.5">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="128.2699966430664"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="51" weight="0.40097513252194644">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', '3B')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="72.0">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="6753.586181640625"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="12.100000143051147"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', '3B')))" operator="lessOrEqual" value="120.42499542236328"/>
							<Node score="92.60553571428572">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							</Node>
						</Node>
						<Node score="131.27499999999998">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="134.5500030517578"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="52" weight="0.6762644948099268">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="82.17499923706055"/>
						</Node>
						<Node score="129.12555555555554">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="86.87214285714288">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="53" weight="0.699192311907877">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(team-med:('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="82.17499923706055"/>
						</Node>
						<Node score="69.4546153846154">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="40.89999961853027"/>
							<Node score="101.57950000000002">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="12.114999771118164"/>
							</Node>
						</Node>
						<Node score="115.99999999999999">
							<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="221.6999969482422"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="54" weight="0.8922099728803934">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team-med"/>
						<MiningField name="('med-dfs', 'SS')"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(team-70.0th_pctl^2))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(team-med:('med-dfs', '2B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team-med:('med-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-med"/>
								<FieldRef field="('med-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-med:('med-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="team-med:('med-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(team-med:('med-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-med:('med-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="8836.25"/>
							<Node score="68.94999999999999">
								<SimplePredicate field="double(float(team-70.0th_pctl^2))" operator="lessOrEqual" value="39.3650016784668"/>
								<Node score="50.79999999999999">
									<SimplePredicate field="double(float(team-med:('med-dfs', '2B')))" operator="lessOrEqual" value="4.75"/>
								</Node>
							</Node>
						</Node>
						<Node score="114.09000000000003">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', 'P')))" operator="lessOrEqual" value="130.348876953125"/>
							<Node score="88.56944444444447">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.80849838256836"/>
							</Node>
						</Node>
						<Node score="67.05">
							<SimplePredicate field="double(float(team-med:('med-dfs', 'SS')))" operator="lessOrEqual" value="84.0"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="55" weight="0.6061226127758469">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', '2B')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', '3B')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', '3B')))" operator="lessOrEqual" value="120.42499542236328"/>
							<Node score="67.24416666666666">
								<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.949999809265137"/>
								<Node score="99.35764705882356">
									<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="35.35000038146973"/>
								</Node>
							</Node>
						</Node>
						<Node score="126.04999999999995">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', '2B')))" operator="lessOrEqual" value="1239.8999938964844"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="56" weight="0.8243991416268037">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team-med"/>
						<MiningField name="('med-dfs', '3B')"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(team-70.0th_pctl))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team-med:('med-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-med"/>
								<FieldRef field="('med-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-med:('med-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="team-med:('med-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(team-med:('med-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-med:('med-dfs', '3B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="611.3284912109375"/>
							<Node score="70.38758620689657">
								<SimplePredicate field="double(float(team-70.0th_pctl))" operator="lessOrEqual" value="6.550000190734863"/>
								<Node score="97.364">
									<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="342.19801330566406"/>
								</Node>
							</Node>
						</Node>
						<Node score="89.17999999999998">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="49.79999923706055"/>
							<Node score="109.28">
								<SimplePredicate field="double(float(team-med:('med-dfs', '3B')))" operator="lessOrEqual" value="17.0"/>
							</Node>
						</Node>
						<Node score="125.36299999999997">
							<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="267.4000015258789"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="57" weight="0.36308818224776707">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'OF')"/>
						<MiningField name="('70.0th-pctl-dfs', 'P')"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'SS')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'OF'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'OF')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'OF'):('70.0th-pctl-dfs', 'P')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'P'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="59.25">
						<True/>
						<Node score="50.79999999999999">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="88.0625"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="3.350000023841858"/>
							</Node>
							<Node score="76.57499999999999">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="70.7077522277832"/>
							</Node>
						</Node>
						<Node score="123.86181818181817">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="340.9364929199219"/>
							<Node score="93.52209302325582">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'SS')))" operator="lessOrEqual" value="66.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="58" weight="0.888669023632935">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="73.25516129032259">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.43349838256836"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="80.48749923706055"/>
								</Node>
							</Node>
							<Node score="109.61275862068966">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="99.94999694824219"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="59" weight="0.8678053064588165">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('med-dfs', 'SS')))" operator="lessOrEqual" value="195.6500015258789"/>
							<Node score="73.87066666666668">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
								<Node score="100.42400000000004">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="3.75"/>
								</Node>
							</Node>
							<Node score="122.98272727272727">
								<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', '3B')))" operator="lessOrEqual" value="159.9499969482422"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="60" weight="0.18593602699604647">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B')^2))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="144.0">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="63.315">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="9152.5234375"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B')^2))" operator="lessOrEqual" value="0.9050000011920929"/>
								</Node>
							</Node>
							<Node score="94.12704545454545">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="2391.7138061523438"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="61" weight="0.7220489826352671">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('med-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="50.79999999999999">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="88.0625"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('med-dfs', 'P')))" operator="lessOrEqual" value="57.47500038146973"/>
							</Node>
						</Node>
						<Node score="106.76058823529411">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="79.14103448275863">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13412.26220703125"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="62" weight="0.587863871786523">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="106.25173913043479">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="84.54999923706055"/>
							</Node>
							<Node score="78.32605263157895">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="807.34375"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="63" weight="1.0146759508907977">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(team_count:('med-dfs', '3B')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', '2B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(team-70.0th_pctl))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="81.8499984741211"/>
							<Node score="71.56966666666669">
								<SimplePredicate field="double(float(team-70.0th_pctl))" operator="lessOrEqual" value="6.650000095367432"/>
								<Node score="108.51384615384616">
									<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="51.07500076293945"/>
								</Node>
							</Node>
							<Node score="98.5">
								<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', '2B')))" operator="lessOrEqual" value="24.30000114440918"/>
							</Node>
						</Node>
						<Node score="91.19999999999997">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="69.2249984741211"/>
							<Node score="110.70833333333333">
								<SimplePredicate field="double(float(team_count:('med-dfs', '3B')))" operator="lessOrEqual" value="21.0"/>
							</Node>
						</Node>
						<Node score="124.63499999999996">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="158.56999969482422"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="64" weight="0.3645660282755541">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="130.099">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="34.70000076293945"/>
								<Node score="80.05473684210531">
									<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.949999809265137"/>
								</Node>
							</Node>
							<Node score="101.31375">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="65" weight="1.0624487010445187">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(team_count:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="147.5">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="34.70000076293945"/>
							<Node score="115.85222222222222">
								<SimplePredicate field="double(float(team_count:('med-dfs', 'OF')))" operator="lessOrEqual" value="7.5"/>
								<Node score="80.03">
									<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="12.024999618530273"/>
								</Node>
							</Node>
							<Node score="67.00851851851854">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="42.88999938964844"/>
							</Node>
						</Node>
						<Node score="99.88875">
							<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
							<Node score="59.20000000000002">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="97.5"/>
							</Node>
						</Node>
						<Node score="119.11375">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'SS')))" operator="lessOrEqual" value="190.75"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="66" weight="0.8224492011989488">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="134.9611111111111">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="282.24749755859375"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="9429.64599609375"/>
								<Node score="69.55199999999998">
									<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="83.21075057983398"/>
								</Node>
							</Node>
							<Node score="98.50404761904764">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1206.3599853515625"/>
							</Node>
						</Node>
						<Node score="59.25">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="17.300000190734863"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="67" weight="0.6365811841875317">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="55.0">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="96.98749923706055"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="15.482500076293945"/>
							</Node>
							<Node score="79.07599999999998">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="83.11355209350586"/>
							</Node>
						</Node>
						<Node score="85.37428571428572">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="106.85787878787882">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="40.27499961853027"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="68" weight="1.0988377071626951">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '2B')"/>
						<MiningField name="('med-dfs', 'OF')"/>
						<MiningField name="('med-dfs', 'SS')"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '2B'):('med-dfs', 'OF')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '2B')"/>
								<FieldRef field="('med-dfs', 'OF')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '2B'):('med-dfs', 'OF'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '2B'):('med-dfs', 'OF')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '2B'):('med-dfs', 'OF')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '2B'):('med-dfs', 'OF'))"/>
						</DerivedField>
						<DerivedField name="('med-dfs', 'SS')^2" optype="continuous" dataType="double">
							<Apply function="pow">
								<FieldRef field="('med-dfs', 'SS')"/>
								<Constant dataType="integer">2</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'SS')^2)" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'SS')^2"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'SS')^2))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'SS')^2)"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="136.5">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="745.125"/>
							<Node score="115.15142857142858">
								<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="15.5"/>
								<Node score="87.15875000000004">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="48.02000045776367"/>
								</Node>
							</Node>
							<Node score="68.4088888888889">
								<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="243.58200073242188"/>
							</Node>
						</Node>
						<Node score="121.35499999999998">
							<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="126.25"/>
							<Node score="81.5">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="25.0"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'SS')^2))" operator="lessOrEqual" value="218.125"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="69" weight="0.7052840424270845">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'SS')"/>
						<MiningField name="('70.0th-pctl-dfs', 'OF')"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'SS'):('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'SS')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'OF'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'SS'):('70.0th-pctl-dfs', 'OF')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'OF')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'OF'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="57.85000038146973"/>
							<Node score="49.93000000000001">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="1994.9190063476562"/>
								<Node score="79.32999999999998">
									<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="76.23250198364258"/>
								</Node>
							</Node>
							<Node score="98.1251428571429">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="175.3000030517578"/>
							</Node>
						</Node>
						<Node score="118.0">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="287.5500030517578"/>
							<Node score="123.76249999999999">
								<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="359.2250061035156"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="70" weight="0.9198564388914564">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="73.35">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="244.30814361572266"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.80849838256836"/>
								<Node score="80.75076923076924">
									<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.949999809265137"/>
								</Node>
							</Node>
							<Node score="117.4031818181818">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="62.74220085144043"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="71" weight="0.8195641929013767">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(team-70.0th_pctl))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="111.02687499999999">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="55.0"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="140.23374938964844"/>
								<Node score="72.49681818181817">
									<SimplePredicate field="double(float(team-70.0th_pctl))" operator="lessOrEqual" value="7.200000286102295"/>
								</Node>
							</Node>
							<Node score="89.3231578947369">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="41.63999938964844"/>
							</Node>
						</Node>
						<Node score="113.18000000000004">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="220.5"/>
							<Node score="124.19599999999998">
								<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="71.68987274169922"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="72" weight="0.8006260507960417">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(team-med:('med-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(team_count:('med-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="118.0">
						<True/>
						<Node score="68.35000000000001">
							<SimplePredicate field="double(float(team-med:('med-dfs', 'C')))" operator="lessOrEqual" value="73.125"/>
							<Node score="66.38444444444445">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="96.56650161743164"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(team_count:('med-dfs', '3B')))" operator="lessOrEqual" value="4.0"/>
								</Node>
							</Node>
							<Node score="102.93775000000002">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="194.2624969482422"/>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'P')))" operator="lessOrEqual" value="-75.20675200223923"/>
						</Node>
						<Node score="122.91">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="911.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="73" weight="0.2710726129285191">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="9429.64599609375"/>
							<Node score="53.6">
								<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="216.875"/>
								<Node score="74.91333333333333">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="109.13515853881836"/>
								</Node>
							</Node>
						</Node>
						<Node score="127.87888888888887">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="92.5851162790698">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="948.8125"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="74" weight="1.1247510397015152">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-med))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="106.80318181818183">
							<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
							<Node score="88.38">
								<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="231.61699676513672"/>
								<Node score="65.24333333333334">
									<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="77.36795043945312"/>
								</Node>
							</Node>
							<Node score="73.39999999999999">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="11.535000324249268"/>
							</Node>
						</Node>
						<Node score="114.85">
							<SimplePredicate field="double(float(team-med))" operator="lessOrEqual" value="14.25"/>
							<Node score="126.20142857142855">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="174.24287796020508"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="75" weight="0.9153757794757904">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(team_count:team-med))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('med-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="112.89000000000003">
							<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'P')))" operator="lessOrEqual" value="37.31399917602539"/>
							<Node score="113.13">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="692.2937622070312"/>
								<Node score="80.46687499999999">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="231.1760025024414"/>
								</Node>
							</Node>
							<Node score="153.0">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="-50.246325731277466"/>
							</Node>
						</Node>
						<Node score="63.031874999999985">
							<SimplePredicate field="double(float(team_count:team-med))" operator="lessOrEqual" value="11.75"/>
							<Node score="104.69833333333332">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('med-dfs', 'P')))" operator="lessOrEqual" value="41.45400047302246"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="76" weight="0.5771452053077101">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="best-possible-score"/>
						<MiningField name="('med-dfs', '1B')"/>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="best-possible-score:('med-dfs', '1B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="best-possible-score"/>
								<FieldRef field="('med-dfs', '1B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(best-possible-score:('med-dfs', '1B'))" optype="continuous" dataType="float">
							<FieldRef field="best-possible-score:('med-dfs', '1B')"/>
						</DerivedField>
						<DerivedField name="double(float(best-possible-score:('med-dfs', '1B')))" optype="continuous" dataType="double">
							<FieldRef field="float(best-possible-score:('med-dfs', '1B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13412.26220703125"/>
							<Node score="65.34555555555555">
								<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.949999809265137"/>
								<Node score="84.88500000000002">
									<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="87.75"/>
								</Node>
							</Node>
						</Node>
						<Node score="121.5166666666667">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="316.6737518310547"/>
							<Node score="83.04285714285713">
								<SimplePredicate field="double(float(best-possible-score:('med-dfs', '1B')))" operator="lessOrEqual" value="303.25"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="77" weight="1.0827966299931837">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(team_count:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="53.95000000000001">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="96.11650085449219"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="0.949999988079071"/>
							</Node>
							<Node score="74.1">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="84.95000076293945"/>
							</Node>
						</Node>
						<Node score="82.91782608695655">
							<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
							<Node score="104.00950000000003">
								<SimplePredicate field="double(float(team_count:('med-dfs', 'OF')))" operator="lessOrEqual" value="8.5"/>
							</Node>
						</Node>
						<Node score="122.32999999999998">
							<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="226.79999923706055"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="78" weight="0.9183518414238877">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team-med"/>
						<MiningField name="('70.0th-pctl-dfs', '1B')"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team-med:('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-med"/>
								<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-med:('70.0th-pctl-dfs', '1B'))" optype="continuous" dataType="float">
							<FieldRef field="team-med:('70.0th-pctl-dfs', '1B')"/>
						</DerivedField>
						<DerivedField name="double(float(team-med:('70.0th-pctl-dfs', '1B')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-med:('70.0th-pctl-dfs', '1B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="105.18593750000002">
							<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="149.75"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="7.920000076293945"/>
								<Node score="50.79999999999999">
									<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="98.94499969482422"/>
								</Node>
							</Node>
							<Node score="79.5592">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.80849838256836"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="79" weight="0.4973423609408222">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '1B')"/>
						<MiningField name="('70.0th-pctl-dfs', 'P')"/>
						<MiningField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', '3B')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('med-dfs', 'P')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '1B'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '1B')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '1B'):('70.0th-pctl-dfs', 'P')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'P'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="122.02499999999998">
						<True/>
						<Node score="92.85285714285715">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="149.90999603271484"/>
							<Node score="46.08333333333332">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('med-dfs', 'P')))" operator="lessOrEqual" value="70.54375076293945"/>
								<Node score="74.90761904761905">
									<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="60.75440216064453"/>
								</Node>
							</Node>
							<Node score="115.20333333333333">
								<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="78.84950256347656"/>
							</Node>
						</Node>
						<Node score="136.5">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="40.58399963378906"/>
							<Node score="153.0">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="-109.78477382659912"/>
							</Node>
						</Node>
						<Node score="109.01333333333335">
							<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', '3B')))" operator="lessOrEqual" value="115.2249984741211"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="80" weight="1.0007514714936359">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '2B')"/>
						<MiningField name="('70.0th-pctl-dfs', '3B')"/>
						<MiningField name="('med-dfs', '1B')"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('med-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team-med:('70.0th-pctl-dfs', 'SS')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '2B'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '2B')"/>
								<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '2B'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '2B'):('70.0th-pctl-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '2B'):('70.0th-pctl-dfs', '3B'))"/>
						</DerivedField>
						<DerivedField name="('med-dfs', '1B'):('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '1B')"/>
								<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '1B'):('70.0th-pctl-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '1B'):('70.0th-pctl-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '1B'):('70.0th-pctl-dfs', '3B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="147.5">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="42.720001220703125"/>
							<Node score="111.30199999999999">
								<SimplePredicate field="double(float(('med-dfs', '2B'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="36.35000038146973"/>
								<Node score="75.3065">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="206.9021987915039"/>
								</Node>
							</Node>
							<Node score="59.20000000000002">
								<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="36.60000038146973"/>
							</Node>
						</Node>
						<Node score="85.47777777777777">
							<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1078.9124755859375"/>
							<Node score="109.03599999999999">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('med-dfs', 'C')))" operator="lessOrEqual" value="37.25"/>
							</Node>
						</Node>
						<Node score="121.69272727272727">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="106.375"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="81" weight="0.37496236064330807">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', '2B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="150.25">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="79.89387096774195">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="807.34375"/>
								<Node score="38.099999999999994">
									<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="8072.431396484375"/>
								</Node>
							</Node>
							<Node score="108.91541666666667">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="37.10000038146973"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="82" weight="0.6346328686303341">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '3B')"/>
						<MiningField name="('70.0th-pctl-dfs', 'SS')"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', '3B')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="66.25"/>
							<Node score="92.60862068965515">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="82.17499923706055"/>
								</Node>
							</Node>
						</Node>
						<Node score="136.5">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="393.70001220703125"/>
							<Node score="122.88">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="133.0"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="83" weight="0.8931471559147669">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', '3B')"/>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '1B')^2))"/>
						<MiningField name="double(float(team-70.0th_pctl))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="float(('med-dfs', '3B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', '3B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', '3B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', '3B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="46.22999954223633"/>
							<Node score="105.75250000000001">
								<SimplePredicate field="double(float(team-70.0th_pctl))" operator="lessOrEqual" value="6.75"/>
								<Node score="72.49851851851851">
									<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="188.77439880371094"/>
								</Node>
							</Node>
						</Node>
						<Node score="89.0">
							<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="211.0250015258789"/>
							<Node score="75.32">
								<SimplePredicate field="double(float(('med-dfs', '3B')))" operator="lessOrEqual" value="14.25"/>
							</Node>
						</Node>
						<Node score="116.02100000000003">
							<SimplePredicate field="double(float(('med-dfs', '1B')^2))" operator="lessOrEqual" value="227.25"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="84" weight="0.8737484415353931">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="132.53875">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="244.30814361572266"/>
							<Node score="85.36736842105263">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.80849838256836"/>
								<Node score="69.07043478260869">
									<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="30.0"/>
								</Node>
							</Node>
							<Node score="103.22285714285715">
								<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="64.45000076293945"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="85" weight="0.7161304203916175">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="team-med"/>
						<MiningField name="('70.0th-pctl-dfs', '2B')"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="team-med:('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-med"/>
								<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-med:('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
							<FieldRef field="team-med:('70.0th-pctl-dfs', '2B')"/>
						</DerivedField>
						<DerivedField name="double(float(team-med:('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-med:('70.0th-pctl-dfs', '2B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="0.0">
						<True/>
						<Node score="148.875">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="95.78736842105266">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="129.4250030517578"/>
								<Node score="70.19967741935483">
									<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="2139.8621826171875"/>
								</Node>
							</Node>
							<Node score="115.10916666666667">
								<SimplePredicate field="double(float(team-med:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="224.6999969482422"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="86" weight="0.7398815035577399">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(team-med:('med-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="267.64625549316406"/>
							<Node score="78.32999999999998">
								<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="17.700000286102295"/>
							</Node>
						</Node>
						<Node score="135.21">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="292.0874938964844"/>
							<Node score="86.89763636363641">
								<SimplePredicate field="double(float(team-med:('med-dfs', 'C')))" operator="lessOrEqual" value="76.5"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="87" weight="0.1759692752043798">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="94.33220000000004">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="352.74749755859375"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="8765.65625"/>
								<Node score="64.58749999999999">
									<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="21.699999809265137"/>
								</Node>
							</Node>
							<Node score="144.75">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="-35.354000091552734"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="88" weight="0.7262660232438698">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(team_count:('med-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="146.4">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="1.7999999523162842"/>
							<Node score="50.79999999999999">
								<SimplePredicate field="double(float(team_count:('med-dfs', 'OF')))" operator="lessOrEqual" value="8.5"/>
							</Node>
						</Node>
						<Node score="70.37000000000003">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="40.89999961853027"/>
							<Node score="99.46789473684214">
								<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="22.274999618530273"/>
							</Node>
						</Node>
						<Node score="113.09">
							<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="166.5"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="89" weight="0.9433537208168167">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(team_count:team-med))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team_count:('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="119.22">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score:('med-dfs', 'OF')))" operator="lessOrEqual" value="788.2200012207031"/>
							<Node score="67.66413793103449">
								<SimplePredicate field="double(float(team_count:team-med))" operator="lessOrEqual" value="13.25"/>
								<Node score="98.39227272727275">
									<SimplePredicate field="double(float(team_count:('med-dfs', 'OF')))" operator="lessOrEqual" value="7.5"/>
								</Node>
							</Node>
						</Node>
						<Node score="153.0">
							<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="49.501197814941406"/>
							<Node score="136.5">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="289.5600051879883"/>
							</Node>
						</Node>
						<Node score="105.825">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '1B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="187.9800033569336"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="90" weight="0.7887623048895693">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="121.70727272727272">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="255.89749908447266"/>
							<Node score="62.94416666666667">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="9197.6201171875"/>
								<Node score="0.0">
									<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="12.100000143051147"/>
								</Node>
							</Node>
							<Node score="95.22820512820515">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1178.0249633789062"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="91" weight="1.0264263709535535">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('70.0th-pctl-dfs', '2B')"/>
						<MiningField name="('70.0th-pctl-dfs', 'SS')"/>
						<MiningField name="team-70.0th_pctl"/>
						<MiningField name="('med-dfs', '1B')"/>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B')^2))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', 'C'):('med-dfs', 'P')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS'))"/>
						</DerivedField>
						<DerivedField name="team-70.0th_pctl:('med-dfs', '1B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="team-70.0th_pctl"/>
								<FieldRef field="('med-dfs', '1B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(team-70.0th_pctl:('med-dfs', '1B'))" optype="continuous" dataType="float">
							<FieldRef field="team-70.0th_pctl:('med-dfs', '1B')"/>
						</DerivedField>
						<DerivedField name="double(float(team-70.0th_pctl:('med-dfs', '1B')))" optype="continuous" dataType="double">
							<FieldRef field="float(team-70.0th_pctl:('med-dfs', '1B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="144.75">
						<True/>
						<Node score="97.45500000000001">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13412.26220703125"/>
							<Node score="60.98750000000001">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="2036.8305053710938"/>
								<Node score="79.84230769230771">
									<SimplePredicate field="double(float(('med-dfs', 'C'):('med-dfs', 'P')))" operator="lessOrEqual" value="26.530500411987305"/>
								</Node>
							</Node>
							<Node score="83.73">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="32.875"/>
							</Node>
						</Node>
						<Node score="105.80714285714285">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B')^2))" operator="lessOrEqual" value="36.02000045776367"/>
							<Node score="74.85">
								<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', '1B')))" operator="lessOrEqual" value="17.324999809265137"/>
							</Node>
						</Node>
						<Node score="116.98714285714287">
							<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="126.25"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="92" weight="0.9927587726844732">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(best-possible-score:team_count))"/>
						<MiningField name="double(float(('med-dfs', 'OF')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'C')))"/>
					</MiningSchema>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="34.70000076293945"/>
							<Node score="93.6057142857143">
								<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="50.75"/>
								<Node score="59.68478260869567">
									<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="2034.1121215820312"/>
								</Node>
							</Node>
						</Node>
						<Node score="105.48230769230771">
							<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="94.4900016784668"/>
							<Node score="81.955">
								<SimplePredicate field="double(float(best-possible-score:team_count))" operator="lessOrEqual" value="204.6500015258789"/>
							</Node>
						</Node>
						<Node score="121.976">
							<SimplePredicate field="double(float(('med-dfs', 'OF')))" operator="lessOrEqual" value="12.0"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="93" weight="0.444830609175838">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', '2B'):('med-dfs', 'SS')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="810.6594848632812"/>
								<Node score="81.61951219512197">
									<SimplePredicate field="double(float(('med-dfs', '2B'):('med-dfs', 'SS')))" operator="lessOrEqual" value="36.75"/>
								</Node>
							</Node>
							<Node score="107.17111111111112">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="180.75"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="94" weight="1.0700518086497286">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('70.0th-pctl-dfs', '2B')"/>
						<MiningField name="('med-dfs', 'SS')"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(team_count:('med-dfs', 'P')))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(team-med:('med-dfs', '2B')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'SS')"/>
								<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B'))"/>
						</DerivedField>
						<DerivedField name="float(('70.0th-pctl-dfs', '2B'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', '2B')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', '2B'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="78.32999999999998">
						<True/>
						<Node score="108.2642307692308">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="54.0"/>
							<Node score="92.1275">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.80849838256836"/>
								<Node score="59.75999999999999">
									<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="21.0"/>
								</Node>
							</Node>
							<Node score="73.275">
								<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="9.949999809265137"/>
							</Node>
						</Node>
						<Node score="112.02499999999999">
							<SimplePredicate field="double(float(team_count:('med-dfs', 'P')))" operator="lessOrEqual" value="28.067999839782715"/>
							<Node score="64.58181818181819">
								<SimplePredicate field="double(float(team-med:('med-dfs', '2B')))" operator="lessOrEqual" value="38.5"/>
							</Node>
						</Node>
						<Node score="0.0">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="10.0"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="95" weight="0.682652240925219">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="6753.586181640625"/>
						</Node>
						<Node score="108.49225806451614">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="77.56636363636366">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13412.26220703125"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="96" weight="0.7653860351443235">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')))"/>
						<MiningField name="double(float(team_count:('70.0th-pctl-dfs', '2B')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="117.12407407407409">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="292.0874938964844"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13412.26220703125"/>
								<Node score="78.45939393939395">
									<SimplePredicate field="double(float(team_count:('70.0th-pctl-dfs', '2B')))" operator="lessOrEqual" value="22.800000190734863"/>
								</Node>
							</Node>
							<Node score="73.02499999999999">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', '2B'):('70.0th-pctl-dfs', '3B')))" operator="lessOrEqual" value="13.070000171661377"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="97" weight="1.0348176150837336">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('med-dfs', 'P')"/>
						<MiningField name="('70.0th-pctl-dfs', 'P')"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))"/>
						<MiningField name="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team-70.0th_pctl:('med-dfs', 'SS')))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('med-dfs', 'P'):('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('med-dfs', 'P')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'P'))" optype="continuous" dataType="float">
							<FieldRef field="('med-dfs', 'P'):('70.0th-pctl-dfs', 'P')"/>
						</DerivedField>
						<DerivedField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'P')))" optype="continuous" dataType="double">
							<FieldRef field="float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'P'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(('med-dfs', '3B'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="40.89999961853027"/>
							<Node score="68.62714285714284">
								<SimplePredicate field="double(float(team-70.0th_pctl:('med-dfs', 'SS')))" operator="lessOrEqual" value="47.44999885559082"/>
								<Node score="96.47590909090908">
									<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="20.199999809265137"/>
								</Node>
							</Node>
							<Node score="70.73999999999998">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="219.85950469970703"/>
							</Node>
						</Node>
						<Node score="84.125">
							<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1078.4349975585938"/>
							<Node score="107.405">
								<SimplePredicate field="double(float(('med-dfs', 'OF'):('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="33.29999923706055"/>
							</Node>
						</Node>
						<Node score="126.77499999999998">
							<SimplePredicate field="double(float(('70.0th-pctl-dfs', '3B'):('70.0th-pctl-dfs', 'OF')))" operator="lessOrEqual" value="276.6999969482422"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="98" weight="0.23286568415105333">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(team_count:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))"/>
						<MiningField name="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="153.0">
							<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="278.84999084472656"/>
							<Node score="0.0">
								<SimplePredicate field="double(float(best-possible-score))" operator="lessOrEqual" value="115.80849838256836"/>
								<Node score="74.14172413793104">
									<SimplePredicate field="double(float(team_count:team-70.0th_pctl))" operator="lessOrEqual" value="19.949999809265137"/>
								</Node>
							</Node>
							<Node score="103.50903225806452">
								<SimplePredicate field="double(float(('med-dfs', '1B'):('med-dfs', 'OF')))" operator="lessOrEqual" value="183.75"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="99" weight="0.710330920065396">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))"/>
						<MiningField name="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))"/>
						<MiningField name="double(float(team_count:team-med))"/>
					</MiningSchema>
					<Node score="0.0">
						<True/>
						<Node score="104.82666666666665">
							<SimplePredicate field="double(float(('med-dfs', 'SS'):('70.0th-pctl-dfs', 'P')))" operator="lessOrEqual" value="239.95000457763672"/>
							<Node score="148.875">
								<SimplePredicate field="double(float(('med-dfs', 'P'):('70.0th-pctl-dfs', 'C')))" operator="lessOrEqual" value="52.27975082397461"/>
								<Node score="101.25483870967744">
									<SimplePredicate field="double(float(team_count:team-med))" operator="lessOrEqual" value="26.5"/>
								</Node>
							</Node>
							<Node score="62.098518518518524">
								<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="616.4400024414062"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="100" weight="0.9792065731735544">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="('70.0th-pctl-dfs', 'OF')"/>
						<MiningField name="('70.0th-pctl-dfs', 'SS')"/>
						<MiningField name="double(float(best-possible-score:team-70.0th_pctl))"/>
						<MiningField name="double(float(best-possible-score^2))"/>
						<MiningField name="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '1B')))"/>
						<MiningField name="double(float(team-med))"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
							<Apply function="*">
								<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
								<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							</Apply>
						</DerivedField>
						<DerivedField name="float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'SS'))" optype="continuous" dataType="float">
							<FieldRef field="('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')"/>
						</DerivedField>
						<DerivedField name="double(float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')))" optype="continuous" dataType="double">
							<FieldRef field="float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'SS'))"/>
						</DerivedField>
					</LocalTransformations>
					<Node score="153.0">
						<True/>
						<Node score="0.0">
							<SimplePredicate field="double(float(team-70.0th_pctl:('70.0th-pctl-dfs', '1B')))" operator="lessOrEqual" value="7.920000076293945"/>
							<Node score="50.8">
								<SimplePredicate field="double(float(('70.0th-pctl-dfs', 'OF'):('70.0th-pctl-dfs', 'SS')))" operator="lessOrEqual" value="46.839999198913574"/>
							</Node>
						</Node>
						<Node score="101.34409090909094">
							<SimplePredicate field="double(float(best-possible-score:team-70.0th_pctl))" operator="lessOrEqual" value="1206.3599853515625"/>
							<Node score="84.19241379310346">
								<SimplePredicate field="double(float(best-possible-score^2))" operator="lessOrEqual" value="13412.26220703125"/>
							</Node>
						</Node>
						<Node score="120.75833333333331">
							<SimplePredicate field="double(float(team-med))" operator="lessOrEqual" value="12.0"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
		</Segmentation>
	</MiningModel>
</PMML>
