<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<PMML xmlns="http://www.dmg.org/PMML-4_4" xmlns:data="http://jpmml.org/jpmml-model/InlineTable" version="4.4">
	<Header>
		<Application name="JPMML-SkLearn library" version="1.7.10"/>
		<Timestamp>2022-09-04T00:57:23Z</Timestamp>
	</Header>
	<MiningBuildTask>
		<Extension name="repr">PMMLPipeline(steps=[('mapper', DataFrameMapper(drop_cols=[],
                features=[(['best-possible-score'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team_count'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team-med'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team-70.0th_pctl'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('med-dfs', 'C')"],
                           Continuou...
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'C')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'D')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'G')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'W')"],
                           ContinuousDomain(invalid_value_treatment='as_is'))])),
       ('selectpercentile', SelectorProxy(selector=SelectPercentile(percentile=69,
                                        score_func=&lt;function f_regression at 0x7f6d868c5d80&gt;))),
       ('pca', PCA(iterated_power=4, svd_solver='randomized')),
       ('adaboostregressor', AdaBoostRegressor(learning_rate=0.1, n_estimators=100))])</Extension>
	</MiningBuildTask>
	<DataDictionary>
		<DataField name="top_score" optype="continuous" dataType="double"/>
		<DataField name="best-possible-score" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="197.6" rightMargin="402.8"/>
		</DataField>
		<DataField name="team_count" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="4.0" rightMargin="26.0"/>
		</DataField>
		<DataField name="team-med" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="1.5" rightMargin="4.0"/>
		</DataField>
		<DataField name="team-70.0th_pctl" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="2.8999999999999986" rightMargin="4.899999999999999"/>
		</DataField>
		<DataField name="('med-dfs', 'D')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="4.8" rightMargin="8.8"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="7.839999999999998" rightMargin="16.0"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'G')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="16.0" rightMargin="31.2"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'W')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="6.4" rightMargin="14.479999999999997"/>
		</DataField>
	</DataDictionary>
	<MiningModel functionName="regression" algorithmName="sklearn.ensemble._weight_boosting.AdaBoostRegressor">
		<MiningSchema>
			<MiningField name="top_score" usageType="target"/>
			<MiningField name="best-possible-score" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="team_count" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="team-med" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="team-70.0th_pctl" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', 'D')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'C')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'G')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'W')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
		</MiningSchema>
		<ModelStats>
			<UnivariateStats field="best-possible-score">
				<Counts totalFreq="49" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="197.6" maximum="402.8" mean="298.0224489795918" standardDeviation="47.328906752751664" median="292.5" interQuartileRange="65.30000000000007"/>
			</UnivariateStats>
			<UnivariateStats field="team_count">
				<Counts totalFreq="49" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="4.0" maximum="26.0" mean="14.448979591836734" standardDeviation="6.556072818044494" median="14.0" interQuartileRange="10.0"/>
			</UnivariateStats>
			<UnivariateStats field="team-med">
				<Counts totalFreq="49" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="1.5" maximum="4.0" mean="2.826530612244898" standardDeviation="0.5583413885838553" median="3.0" interQuartileRange="0.5"/>
			</UnivariateStats>
			<UnivariateStats field="team-70.0th_pctl">
				<Counts totalFreq="49" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="2.8999999999999986" maximum="4.899999999999999" mean="3.722448979591837" standardDeviation="0.46741377295927" median="4.0" interQuartileRange="0.7000000000000011"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', 'D')">
				<Counts totalFreq="49" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="4.8" maximum="8.8" mean="5.502040816326531" standardDeviation="0.8798167239384478" median="4.8" interQuartileRange="1.6000000000000005"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'C')">
				<Counts totalFreq="49" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="7.839999999999998" maximum="16.0" mean="11.482857142857142" standardDeviation="2.106782051434106" median="11.2" interQuartileRange="3.200000000000001"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'G')">
				<Counts totalFreq="49" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="16.0" maximum="31.2" mean="24.004897959183673" standardDeviation="4.206503285098784" median="23.84" interQuartileRange="6.239999999999998"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'W')">
				<Counts totalFreq="49" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="6.4" maximum="14.479999999999997" mean="11.094489795918369" standardDeviation="1.823552331861834" median="11.2" interQuartileRange="3.200000000000001"/>
			</UnivariateStats>
		</ModelStats>
		<LocalTransformations>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">298.0224489795918</Constant>
						</Apply>
						<Constant dataType="double">0.9943285455631717</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">14.448979591836734</Constant>
						</Apply>
						<Constant dataType="double">0.1029579372308946</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">2.826530612244898</Constant>
						</Apply>
						<Constant dataType="double">0.0043410344448044525</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">3.722448979591837</Constant>
						</Apply>
						<Constant dataType="double">0.0056748943282085</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'D')"/>
							<Constant dataType="double">5.502040816326531</Constant>
						</Apply>
						<Constant dataType="double">0.0015711015642095834</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">11.482857142857142</Constant>
						</Apply>
						<Constant dataType="double">0.005870098026398313</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'G')"/>
							<Constant dataType="double">24.004897959183673</Constant>
						</Apply>
						<Constant dataType="double">-0.022808404332361868</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'W')"/>
							<Constant dataType="double">11.094489795918369</Constant>
						</Apply>
						<Constant dataType="double">0.010109793002147238</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">298.0224489795918</Constant>
						</Apply>
						<Constant dataType="double">-0.06225099437283771</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">14.448979591836734</Constant>
						</Apply>
						<Constant dataType="double">0.7539029206768664</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">2.826530612244898</Constant>
						</Apply>
						<Constant dataType="double">-0.02395916851670042</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">3.722448979591837</Constant>
						</Apply>
						<Constant dataType="double">-0.03052053769490374</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'D')"/>
							<Constant dataType="double">5.502040816326531</Constant>
						</Apply>
						<Constant dataType="double">0.02612478638796302</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">11.482857142857142</Constant>
						</Apply>
						<Constant dataType="double">-0.11127344208217996</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'G')"/>
							<Constant dataType="double">24.004897959183673</Constant>
						</Apply>
						<Constant dataType="double">0.6425556015538224</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'W')"/>
							<Constant dataType="double">11.094489795918369</Constant>
						</Apply>
						<Constant dataType="double">-0.017540537405047366</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">298.0224489795918</Constant>
						</Apply>
						<Constant dataType="double">-0.08473755323940557</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">14.448979591836734</Constant>
						</Apply>
						<Constant dataType="double">0.6275560281934345</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">2.826530612244898</Constant>
						</Apply>
						<Constant dataType="double">0.07778760314927305</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">3.722448979591837</Constant>
						</Apply>
						<Constant dataType="double">0.027253837822836538</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'D')"/>
							<Constant dataType="double">5.502040816326531</Constant>
						</Apply>
						<Constant dataType="double">0.04163597758409007</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">11.482857142857142</Constant>
						</Apply>
						<Constant dataType="double">0.3082821494402725</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'G')"/>
							<Constant dataType="double">24.004897959183673</Constant>
						</Apply>
						<Constant dataType="double">-0.6841040126090128</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'W')"/>
							<Constant dataType="double">11.094489795918369</Constant>
						</Apply>
						<Constant dataType="double">0.16561871062366929</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">298.0224489795918</Constant>
						</Apply>
						<Constant dataType="double">0.011124927203188806</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">14.448979591836734</Constant>
						</Apply>
						<Constant dataType="double">-0.05949244340703244</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">2.826530612244898</Constant>
						</Apply>
						<Constant dataType="double">-0.02786544566704397</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">3.722448979591837</Constant>
						</Apply>
						<Constant dataType="double">-0.037639364018218845</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'D')"/>
							<Constant dataType="double">5.502040816326531</Constant>
						</Apply>
						<Constant dataType="double">0.02720404277130118</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">11.482857142857142</Constant>
						</Apply>
						<Constant dataType="double">0.83980426975149</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'G')"/>
							<Constant dataType="double">24.004897959183673</Constant>
						</Apply>
						<Constant dataType="double">0.19876687352461328</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'W')"/>
							<Constant dataType="double">11.094489795918369</Constant>
						</Apply>
						<Constant dataType="double">-0.49862224071894423</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">298.0224489795918</Constant>
						</Apply>
						<Constant dataType="double">0.009825528730341992</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">14.448979591836734</Constant>
						</Apply>
						<Constant dataType="double">-0.15179166153372342</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">2.826530612244898</Constant>
						</Apply>
						<Constant dataType="double">0.14544859640072663</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">3.722448979591837</Constant>
						</Apply>
						<Constant dataType="double">0.09125906150144626</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'D')"/>
							<Constant dataType="double">5.502040816326531</Constant>
						</Apply>
						<Constant dataType="double">0.1969332035301379</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">11.482857142857142</Constant>
						</Apply>
						<Constant dataType="double">0.4108071348420055</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'G')"/>
							<Constant dataType="double">24.004897959183673</Constant>
						</Apply>
						<Constant dataType="double">0.27419439078655483</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'W')"/>
							<Constant dataType="double">11.094489795918369</Constant>
						</Apply>
						<Constant dataType="double">0.8152616066909965</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">298.0224489795918</Constant>
						</Apply>
						<Constant dataType="double">0.0015751691350473654</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">14.448979591836734</Constant>
						</Apply>
						<Constant dataType="double">-0.016293597923521315</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">2.826530612244898</Constant>
						</Apply>
						<Constant dataType="double">0.04889550533385599</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">3.722448979591837</Constant>
						</Apply>
						<Constant dataType="double">-0.05739784548409867</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'D')"/>
							<Constant dataType="double">5.502040816326531</Constant>
						</Apply>
						<Constant dataType="double">0.9748462723849262</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">11.482857142857142</Constant>
						</Apply>
						<Constant dataType="double">-0.12035247025927732</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'G')"/>
							<Constant dataType="double">24.004897959183673</Constant>
						</Apply>
						<Constant dataType="double">-0.04660115404170416</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'W')"/>
							<Constant dataType="double">11.094489795918369</Constant>
						</Apply>
						<Constant dataType="double">-0.16451478645555867</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">298.0224489795918</Constant>
						</Apply>
						<Constant dataType="double">-0.0035372615205156075</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">14.448979591836734</Constant>
						</Apply>
						<Constant dataType="double">6.063345202402537E-4</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">2.826530612244898</Constant>
						</Apply>
						<Constant dataType="double">0.8136772992406137</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">3.722448979591837</Constant>
						</Apply>
						<Constant dataType="double">0.5465150382720172</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'D')"/>
							<Constant dataType="double">5.502040816326531</Constant>
						</Apply>
						<Constant dataType="double">-0.0443735111442237</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">11.482857142857142</Constant>
						</Apply>
						<Constant dataType="double">-0.06241934612386388</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'G')"/>
							<Constant dataType="double">24.004897959183673</Constant>
						</Apply>
						<Constant dataType="double">0.04138201803119439</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'W')"/>
							<Constant dataType="double">11.094489795918369</Constant>
						</Apply>
						<Constant dataType="double">-0.17793265890299514</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">298.0224489795918</Constant>
						</Apply>
						<Constant dataType="double">-0.004450376595724389</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">14.448979591836734</Constant>
						</Apply>
						<Constant dataType="double">0.01890958819168674</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">2.826530612244898</Constant>
						</Apply>
						<Constant dataType="double">-0.5540423336368004</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">3.722448979591837</Constant>
						</Apply>
						<Constant dataType="double">0.828598444919855</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'D')"/>
							<Constant dataType="double">5.502040816326531</Constant>
						</Apply>
						<Constant dataType="double">0.07592405861699775</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">11.482857142857142</Constant>
						</Apply>
						<Constant dataType="double">0.011457485538206842</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'G')"/>
							<Constant dataType="double">24.004897959183673</Constant>
						</Apply>
						<Constant dataType="double">-0.005366806494670067</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'W')"/>
							<Constant dataType="double">11.094489795918369</Constant>
						</Apply>
						<Constant dataType="double">-0.01264088499972974</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3])"/>
			</DerivedField>
		</LocalTransformations>
		<Segmentation multipleModelMethod="weightedMedian">
			<Segment id="1" weight="0.11229985242356633">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
					</MiningSchema>
					<Node score="242.5">
						<True/>
						<Node score="149.0">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-37.733436584472656"/>
							<Node score="156.55714285714285">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-56.567365646362305"/>
								<Node score="178.09999999999997">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.15133067220449448"/>
								</Node>
							</Node>
							<Node score="137.60000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.1273193359375"/>
							</Node>
						</Node>
						<Node score="187.11666666666665">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="92.95914459228516"/>
							<Node score="209.51666666666674">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.45019444823265076"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="2" weight="0.14974464407776694">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
					</MiningSchema>
					<Node score="180.18000000000004">
						<True/>
						<Node score="159.78">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="22.263103485107422"/>
							<Node score="173.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.365079641342163"/>
								<Node score="207.60000000000002">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.10129085928201675"/>
								</Node>
							</Node>
							<Node score="174.65263157894734">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.13355670683085918"/>
							</Node>
						</Node>
						<Node score="246.45">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2625250853598118"/>
							<Node score="222.55">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.10087009519338608"/>
							</Node>
						</Node>
						<Node score="206.16666666666666">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="0.6722276583313942"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="3" weight="0.09785969865973637">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="169.96666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-31.423215866088867"/>
							<Node score="203.30000000000007">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.41705992817878723"/>
							</Node>
							<Node score="155.65454545454543">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.7781624794006348"/>
							</Node>
						</Node>
						<Node score="182.0913043478261">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.200029492378235"/>
							<Node score="211.025">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.32894793152809143"/>
							</Node>
						</Node>
						<Node score="210.63333333333333">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="6.1641435623168945"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="4" weight="0.07205322545123236">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
					</MiningSchema>
					<Node score="176.22857142857146">
						<True/>
						<Node score="181.97999999999996">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="8.840358138084412"/>
							<Node score="210.75">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-4.344542622566223"/>
								<Node score="203.30000000000007">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-0.8501182049512863"/>
								</Node>
							</Node>
							<Node score="159.9157894736842">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2077736258506775"/>
							</Node>
						</Node>
						<Node score="236.6">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="201.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.3769964277744293"/>
							</Node>
						</Node>
						<Node score="211.60000000000008">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.156045563519001"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="5" weight="0.08320178004790739">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="174.46666666666667">
						<True/>
						<Node score="182.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="198.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.13950399309396744"/>
								<Node score="172.2888888888889">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.3241921663284302"/>
								</Node>
							</Node>
							<Node score="157.76363636363638">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.25673192739486694"/>
							</Node>
						</Node>
						<Node score="240.70000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.08040002023335546"/>
							<Node score="213.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.08531919214874506"/>
							</Node>
						</Node>
						<Node score="194.6">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-1.3652195930480957"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="6" weight="0.14166094471229873">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
					</MiningSchema>
					<Node score="177.0941176470588">
						<True/>
						<Node score="164.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-3.9931799173355103"/>
							<Node score="248.58333333333334">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.8145358711481094"/>
								<Node score="209.30000000000004">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.5131504535675049"/>
								</Node>
							</Node>
							<Node score="169.19999999999996">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.14988508820533752"/>
							</Node>
						</Node>
						<Node score="156.475">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-37.733436584472656"/>
							<Node score="137.60000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.09690859913825989"/>
							</Node>
						</Node>
						<Node score="195.51764705882357">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="2.9131070375442505"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="7" weight="0.10437706542919574">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
					</MiningSchema>
					<Node score="175.875">
						<True/>
						<Node score="195.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="22.263103485107422"/>
							<Node score="234.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.5078404545783997"/>
								<Node score="210.39999999999995">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.082496553659439"/>
								</Node>
							</Node>
							<Node score="164.25217391304346">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2666705697774887"/>
							</Node>
						</Node>
						<Node score="223.63333333333335">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="250.39999999999995">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.6917797476053238"/>
							</Node>
						</Node>
						<Node score="199.68000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="50.19575881958008"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="8" weight="0.11210668838820192">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="207.4">
						<True/>
						<Node score="213.16666666666666">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="145.88000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2077736258506775"/>
								<Node score="166.91052631578947">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="1.0973542928695679"/>
								</Node>
							</Node>
							<Node score="204.4">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-2.806465268135071"/>
							</Node>
						</Node>
						<Node score="247.63333333333333">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.08040002023335546"/>
							<Node score="208.28888888888886">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="0.4291302338242531"/>
							</Node>
						</Node>
						<Node score="171.475">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.14065605401992798"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="9" weight="0.1331201258097543">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="180.48333333333335">
						<True/>
						<Node score="169.95">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.295839548110962"/>
							<Node score="174.82">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="0.7121746242046356"/>
								<Node score="148.76000000000002">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.3123125433921814"/>
								</Node>
							</Node>
							<Node score="205.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.6139304935932159"/>
							</Node>
						</Node>
						<Node score="223.63333333333335">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="0.09767179458867759"/>
							<Node score="252.37499999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.6917797476053238"/>
							</Node>
						</Node>
						<Node score="206.51999999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="4.5209925174713135"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="10" weight="0.10861830220185649">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
					</MiningSchema>
					<Node score="180.25">
						<True/>
						<Node score="201.04999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="26.01658535003662"/>
							<Node score="234.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.42850247025489807"/>
								<Node score="206.85000000000002">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.24933132156729698"/>
								</Node>
							</Node>
							<Node score="165.71874999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.238768070936203"/>
							</Node>
						</Node>
						<Node score="259.79999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="248.41428571428565">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-0.3349534273147583"/>
							</Node>
						</Node>
						<Node score="209.87000000000006">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="50.19575881958008"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="11" weight="0.10463112551240546">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="182.29999999999998">
						<True/>
						<Node score="259.79999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.9090669453144073"/>
							<Node score="204.4">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="15.889452934265137"/>
								<Node score="211.10000000000005">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.6206838116049767"/>
								</Node>
							</Node>
							<Node score="242.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.9453370571136475"/>
							</Node>
						</Node>
						<Node score="168.83076923076922">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="22.263103485107422"/>
							<Node score="206.85000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-4.951436161994934"/>
							</Node>
						</Node>
						<Node score="215.75">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.020599483512341976"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="12" weight="0.09968049520850367">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="179.75">
						<True/>
						<Node score="211.10000000000005">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="8.840358138084412"/>
							<Node score="161.4">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.238768070936203"/>
								<Node score="203.30000000000007">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.5119716972112656"/>
								</Node>
							</Node>
							<Node score="184.03749999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="1.9997244477272034"/>
							</Node>
						</Node>
						<Node score="190.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.08040002023335546"/>
							<Node score="235.48000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="7.265147686004639"/>
							</Node>
						</Node>
						<Node score="211.60000000000008">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.5312891006469727"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="13" weight="0.13076410784388745">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="243.20000000000002">
						<True/>
						<Node score="195.03333333333333">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="159.54">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2077736258506775"/>
								<Node score="174.69999999999996">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.03894696198403835"/>
								</Node>
							</Node>
							<Node score="163.95">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-1.5069660544395447"/>
							</Node>
						</Node>
						<Node score="219.30000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-4.366017818450928"/>
							<Node score="250.7166666666666">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.6917797476053238"/>
							</Node>
						</Node>
						<Node score="189.63">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.10507757775485516"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="14" weight="0.08720291795768821">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="177.88333333333335">
						<True/>
						<Node score="163.1263157894737">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="12.603159189224243"/>
							<Node score="181.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.365079641342163"/>
								<Node score="211.7">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.10129085928201675"/>
								</Node>
							</Node>
							<Node score="191.26666666666665">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.9133471548557281"/>
							</Node>
						</Node>
						<Node score="244.59999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.023926949477754533"/>
							<Node score="206.81428571428572">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.19150632247328758"/>
							</Node>
						</Node>
						<Node score="211.60000000000008">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.5312891006469727"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="15" weight="0.13522153764363107">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="177.5">
						<True/>
						<Node score="182.10000000000008">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="30.83324909210205"/>
							<Node score="175.7222222222222">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="12.603159189224243"/>
								<Node score="159.25555555555553">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.9567724764347076"/>
								</Node>
							</Node>
							<Node score="207.45999999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="1.1805574893951416"/>
							</Node>
						</Node>
						<Node score="249.75833333333333">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.08040002023335546"/>
							<Node score="217.55">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.33826436661183834"/>
							</Node>
						</Node>
						<Node score="204.6">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="45.01972961425781"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="16" weight="0.13911606525559359">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="206.46666666666667">
						<True/>
						<Node score="175.72307692307692">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="174.85">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-2.9135079383850098"/>
								<Node score="211.47500000000002">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="0.5878106355667114"/>
								</Node>
							</Node>
							<Node score="151.51">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-0.7993307709693909"/>
							</Node>
						</Node>
						<Node score="252.825">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.08040002023335546"/>
							<Node score="214.64999999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.19150632247328758"/>
							</Node>
						</Node>
						<Node score="171.96666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.14065605401992798"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="17" weight="0.12209766258099673">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
					</MiningSchema>
					<Node score="211.60000000000008">
						<True/>
						<Node score="172.26249999999996">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="10.577757120132446"/>
							<Node score="210.39999999999995">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.45019444823265076"/>
								<Node score="203.30000000000007">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.3252064622938633"/>
								</Node>
							</Node>
							<Node score="152.26666666666668">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.3123125433921814"/>
							</Node>
						</Node>
						<Node score="181.71666666666673">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.10138031095266342"/>
							<Node score="248.89999999999995">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-5.8377604484558105"/>
							</Node>
						</Node>
						<Node score="240.21666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.7677432000637054"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="18" weight="0.13064979505193616">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="193.375">
						<True/>
						<Node score="137.60000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-31.423215866088867"/>
							<Node score="158.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="0.41405797004699707"/>
								<Node score="168.76666666666662">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="3.0407813787460327"/>
								</Node>
							</Node>
						</Node>
						<Node score="192.64545454545453">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="1.1527448296546936"/>
							<Node score="222.13076923076926">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.3221933916211128"/>
							</Node>
						</Node>
						<Node score="166.04999999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.08935782872140408"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="19" weight="0.09946803561251462">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="196.25">
						<True/>
						<Node score="175.59999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="10.577757120132446"/>
							<Node score="165.8166666666667">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-43.8120231628418"/>
								<Node score="156.23333333333332">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="0.5560820400714874"/>
								</Node>
							</Node>
							<Node score="204.11428571428573">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-20.970200538635254"/>
							</Node>
						</Node>
						<Node score="241.66249999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.08040002023335546"/>
							<Node score="213.5125">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.10363758262246847"/>
							</Node>
						</Node>
						<Node score="169.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="0.3570343255996704"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="20" weight="0.12383163831210005">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="171.7785714285714">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="12.603159189224243"/>
							<Node score="203.30000000000007">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.45019444823265076"/>
								<Node score="210.39999999999995">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.5382849872112274"/>
								</Node>
							</Node>
							<Node score="154.67499999999995">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.25263427570462227"/>
							</Node>
						</Node>
						<Node score="248.6285714285714">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="0.09767179458867759"/>
							<Node score="217.55">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.05433443933725357"/>
							</Node>
						</Node>
						<Node score="194.4818181818182">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.439582347869873"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="21" weight="0.11425523515826107">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="188.80000000000007">
						<True/>
						<Node score="194.19411764705887">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="41.50355529785156"/>
							<Node score="164.48571428571427">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-36.52788829803467"/>
								<Node score="144.11428571428573">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.7307029962539673"/>
								</Node>
							</Node>
							<Node score="163.68749999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.44499659538269043"/>
							</Node>
						</Node>
						<Node score="248.89999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-3.310692310333252"/>
							<Node score="259.79999999999995">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.06640146672725677"/>
							</Node>
						</Node>
						<Node score="225.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.012159691425040364"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="22" weight="0.1195096078862626">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="177.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="214.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.365079641342163"/>
								<Node score="211.10000000000005">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.03100296331103891"/>
								</Node>
							</Node>
							<Node score="157.33571428571426">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.25263427570462227"/>
							</Node>
						</Node>
						<Node score="226.5666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="250.39999999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="0.2855113595724106"/>
							</Node>
						</Node>
						<Node score="185.98">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.7264695167541504"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="23" weight="0.152844388166418">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="178.37272727272727">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="23.31435489654541"/>
							<Node score="194.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.365079641342163"/>
								<Node score="208.7833333333333">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="0.13432025909423828"/>
								</Node>
							</Node>
							<Node score="149.84">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-1.0269424617290497"/>
							</Node>
						</Node>
						<Node score="194.4307692307693">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="1.742835283279419"/>
							<Node score="232.06666666666663">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							</Node>
						</Node>
						<Node score="242.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="0.33925366401672363"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="24" weight="0.1208116082627925">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="162.45">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="10.577757120132446"/>
							<Node score="176.825">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.285381980240345"/>
								<Node score="198.25384615384615">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-20.565059661865234"/>
								</Node>
							</Node>
							<Node score="146.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.9721872806549072"/>
							</Node>
						</Node>
						<Node score="230.775">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.22856420651078224"/>
							<Node score="251.83">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="0.2855113595724106"/>
							</Node>
						</Node>
						<Node score="193.45555555555558">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.439582347869873"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="25" weight="0.11624763174934345">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="201.3857142857143">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="173.33999999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.026844576001167297"/>
								<Node score="151.65555555555557">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.1174670457839966"/>
								</Node>
							</Node>
							<Node score="169.19999999999996">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-39.820993423461914"/>
							</Node>
						</Node>
						<Node score="250.7">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-4.366017818450928"/>
							<Node score="219.30000000000004">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="34.86359119415283"/>
							</Node>
						</Node>
						<Node score="199.8444444444445">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.3671205043792725"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="26" weight="0.08275545279295622">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
					</MiningSchema>
					<Node score="146.1">
						<True/>
						<Node score="137.60000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-40.37300109863281"/>
							<Node score="159.75">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.5710079725831747"/>
								<Node score="178.09999999999997">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.03203023225069046"/>
								</Node>
							</Node>
						</Node>
						<Node score="248.89999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-7.893524169921875"/>
						</Node>
						<Node score="193.7864864864864">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.6955501139163971"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="27" weight="0.11211463201406624">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="209.66">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="149.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.1776864007115364"/>
								<Node score="165.46666666666667">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.025227138306945562"/>
								</Node>
							</Node>
							<Node score="174.6428571428571">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.07948140799999237"/>
							</Node>
						</Node>
						<Node score="228.03333333333333">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.24272160604596138"/>
							<Node score="251.14999999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="0.2855113595724106"/>
							</Node>
						</Node>
						<Node score="198.70000000000005">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.439582347869873"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="28" weight="0.12233991251315464">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="185.54">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="172.83333333333334">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.026844576001167297"/>
								<Node score="153.18333333333334">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.5351663827896118"/>
								</Node>
							</Node>
							<Node score="203.98333333333338">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.342489719390869"/>
							</Node>
						</Node>
						<Node score="234.6">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="257.07499999999993">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.23525619506835938"/>
							</Node>
						</Node>
						<Node score="197.39285714285714">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.7264695167541504"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="29" weight="0.11188971255176146">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="188.80000000000007">
						<True/>
						<Node score="162.1888888888889">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="22.263103485107422"/>
							<Node score="214.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.342489719390869"/>
								<Node score="203.30000000000007">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-2.007870852947235"/>
								</Node>
							</Node>
							<Node score="186.27499999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.1420634239912033"/>
							</Node>
						</Node>
						<Node score="208.01111111111115">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="53.53111267089844"/>
							<Node score="245.06">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.1600096374750137"/>
							</Node>
						</Node>
						<Node score="175.45714285714286">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.9090128242969513"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="30" weight="0.11724732102447177">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
					</MiningSchema>
					<Node score="182.7952380952381">
						<True/>
						<Node score="248.89999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-7.893524169921875"/>
						</Node>
						<Node score="150.79999999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-37.733436584472656"/>
							<Node score="162.83333333333334">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.018109239637851715"/>
							</Node>
						</Node>
						<Node score="204.60526315789474">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.17680197954177856"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="31" weight="0.09826036439911394">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="192.55">
						<True/>
						<Node score="159.53076923076924">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="181.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.365079641342163"/>
								<Node score="211.7">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-20.565059661865234"/>
								</Node>
							</Node>
							<Node score="184.45">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.12431524321436882"/>
							</Node>
						</Node>
						<Node score="182.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.023926949477754533"/>
							<Node score="236.95454545454547">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.362924188375473"/>
							</Node>
						</Node>
						<Node score="168.39999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.693112313747406"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="32" weight="0.12867581089984734">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="179.80000000000004">
						<True/>
						<Node score="157.38571428571427">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="181.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.365079641342163"/>
								<Node score="209.5333333333334">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.2643059492111206"/>
								</Node>
							</Node>
							<Node score="180.3285714285714">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-3.6599432229995728"/>
							</Node>
						</Node>
						<Node score="235.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="4.264639139175415"/>
							<Node score="197.4375">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-0.8081285506486893"/>
							</Node>
						</Node>
						<Node score="170.0">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.009924110025167465"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="33" weight="0.09847962400767643">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="181.97999999999996">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="10.577757120132446"/>
							<Node score="210.86666666666667">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-4.344542622566223"/>
								<Node score="203.30000000000007">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.3252064622938633"/>
								</Node>
							</Node>
							<Node score="160.58095238095234">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2077736258506775"/>
							</Node>
						</Node>
						<Node score="241.3714285714286">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.25758932530879974"/>
							<Node score="213.4">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.10363758262246847"/>
							</Node>
						</Node>
						<Node score="189.275">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.439582347869873"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="34" weight="0.11717631200330572">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="246.25">
						<True/>
						<Node score="189.6818181818182">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="30.83324909210205"/>
							<Node score="234.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.4208572953939438"/>
								<Node score="208.03333333333333">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.24933132156729698"/>
								</Node>
							</Node>
							<Node score="162.97999999999996">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.1712922602891922"/>
							</Node>
						</Node>
						<Node score="213.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="0.8615453839302063"/>
							<Node score="168.39999999999995">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.6583824157714844"/>
							</Node>
						</Node>
						<Node score="259.79999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.29870638251304626"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="35" weight="0.10329741412105553">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="144.50000000000003">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="212.13333333333335">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.365079641342163"/>
								<Node score="203.30000000000007">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.13565047085285187"/>
								</Node>
							</Node>
							<Node score="167.69999999999996">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="1.0257880687713623"/>
							</Node>
						</Node>
						<Node score="230.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="252.1875">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.01143044582568109"/>
							</Node>
						</Node>
						<Node score="192.39230769230775">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.7264695167541504"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="36" weight="0.11376176746743145">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="176.06875000000002">
						<True/>
						<Node score="234.29999999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.3123626634478569"/>
							<Node score="207.75000000000003">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-2.0367259979248047"/>
								<Node score="164.69999999999996">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-33.86062049865723"/>
								</Node>
							</Node>
							<Node score="255.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.01143044582568109"/>
							</Node>
						</Node>
						<Node score="143.26666666666668">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.9170006513595581"/>
							<Node score="168.04999999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-1.6596896052360535"/>
							</Node>
						</Node>
						<Node score="195.71999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.96599680185318"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="37" weight="0.08674526170291175">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
					</MiningSchema>
					<Node score="173.59999999999997">
						<True/>
						<Node score="181.89999999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="149.77777777777777">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2077736258506775"/>
								<Node score="171.9533333333333">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.0043661929666996"/>
								</Node>
							</Node>
							<Node score="207.66666666666666">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-0.9946024417877197"/>
							</Node>
						</Node>
						<Node score="201.6">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="240.4454545454545">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="0.30348874151241034"/>
							</Node>
						</Node>
						<Node score="214.95000000000005">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="63.412593841552734"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="38" weight="0.11244101450273694">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="182.80000000000004">
						<True/>
						<Node score="192.3625">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="156.89999999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-1.5069660544395447"/>
								<Node score="149.0">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-2.5119415521621704"/>
								</Node>
							</Node>
							<Node score="169.63571428571422">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2077736258506775"/>
							</Node>
						</Node>
						<Node score="224.96000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.22256935387849808"/>
							<Node score="252.27999999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="0.2855113595724106"/>
							</Node>
						</Node>
						<Node score="210.06666666666672">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.2525152564048767"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="39" weight="0.12405410591842475">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
					</MiningSchema>
					<Node score="177.36">
						<True/>
						<Node score="170.54999999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="8.840358138084412"/>
							<Node score="181.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.6849108934402466"/>
								<Node score="210.39999999999995">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.6139304935932159"/>
								</Node>
							</Node>
							<Node score="150.84545454545457">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.3123125433921814"/>
							</Node>
						</Node>
						<Node score="237.12500000000003">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.023926949477754533"/>
							<Node score="197.04000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.11637507285922766"/>
							</Node>
						</Node>
						<Node score="199.6">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="0.6722276583313942"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="40" weight="0.1133646653244441">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="225.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.32990847527980804"/>
							<Node score="171.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="34.86359119415283"/>
								<Node score="214.85555555555558">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="2.180384337902069"/>
								</Node>
							</Node>
							<Node score="251.98888888888885">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="56.46636772155762"/>
							</Node>
						</Node>
						<Node score="201.04999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="19.986762046813965"/>
							<Node score="158.225">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.238768070936203"/>
							</Node>
						</Node>
						<Node score="197.40769230769234">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.3671205043792725"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="41" weight="0.11848334813087039">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="173.60000000000005">
						<True/>
						<Node score="255.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.3638693541288376"/>
							<Node score="175.60000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="35.340182304382324"/>
								<Node score="204.8666666666667">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="1.4536605477333069"/>
								</Node>
							</Node>
							<Node score="225.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.7659166660159826"/>
							</Node>
						</Node>
						<Node score="172.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.6304013431072235"/>
							<Node score="148.25">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.42098063230514526"/>
							</Node>
						</Node>
						<Node score="197.31818181818187">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="4.163037300109863"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="42" weight="0.10772067234214562">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="168.39999999999995">
						<True/>
						<Node score="183.99999999999994">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="12.603159189224243"/>
							<Node score="167.91111111111113">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.14804662019014359"/>
								<Node score="142.7">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-1.0269424617290497"/>
								</Node>
							</Node>
							<Node score="212.65000000000003">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-20.565059661865234"/>
							</Node>
						</Node>
						<Node score="198.32500000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="69.41304588317871"/>
							<Node score="232.79999999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.08040002023335546"/>
							</Node>
						</Node>
						<Node score="178.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-2.3224079310894012"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="43" weight="0.12878235684993566">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="168.39999999999995">
						<True/>
						<Node score="182.87499999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="8.840358138084412"/>
							<Node score="143.21666666666667">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2077736258506775"/>
								<Node score="171.36363636363635">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.005444427952170372"/>
								</Node>
							</Node>
							<Node score="208.26666666666674">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-19.9454927444458"/>
							</Node>
						</Node>
						<Node score="247.35999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="69.41304588317871"/>
							<Node score="217.05714285714288">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="49.21292495727539"/>
							</Node>
						</Node>
						<Node score="178.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.08773452043533325"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="44" weight="0.13638250297964236">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="242.5">
						<True/>
						<Node score="179.26153846153846">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="30.83324909210205"/>
							<Node score="152.48888888888888">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-31.423215866088867"/>
								<Node score="173.64999999999998">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.3899140954017639"/>
								</Node>
							</Node>
							<Node score="205.99999999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-20.565059661865234"/>
							</Node>
						</Node>
						<Node score="252.11249999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="53.53111267089844"/>
							<Node score="207.52500000000003">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="0.8197789043188095"/>
							</Node>
						</Node>
						<Node score="178.29999999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="1.6703734397888184"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="45" weight="0.0823861173504666">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="190.6">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="30.83324909210205"/>
							<Node score="211.14000000000001">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.17826862633228302"/>
								<Node score="185.2833333333333">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2671336680650711"/>
								</Node>
							</Node>
							<Node score="159.35000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="0.9821414053440094"/>
							</Node>
						</Node>
						<Node score="242.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.341332271695137"/>
							<Node score="253.5333333333333">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="1.5540617108345032"/>
							</Node>
						</Node>
						<Node score="189.10000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.3671205043792725"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="46" weight="0.1397275914551799">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="158.3">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="19.986762046813965"/>
							<Node score="210.39999999999995">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-4.642572402954102"/>
								<Node score="203.30000000000007">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.03973519802093506"/>
								</Node>
							</Node>
							<Node score="188.37499999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.9133471548557281"/>
							</Node>
						</Node>
						<Node score="224.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="254.9125">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.6917797476053238"/>
							</Node>
						</Node>
						<Node score="184.6916666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.439582347869873"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="47" weight="0.10861755737897659">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
					</MiningSchema>
					<Node score="234.6">
						<True/>
						<Node score="225.79999999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.41603802144527435"/>
							<Node score="203.18000000000004">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="35.340182304382324"/>
								<Node score="169.19999999999996">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-5.453102350234985"/>
								</Node>
							</Node>
							<Node score="254.8090909090909">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.9465623050928116"/>
							</Node>
						</Node>
						<Node score="179.37777777777777">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.29531337320804596"/>
							<Node score="154.42857142857147">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-26.737735748291016"/>
							</Node>
						</Node>
						<Node score="214.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-2.0551353096961975"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="48" weight="0.1223946404335131">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="170.0">
						<True/>
						<Node score="146.68">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="5.461360931396484"/>
							<Node score="182.06999999999996">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.17826862633228302"/>
								<Node score="205.625">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.2673027813434601"/>
								</Node>
							</Node>
							<Node score="159.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.5791839361190796"/>
							</Node>
						</Node>
						<Node score="246.18571428571428">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.12927873467560858"/>
							<Node score="196.42000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-0.8081285506486893"/>
							</Node>
						</Node>
						<Node score="205.26666666666668">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="1.2954396456480026"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="49" weight="0.12054785354764033">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
					</MiningSchema>
					<Node score="181.9238095238095">
						<True/>
						<Node score="225.85">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.3147905319929123"/>
							<Node score="197.4666666666667">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
								<Node score="166.87499999999997">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-39.820993423461914"/>
								</Node>
							</Node>
							<Node score="252.27999999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="0.2855113595724106"/>
							</Node>
						</Node>
						<Node score="209.30000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.5198203921318054"/>
							<Node score="210.39999999999995">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-5.48657500743866"/>
							</Node>
						</Node>
						<Node score="159.17499999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.16312620788812637"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="50" weight="0.059628358383175054">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="242.5">
						<True/>
						<Node score="147.55">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="23.31435489654541"/>
							<Node score="172.45000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.17826862633228302"/>
								<Node score="197.6928571428571">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="1.3516826629638672"/>
								</Node>
							</Node>
							<Node score="159.03333333333333">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.5791839361190796"/>
							</Node>
						</Node>
						<Node score="197.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="1.6703734397888184"/>
							<Node score="234.96666666666667">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2625250853598118"/>
							</Node>
						</Node>
						<Node score="247.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.16020362079143524"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="51" weight="0.1232474803555067">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="181.89999999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="168.11333333333332">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.1776864007115364"/>
								<Node score="210.39999999999995">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-5.217142581939697"/>
								</Node>
							</Node>
							<Node score="210.97500000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.10129085928201675"/>
							</Node>
						</Node>
						<Node score="243.86249999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.25758932530879974"/>
							<Node score="213.4">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.15020821243524551"/>
							</Node>
						</Node>
						<Node score="188.20714285714294">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.439582347869873"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="52" weight="0.10023011604099444">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="214.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="22.263103485107422"/>
							<Node score="178.17499999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.33044058084487915"/>
								<Node score="155.15714285714284">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-26.668391227722168"/>
								</Node>
							</Node>
							<Node score="234.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.7847360074520111"/>
							</Node>
						</Node>
						<Node score="200.71333333333342">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="1.742835283279419"/>
							<Node score="259.79999999999995">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.8970078229904175"/>
							</Node>
						</Node>
						<Node score="242.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-2.170840933918953"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="53" weight="0.11250229340400937">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="184.73333333333332">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="167.54999999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="0.03034532070159912"/>
								<Node score="147.475">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.358993113040924"/>
								</Node>
							</Node>
							<Node score="174.09999999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-37.24219608306885"/>
							</Node>
						</Node>
						<Node score="259.79999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.8970078229904175"/>
							<Node score="242.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-2.1205792278051376"/>
							</Node>
						</Node>
						<Node score="203.69583333333344">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.7264695167541504"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="54" weight="0.11958731563512029">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="170.67499999999995">
						<True/>
						<Node score="166.06666666666666">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="185.99999999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.027536720037460327"/>
								<Node score="167.625">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-11.835783958435059"/>
								</Node>
							</Node>
							<Node score="204.8888888888889">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.10129085928201675"/>
							</Node>
						</Node>
						<Node score="240.225">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.023926949477754533"/>
							<Node score="201.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-2.3463780879974365"/>
							</Node>
						</Node>
						<Node score="200.3666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="49.574541091918945"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="55" weight="0.14618028253874907">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="181.0">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="10.577757120132446"/>
							<Node score="166.29090909090908">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2077736258506775"/>
								<Node score="140.43333333333337">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.358993113040924"/>
								</Node>
							</Node>
							<Node score="206.63333333333335">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-20.565059661865234"/>
							</Node>
						</Node>
						<Node score="248.9285714285714">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="215.95000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="34.86359119415283"/>
							</Node>
						</Node>
						<Node score="182.30833333333337">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.7264695167541504"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="56" weight="0.11939229605624507">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="176.4333333333333">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="137.60000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.026844576001167297"/>
								<Node score="163.73571428571427">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="1.1674578189849854"/>
								</Node>
							</Node>
							<Node score="208.02500000000003">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="1.4536605477333069"/>
							</Node>
						</Node>
						<Node score="219.30000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="245.06">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="2.2995133101940155"/>
							</Node>
						</Node>
						<Node score="196.625">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="0.6603584885597229"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="57" weight="0.11656348854633479">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="248.69999999999996">
						<True/>
						<Node score="219.14285714285717">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="30.83324909210205"/>
							<Node score="137.60000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-39.820993423461914"/>
								<Node score="165.03999999999996">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.4945603162050247"/>
								</Node>
							</Node>
							<Node score="191.42499999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2671336680650711"/>
							</Node>
						</Node>
						<Node score="209.87500000000006">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.365970429033041"/>
							<Node score="225.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-2.279870629310608"/>
							</Node>
						</Node>
						<Node score="259.79999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.7411195933818817"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="58" weight="0.13486756292691365">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="183.70909090909092">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.9584604501724243"/>
							<Node score="188.12307692307692">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="12.603159189224243"/>
								<Node score="161.89999999999998">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="0.14657792448997498"/>
								</Node>
							</Node>
							<Node score="210.96923076923076">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="0.878044605255127"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="59" weight="0.11605041127403773">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="187.9">
						<True/>
						<Node score="182.37999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="22.263103485107422"/>
							<Node score="165.07083333333333">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.3912445902824402"/>
								<Node score="203.30000000000007">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-4.642572402954102"/>
								</Node>
							</Node>
							<Node score="212.29999999999995">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-22.504950523376465"/>
							</Node>
						</Node>
						<Node score="219.30000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.22856420651078224"/>
							<Node score="253.0333333333333">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.6917797476053238"/>
							</Node>
						</Node>
						<Node score="208.44">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="0.47954241931438446"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="60" weight="0.11980281906552306">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="158.3">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="175.35999999999999">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.026844576001167297"/>
								<Node score="153.33333333333331">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.5351663827896118"/>
								</Node>
							</Node>
							<Node score="206.67499999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="3.3236889839172363"/>
							</Node>
						</Node>
						<Node score="246.93999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="217.59999999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.10086103528738022"/>
							</Node>
						</Node>
						<Node score="195.14000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="6.378186941146851"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="61" weight="0.09522824572255949">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
					</MiningSchema>
					<Node score="149.0">
						<True/>
						<Node score="197.8263157894737">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.4152303785085678"/>
							<Node score="159.88">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-31.423215866088867"/>
								<Node score="186.5">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.3899140954017639"/>
								</Node>
							</Node>
							<Node score="225.75000000000003">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.26425763219594955"/>
							</Node>
						</Node>
						<Node score="159.73333333333332">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.5791839361190796"/>
							<Node score="165.0">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-2.9418524503707886"/>
							</Node>
						</Node>
						<Node score="146.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.15374705940485"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="62" weight="0.12066703642720265">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="183.82857142857145">
						<True/>
						<Node score="185.3714285714286">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="22.263103485107422"/>
							<Node score="213.43999999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.342489719390869"/>
								<Node score="203.30000000000007">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.03973519802093506"/>
								</Node>
							</Node>
							<Node score="165.60000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2077736258506775"/>
							</Node>
						</Node>
						<Node score="255.69999999999996">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.03242582734674215"/>
							<Node score="217.06000000000003">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="0.9766746461391449"/>
							</Node>
						</Node>
						<Node score="248.89999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-5.8377604484558105"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="63" weight="0.10666953637748514">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="168.39999999999995">
						<True/>
						<Node score="183.14999999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="12.603159189224243"/>
							<Node score="167.76666666666665">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.026844576001167297"/>
								<Node score="145.65">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="0.6992287039756775"/>
								</Node>
							</Node>
							<Node score="210.97500000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-20.565059661865234"/>
							</Node>
						</Node>
						<Node score="249.60909090909092">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.023926949477754533"/>
							<Node score="203.3166666666667">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.19150632247328758"/>
							</Node>
						</Node>
						<Node score="204.72222222222229">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.8489449620246887"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="64" weight="0.12468320605257065">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="197.68750000000003">
						<True/>
						<Node score="222.55">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.3638693541288376"/>
							<Node score="175.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="16.332464456558228"/>
								<Node score="203.6666666666667">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="0.07625877857208252"/>
								</Node>
							</Node>
							<Node score="256.03999999999996">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.6917797476053238"/>
							</Node>
						</Node>
						<Node score="137.60000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-27.52434253692627"/>
							<Node score="153.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-1.0057250559329987"/>
							</Node>
						</Node>
						<Node score="172.97142857142853">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.693112313747406"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="65" weight="0.11540993429294251">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="179.34000000000006">
						<True/>
						<Node score="181.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="164.91111111111113">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2738952785730362"/>
								<Node score="142.4">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-1.0893912315368652"/>
								</Node>
							</Node>
							<Node score="214.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-0.9946024417877197"/>
							</Node>
						</Node>
						<Node score="234.22500000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="4.264639139175415"/>
							<Node score="188.92000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-0.8081285506486893"/>
							</Node>
						</Node>
						<Node score="170.0">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.009924110025167465"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="66" weight="0.14317867726254405">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="169.2">
						<True/>
						<Node score="173.82">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="5.461360931396484"/>
							<Node score="181.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.365079641342163"/>
								<Node score="211.26666666666665">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.4454910308122635"/>
								</Node>
							</Node>
							<Node score="152.26666666666668">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-0.7993307709693909"/>
							</Node>
						</Node>
						<Node score="187.3">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-0.8081285506486893"/>
							<Node score="205.45000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.46932923793792725"/>
							</Node>
						</Node>
						<Node score="245.25555555555553">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.12927873467560858"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="67" weight="0.1384204956999556">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="255.69999999999996">
						<True/>
						<Node score="170.47999999999996">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.026844576001167297"/>
							<Node score="174.61666666666665">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-10.335904121398926"/>
								<Node score="149.70000000000002">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.1174670457839966"/>
								</Node>
							</Node>
							<Node score="202.64999999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="76.08330154418945"/>
							</Node>
						</Node>
						<Node score="181.65000000000006">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="30.83324909210205"/>
							<Node score="208.85000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.3788912296295166"/>
							</Node>
						</Node>
						<Node score="201.20000000000005">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="0.8615453839302063"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="68" weight="0.10927710479749789">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="178.02499999999998">
						<True/>
						<Node score="173.7625">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="10.577757120132446"/>
							<Node score="137.60000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-39.820993423461914"/>
								<Node score="165.5">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.4455605149269104"/>
								</Node>
							</Node>
							<Node score="202.56">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-2.94092333316803"/>
							</Node>
						</Node>
						<Node score="190.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.08040002023335546"/>
							<Node score="241.07142857142858">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.41044633090496063"/>
							</Node>
						</Node>
						<Node score="211.60000000000008">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-1.0790465474128723"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="69" weight="0.09360908343876323">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="191.2">
						<True/>
						<Node score="179.72727272727278">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="147.8625">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.4383075386285782"/>
								<Node score="166.45">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-2.260566830635071"/>
								</Node>
							</Node>
							<Node score="210.20000000000005">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.342489719390869"/>
							</Node>
						</Node>
						<Node score="219.30000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-3.6136081218719482"/>
							<Node score="255.43999999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="0.041776733472943306"/>
							</Node>
						</Node>
						<Node score="215.22500000000005">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.14585312455892563"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="70" weight="0.11744964104169026">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="184.7">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="181.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.365079641342163"/>
								<Node score="212.29999999999995">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="0.2536030560731888"/>
								</Node>
							</Node>
							<Node score="154.89999999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-2.145524263381958"/>
							</Node>
						</Node>
						<Node score="245.42">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="201.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-2.3463780879974365"/>
							</Node>
						</Node>
						<Node score="189.58823529411765">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.7264695167541504"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="71" weight="0.10842368143234093">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="206.94999999999996">
						<True/>
						<Node score="248.89999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-8.482513666152954"/>
						</Node>
						<Node score="150.825">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.44499659538269043"/>
							<Node score="177.20000000000005">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.0358600914478302"/>
							</Node>
						</Node>
						<Node score="161.44">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-31.423215866088867"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="72" weight="0.09314285908775922">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="187.97058823529414">
						<True/>
						<Node score="233.74285714285716">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.14585312455892563"/>
							<Node score="204.4">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-1.212845802307129"/>
								<Node score="177.6">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.5881988033652306"/>
								</Node>
							</Node>
							<Node score="199.26666666666665">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-0.8081285506486893"/>
							</Node>
						</Node>
						<Node score="248.89999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-8.62869930267334"/>
						</Node>
						<Node score="169.60588235294117">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-10.335904121398926"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="73" weight="0.12475326257215341">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="172.04">
						<True/>
						<Node score="174.42000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="5.461360931396484"/>
							<Node score="181.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-2.94092333316803"/>
								<Node score="211.15999999999994">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.4454910308122635"/>
								</Node>
							</Node>
							<Node score="147.25">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.1174670457839966"/>
							</Node>
						</Node>
						<Node score="249.58888888888885">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.08040002023335546"/>
							<Node score="206.77499999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.19150632247328758"/>
							</Node>
						</Node>
						<Node score="207.8666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="49.574541091918945"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="74" weight="0.10003815800715093">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="172.95">
						<True/>
						<Node score="182.78333333333333">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="30.83324909210205"/>
							<Node score="234.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.4381078779697418"/>
								<Node score="208.03333333333333">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.24933132156729698"/>
								</Node>
							</Node>
							<Node score="160.32142857142858">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="0.7121746242046356"/>
							</Node>
						</Node>
						<Node score="251.11249999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.08040002023335546"/>
							<Node score="217.05">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.19150632247328758"/>
							</Node>
						</Node>
						<Node score="208.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="49.574541091918945"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="75" weight="0.15436541964881212">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="173.3833333333333">
						<True/>
						<Node score="172.7888888888889">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="212.82">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.365079641342163"/>
								<Node score="203.30000000000007">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-32.2948522567749"/>
								</Node>
							</Node>
							<Node score="151.32">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-0.9941762685775757"/>
							</Node>
						</Node>
						<Node score="253.64999999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="53.53111267089844"/>
							<Node score="215.5909090909091">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="1.19436115026474"/>
							</Node>
						</Node>
						<Node score="225.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.27739280462265015"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="76" weight="0.12477831395689842">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="148.4888888888889">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-2.145524263381958"/>
							<Node score="181.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.6849108934402466"/>
								<Node score="211.10000000000005">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-20.565059661865234"/>
								</Node>
							</Node>
							<Node score="172.73999999999995">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-3.6599432229995728"/>
							</Node>
						</Node>
						<Node score="242.44999999999996">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="184.7">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							</Node>
						</Node>
						<Node score="189.2681818181818">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.7264695167541504"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="77" weight="0.12123972502198815">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="250.28571428571425">
						<True/>
						<Node score="205.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="30.83324909210205"/>
							<Node score="192.71428571428572">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2077736258506775"/>
								<Node score="163.74285714285713">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="5.766912937164307"/>
								</Node>
							</Node>
							<Node score="234.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-1.2323747277259827"/>
							</Node>
						</Node>
						<Node score="189.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.3530623465776443"/>
							<Node score="209.30000000000004">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.86628520488739"/>
							</Node>
						</Node>
						<Node score="218.70000000000005">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.644744273275137"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="78" weight="0.10347618734251073">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="189.025">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="8.840358138084412"/>
							<Node score="210.75">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-4.344542622566223"/>
								<Node score="203.30000000000007">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-0.8501182049512863"/>
								</Node>
							</Node>
							<Node score="156.21">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2077736258506775"/>
							</Node>
						</Node>
						<Node score="226.37500000000003">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.25758932530879974"/>
							<Node score="252.46666666666667">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="0.2855113595724106"/>
							</Node>
						</Node>
						<Node score="196.82307692307694">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.439582347869873"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="79" weight="0.135350554123494">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="242.5">
						<True/>
						<Node score="199.02499999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="12.603159189224243"/>
							<Node score="150.8416666666666">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.38636285066604614"/>
								<Node score="179.8333333333333">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="-2.7715498208999634"/>
								</Node>
							</Node>
							<Node score="163.0">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-38.615445137023926"/>
							</Node>
						</Node>
						<Node score="191.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="1.742835283279419"/>
							<Node score="219.03750000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.27739280462265015"/>
							</Node>
						</Node>
						<Node score="247.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="68.87227439880371"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="80" weight="0.10640598748425488">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="203.325">
						<True/>
						<Node score="161.3">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-31.423215866088867"/>
							<Node score="137.60000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.20785675570368767"/>
								<Node score="154.39999999999998">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.4455605149269104"/>
								</Node>
							</Node>
							<Node score="169.64999999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.03869161009788513"/>
							</Node>
						</Node>
						<Node score="235.11999999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.17680197954177856"/>
							<Node score="207.6285714285714">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="1.19436115026474"/>
							</Node>
						</Node>
						<Node score="172.10833333333335">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="0.35875409841537476"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="81" weight="0.10387984007963993">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="181.48888888888894">
						<True/>
						<Node score="252.21666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.41603802144527435"/>
							<Node score="207.75000000000003">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="29.81125569343567"/>
								<Node score="172.21999999999997">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.2077736258506775"/>
								</Node>
							</Node>
							<Node score="225.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.7659166660159826"/>
							</Node>
						</Node>
						<Node score="234.6">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.6249050796031952"/>
							<Node score="162.58888888888885">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.4778709262609482"/>
							</Node>
						</Node>
						<Node score="202.97142857142856">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="0.5932660698890686"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="82" weight="0.08975162081809733">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
					</MiningSchema>
					<Node score="210.33000000000007">
						<True/>
						<Node score="149.0">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-31.423215866088867"/>
							<Node score="160.025">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.005444427952170372"/>
								<Node score="174.09999999999997">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.04192206636071205"/>
								</Node>
							</Node>
							<Node score="137.60000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-44.60603713989258"/>
							</Node>
						</Node>
						<Node score="166.83749999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.10138031095266342"/>
							<Node score="196.05555555555554">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.013158474583178759"/>
							</Node>
						</Node>
						<Node score="245.0">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.16316862404346466"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="83" weight="0.13059765354612715">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="256.91666666666663">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.3440658748149872"/>
							<Node score="174.59999999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
								<Node score="206.26666666666668">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="0.4731547608971596"/>
								</Node>
							</Node>
							<Node score="227.33333333333334">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="1.19436115026474"/>
							</Node>
						</Node>
						<Node score="174.6333333333333">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="8.492023944854736"/>
							<Node score="143.25">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.1174670457839966"/>
							</Node>
						</Node>
						<Node score="187.48666666666665">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.439582347869873"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="84" weight="0.10692289813110896">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="137.60000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="23.31435489654541"/>
							<Node score="154.23333333333332">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="1.3516826629638672"/>
								<Node score="203.13333333333333">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.14015642553567886"/>
								</Node>
							</Node>
							<Node score="168.54166666666666">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.004105944186449051"/>
							</Node>
						</Node>
						<Node score="219.30000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.22856420651078224"/>
							<Node score="246.94">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.6790485233068466"/>
							</Node>
						</Node>
						<Node score="197.53000000000003">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.439582347869873"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="85" weight="0.10951791356840601">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="183.16363636363633">
						<True/>
						<Node score="137.60000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-37.733436584472656"/>
							<Node score="169.64999999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.31684403121471405"/>
								<Node score="162.45">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-0.9941762685775757"/>
								</Node>
							</Node>
							<Node score="149.0">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-2.0966773629188538"/>
							</Node>
						</Node>
						<Node score="230.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.08040002023335546"/>
							<Node score="195.7857142857143">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.3190808743238449"/>
							</Node>
						</Node>
						<Node score="212.90000000000003">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-1.0465753674507141"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="86" weight="0.10546788903949444">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="137.60000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-31.423215866088867"/>
							<Node score="178.09999999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.19960608333349228"/>
							</Node>
							<Node score="154.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="4.1334227323532104"/>
							</Node>
						</Node>
						<Node score="203.08750000000003">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.29820526391267776"/>
							<Node score="242.24999999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.5570188164710999"/>
							</Node>
						</Node>
						<Node score="186.0538461538461">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="3.1144492626190186"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="87" weight="0.11792052355060821">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="205.02222222222224">
						<True/>
						<Node score="241.8833333333333">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.32990847527980804"/>
							<Node score="161.25">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="1.1654400825500488"/>
								<Node score="198.48000000000002">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="1.9652124047279358"/>
								</Node>
							</Node>
							<Node score="201.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-0.7948873788118362"/>
							</Node>
						</Node>
						<Node score="177.04615384615389">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.7068707942962646"/>
							<Node score="153.0">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.15645790100097656"/>
							</Node>
						</Node>
						<Node score="163.9333333333333">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-1.1751306653022766"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="88" weight="0.11307062132872532">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="183.26000000000002">
						<True/>
						<Node score="178.49999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="170.75">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="0.2638433426618576"/>
								<Node score="151.33750000000003">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.1174670457839966"/>
								</Node>
							</Node>
							<Node score="207.39999999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="0.8282223492860794"/>
							</Node>
						</Node>
						<Node score="242.42307692307693">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.023926949477754533"/>
							<Node score="210.45000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.15020821243524551"/>
							</Node>
						</Node>
						<Node score="211.60000000000008">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-1.0790465474128723"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="89" weight="0.15103419388344722">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="161.425">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-31.423215866088867"/>
							<Node score="203.30000000000007">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-4.212661504745483"/>
							</Node>
							<Node score="141.4">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.358993113040924"/>
							</Node>
						</Node>
						<Node score="187.67499999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="242.18750000000003">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="0.30348874151241034"/>
							</Node>
						</Node>
						<Node score="193.56296296296293">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="3.1144492626190186"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="90" weight="0.1311829340149933">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="172.56666666666663">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="22.263103485107422"/>
							<Node score="137.60000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-40.37300109863281"/>
								<Node score="159.7">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-50.68462371826172"/>
								</Node>
							</Node>
							<Node score="207.1875">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.119925171136856"/>
							</Node>
						</Node>
						<Node score="221.4666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.2434319257736206"/>
							<Node score="254.79999999999995">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.6917797476053238"/>
							</Node>
						</Node>
						<Node score="191.15">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="1.9105722904205322"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="91" weight="0.10606480361941927">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="207.4">
						<True/>
						<Node score="205.74285714285716">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="5.461360931396484"/>
							<Node score="145.33333333333334">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.9567724764347076"/>
								<Node score="166.45">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-1.8777431547641754"/>
								</Node>
							</Node>
							<Node score="172.42499999999995">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.11507263407111168"/>
							</Node>
						</Node>
						<Node score="249.9333333333333">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.023926949477754533"/>
							<Node score="213.31">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="0.9766746461391449"/>
							</Node>
						</Node>
						<Node score="178.41250000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.29997432231903076"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="92" weight="0.1464274662985771">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="191.05">
						<True/>
						<Node score="152.75">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="30.83324909210205"/>
							<Node score="137.60000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-31.423215866088867"/>
								<Node score="163.0">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="4.1334227323532104"/>
								</Node>
							</Node>
							<Node score="204.07142857142853">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.484703466296196"/>
							</Node>
						</Node>
						<Node score="184.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.19150632247328758"/>
							<Node score="212.60000000000005">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.11318366974592209"/>
							</Node>
						</Node>
						<Node score="250.09166666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.2516921907663345"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="93" weight="0.15534373985563027">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="175.9111111111111">
						<True/>
						<Node score="170.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="19.986762046813965"/>
							<Node score="172.4">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="0.2638433426618576"/>
								<Node score="143.86">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.3123125433921814"/>
								</Node>
							</Node>
							<Node score="206.02000000000004">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.23319211602210999"/>
							</Node>
						</Node>
						<Node score="219.30000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.341332271695137"/>
							<Node score="252.74999999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="1.6917797476053238"/>
							</Node>
						</Node>
						<Node score="204.90833333333342">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="50.19575881958008"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="94" weight="0.10766692926763158">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="176.7571428571429">
						<True/>
						<Node score="259.79999999999995">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.32990847527980804"/>
							<Node score="216.82857142857145">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="34.86359119415283"/>
								<Node score="169.0">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-43.734392166137695"/>
								</Node>
							</Node>
							<Node score="250.02499999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="0.2953401803970337"/>
							</Node>
						</Node>
						<Node score="159.89999999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-1.2076018452644348"/>
							<Node score="178.45">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="-0.20766598731279373"/>
							</Node>
						</Node>
						<Node score="204.21578947368417">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="50.19575881958008"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="95" weight="0.13622014124160484">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="208.54285714285717">
						<True/>
						<Node score="245.2166666666666">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.3147905319929123"/>
							<Node score="180.26">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
								<Node score="203.96">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="-0.24311918020248413"/>
								</Node>
							</Node>
							<Node score="224.69999999999996">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.7936227284371853"/>
							</Node>
						</Node>
						<Node score="176.03000000000003">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.4841848909854889"/>
							<Node score="158.52499999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.16312620788812637"/>
							</Node>
						</Node>
						<Node score="183.76666666666665">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-0.44570812582969666"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="96" weight="0.09805903742323979">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="158.3">
						<True/>
						<Node score="178.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.08040002023335546"/>
							<Node score="204.4">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
								<Node score="178.02499999999998">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="5.2906858921051025"/>
								</Node>
							</Node>
							<Node score="238.57727272727277">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.362924188375473"/>
							</Node>
						</Node>
						<Node score="169.91666666666666">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="1.1674578189849854"/>
							<Node score="199.15">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="49.574541091918945"/>
							</Node>
						</Node>
						<Node score="137.60000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="1.2949885725975037"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="97" weight="0.13955307495342123">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="187.07500000000002">
						<True/>
						<Node score="242.93333333333337">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.023926949477754533"/>
							<Node score="163.02">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="1.1654400825500488"/>
								<Node score="204.4">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-1.0521925687789917"/>
								</Node>
							</Node>
							<Node score="202.74285714285716">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-0.8081285506486893"/>
							</Node>
						</Node>
						<Node score="186.25000000000003">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.14724021404981613"/>
							<Node score="165.07999999999996">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="2.169813573360443"/>
							</Node>
						</Node>
						<Node score="213.55">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-0.2643059492111206"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="98" weight="0.10953894132235498">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))"/>
					</MiningSchema>
					<Node score="183.7166666666667">
						<True/>
						<Node score="174.9666666666666">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="11.885076761245728"/>
							<Node score="181.6">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.365079641342163"/>
								<Node score="211.47500000000002">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.4454910308122635"/>
								</Node>
							</Node>
							<Node score="156.25">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-0.6568028926849365"/>
							</Node>
						</Node>
						<Node score="242.15833333333333">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="0.023926949477754533"/>
							<Node score="195.28333333333333">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-0.8081285506486893"/>
							</Node>
						</Node>
						<Node score="211.60000000000008">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[3]))" operator="lessOrEqual" value="-1.0790465474128723"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="99" weight="0.14514591095070725">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="176.97272727272727">
						<True/>
						<Node score="255.09999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.3440658748149872"/>
							<Node score="174.79999999999998">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="35.340182304382324"/>
								<Node score="209.28181818181818">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[1]))" operator="lessOrEqual" value="2.180384337902069"/>
								</Node>
							</Node>
							<Node score="225.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="-1.8304875493049622"/>
							</Node>
						</Node>
						<Node score="192.0666666666667">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-3.365079641342163"/>
							<Node score="212.9333333333333">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="-1.1267719268798828"/>
							</Node>
						</Node>
						<Node score="144.5111111111111">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[2]))" operator="lessOrEqual" value="-1.3123125433921814"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="100" weight="0.10941507272977442">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))"/>
					</MiningSchema>
					<Node score="247.5">
						<True/>
						<Node score="159.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="-0.3147905319929123"/>
							<Node score="247.66666666666666">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[6]))" operator="lessOrEqual" value="0.3810829222202301"/>
								<Node score="223.76250000000002">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[0]))" operator="lessOrEqual" value="31.134285926818848"/>
								</Node>
							</Node>
						</Node>
						<Node score="137.60000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[7]))" operator="lessOrEqual" value="0.10719847679138184"/>
							<Node score="171.47499999999997">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[5]))" operator="lessOrEqual" value="1.0973542928695679"/>
							</Node>
						</Node>
						<Node score="194.30999999999997">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'G'), ('70.0th-pctl-dfs', 'W'))[4]))" operator="lessOrEqual" value="2.526164472103119"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
		</Segmentation>
	</MiningModel>
</PMML>
