<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<PMML xmlns="http://www.dmg.org/PMML-4_4" xmlns:data="http://jpmml.org/jpmml-model/InlineTable" version="4.4">
	<Header>
		<Application name="JPMML-SkLearn library" version="1.7.10"/>
		<Timestamp>2022-09-04T02:27:53Z</Timestamp>
	</Header>
	<MiningBuildTask>
		<Extension name="repr">PMMLPipeline(steps=[('mapper', DataFrameMapper(drop_cols=[],
                features=[(['best-possible-score'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team_count'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team-med'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team-70.0th_pctl'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('med-dfs', 'C')"],
                           Continuou...
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'C')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'D')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'G')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'W')"],
                           ContinuousDomain(invalid_value_treatment='as_is'))])),
       ('selectfwe', SelectorProxy(selector=SelectFwe(alpha=0.028,
                                 score_func=&lt;function f_regression at 0x7f4a5f835d80&gt;))),
       ('standardscaler', StandardScaler()),
       ('sgdregressor', SGDRegressor(alpha=0.01, eta0=1.0, l1_ratio=0.75, learning_rate='constant',
             loss='epsilon_insensitive', penalty='elasticnet', power_t=0.0))])</Extension>
	</MiningBuildTask>
	<DataDictionary>
		<DataField name="top_score" optype="continuous" dataType="double"/>
		<DataField name="best-possible-score" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="88.39999999999999" rightMargin="168.6"/>
		</DataField>
	</DataDictionary>
	<RegressionModel functionName="regression" algorithmName="sklearn.linear_model._stochastic_gradient.SGDRegressor">
		<MiningSchema>
			<MiningField name="top_score" usageType="target"/>
			<MiningField name="best-possible-score" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
		</MiningSchema>
		<ModelStats>
			<UnivariateStats field="best-possible-score">
				<Counts totalFreq="14" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="88.39999999999999" maximum="168.6" mean="127.21071428571427" standardDeviation="17.7460375715199" median="131.0" interQuartileRange="15.737499999999983"/>
			</UnivariateStats>
		</ModelStats>
		<LocalTransformations>
			<DerivedField name="standardScaler(best-possible-score)" optype="continuous" dataType="double">
				<Apply function="/">
					<Apply function="-">
						<FieldRef field="best-possible-score"/>
						<Constant dataType="double">127.21071428571427</Constant>
					</Apply>
					<Constant dataType="double">17.7460375715199</Constant>
				</Apply>
			</DerivedField>
		</LocalTransformations>
		<RegressionTable intercept="113.0">
			<NumericPredictor name="standardScaler(best-possible-score)" coefficient="16.856018115465847"/>
		</RegressionTable>
	</RegressionModel>
</PMML>
