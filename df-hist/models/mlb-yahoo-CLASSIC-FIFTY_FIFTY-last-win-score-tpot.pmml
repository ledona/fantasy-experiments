<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<PMML xmlns="http://www.dmg.org/PMML-4_4" xmlns:data="http://jpmml.org/jpmml-model/InlineTable" version="4.4">
	<Header>
		<Application name="JPMML-SkLearn library" version="1.7.10"/>
		<Timestamp>2022-09-04T05:32:04Z</Timestamp>
	</Header>
	<MiningBuildTask>
		<Extension name="repr">PMMLPipeline(steps=[('mapper', DataFrameMapper(drop_cols=[],
                features=[(['best-possible-score'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team_count'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team-med'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (['team-70.0th_pctl'],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('med-dfs', '1B')"],
                           Continuo...
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'C')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'OF')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'P')"],
                           ContinuousDomain(invalid_value_treatment='as_is')),
                          (["('70.0th-pctl-dfs', 'SS')"],
                           ContinuousDomain(invalid_value_treatment='as_is'))])),
       ('variancethreshold', SelectorProxy(selector=VarianceThreshold(threshold=0.1))),
       ('pca', PCA(iterated_power=8, svd_solver='randomized')),
       ('adaboostregressor', AdaBoostRegressor(learning_rate=0.001, loss='exponential', n_estimators=100))])</Extension>
	</MiningBuildTask>
	<DataDictionary>
		<DataField name="last_winning_score" optype="continuous" dataType="double"/>
		<DataField name="best-possible-score" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="236.99000000000004" rightMargin="313.9"/>
		</DataField>
		<DataField name="team_count" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="12.0" rightMargin="28.0"/>
		</DataField>
		<DataField name="team-med" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="3.5" rightMargin="5.5"/>
		</DataField>
		<DataField name="team-70.0th_pctl" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="5.0" rightMargin="8.0"/>
		</DataField>
		<DataField name="('med-dfs', '1B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="2.6" rightMargin="7.449999999999999"/>
		</DataField>
		<DataField name="('med-dfs', '2B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="2.6" rightMargin="6.15"/>
		</DataField>
		<DataField name="('med-dfs', '3B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="2.6" rightMargin="6.15"/>
		</DataField>
		<DataField name="('med-dfs', 'C')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="2.6" rightMargin="4.85"/>
		</DataField>
		<DataField name="('med-dfs', 'OF')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="4.5" rightMargin="7.1"/>
		</DataField>
		<DataField name="('med-dfs', 'P')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="5.345000000000001" rightMargin="18.46"/>
		</DataField>
		<DataField name="('med-dfs', 'SS')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="3.8" rightMargin="8.85"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', '1B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="5.389999999999996" rightMargin="10.65"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', '2B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="4.5" rightMargin="9.7"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', '3B')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="7.1" rightMargin="14.9"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'C')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="2.6" rightMargin="8.639999999999999"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'OF')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="7.1" rightMargin="9.939999999999994"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'P')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="11.469999999999995" rightMargin="24.322"/>
		</DataField>
		<DataField name="('70.0th-pctl-dfs', 'SS')" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="5.579999999999998" rightMargin="11.95"/>
		</DataField>
	</DataDictionary>
	<MiningModel functionName="regression" algorithmName="sklearn.ensemble._weight_boosting.AdaBoostRegressor">
		<MiningSchema>
			<MiningField name="last_winning_score" usageType="target"/>
			<MiningField name="best-possible-score" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="team_count" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="team-med" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="team-70.0th_pctl" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', '1B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', '2B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', '3B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', 'C')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', 'OF')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', 'P')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('med-dfs', 'SS')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', '1B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', '2B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', '3B')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'C')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'OF')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'P')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
			<MiningField name="('70.0th-pctl-dfs', 'SS')" missingValueTreatment="asIs" invalidValueTreatment="asIs"/>
		</MiningSchema>
		<ModelStats>
			<UnivariateStats field="best-possible-score">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="236.99000000000004" maximum="313.9" mean="273.309" standardDeviation="22.053452088051877" median="273.45500000000004" interQuartileRange="26.850000000000023"/>
			</UnivariateStats>
			<UnivariateStats field="team_count">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="12.0" maximum="28.0" mean="22.0" standardDeviation="4.560701700396552" median="23.0" interQuartileRange="4.0"/>
			</UnivariateStats>
			<UnivariateStats field="team-med">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="3.5" maximum="5.5" mean="4.55" standardDeviation="0.5678908345800273" median="4.5" interQuartileRange="0.875"/>
			</UnivariateStats>
			<UnivariateStats field="team-70.0th_pctl">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="5.0" maximum="8.0" mean="6.31" standardDeviation="0.9082400563727631" median="6.0" interQuartileRange="1.0"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', '1B')">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="2.6" maximum="7.449999999999999" mean="5.17" standardDeviation="1.5970597985047397" median="5.2" interQuartileRange="1.8375000000000004"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', '2B')">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="2.6" maximum="6.15" mean="3.775000000000001" standardDeviation="1.1660295879607858" median="3.85" interQuartileRange="1.9"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', '3B')">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="2.6" maximum="6.15" mean="4.58" standardDeviation="0.8295179322956197" median="4.5" interQuartileRange="0.2624999999999993"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', 'C')">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="2.6" maximum="4.85" mean="3.0150000000000006" standardDeviation="0.8336815938954152" median="2.6" interQuartileRange="0.0"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', 'OF')">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="4.5" maximum="7.1" mean="5.0200000000000005" standardDeviation="0.903105752390051" median="4.5" interQuartileRange="0.5250000000000004"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', 'P')">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="5.345000000000001" maximum="18.46" mean="12.893" standardDeviation="3.6845740595081007" median="12.55" interQuartileRange="4.63125"/>
			</UnivariateStats>
			<UnivariateStats field="('med-dfs', 'SS')">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="3.8" maximum="8.85" mean="5.075000000000001" standardDeviation="1.3257545021609392" median="4.5" interQuartileRange="0.7000000000000002"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', '1B')">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="5.389999999999996" maximum="10.65" mean="8.437999999999999" standardDeviation="1.631317259149795" median="8.65" interQuartileRange="2.652499999999998"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', '2B')">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="4.5" maximum="9.7" mean="6.8519999999999985" standardDeviation="1.4876679737091871" median="6.734999999999998" interQuartileRange="0.7675000000000001"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', '3B')">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="7.1" maximum="14.9" mean="9.142" standardDeviation="2.358324829195504" median="8.259999999999994" interQuartileRange="1.7324999999999982"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'C')">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="2.6" maximum="8.639999999999999" mean="5.866999999999999" standardDeviation="1.6394880298434615" median="5.719999999999999" interQuartileRange="1.9624999999999986"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'OF')">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="7.1" maximum="9.939999999999994" mean="8.871999999999996" standardDeviation="0.9318991361730076" median="9.139999999999997" interQuartileRange="1.629999999999999"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'P')">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="11.469999999999995" maximum="24.322" mean="19.0209" standardDeviation="3.919761764444364" median="19.031000000000002" interQuartileRange="5.525250000000003"/>
			</UnivariateStats>
			<UnivariateStats field="('70.0th-pctl-dfs', 'SS')">
				<Counts totalFreq="10" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="5.579999999999998" maximum="11.95" mean="8.375999999999996" standardDeviation="1.9550560094278624" median="7.379999999999998" interQuartileRange="2.8149999999999924"/>
			</UnivariateStats>
		</ModelStats>
		<LocalTransformations>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">273.309</Constant>
						</Apply>
						<Constant dataType="double">0.9864734405495506</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">22.0</Constant>
						</Apply>
						<Constant dataType="double">0.12788089130279387</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">4.55</Constant>
						</Apply>
						<Constant dataType="double">0.010954748391133537</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">6.31</Constant>
						</Apply>
						<Constant dataType="double">0.014705110528548063</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '1B')"/>
							<Constant dataType="double">5.17</Constant>
						</Apply>
						<Constant dataType="double">0.01204966390838868</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '2B')"/>
							<Constant dataType="double">3.775000000000001</Constant>
						</Apply>
						<Constant dataType="double">0.010830945623914907</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '3B')"/>
							<Constant dataType="double">4.58</Constant>
						</Apply>
						<Constant dataType="double">-0.009384651920721444</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'C')"/>
							<Constant dataType="double">3.0150000000000006</Constant>
						</Apply>
						<Constant dataType="double">0.006857748226243436</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'OF')"/>
							<Constant dataType="double">5.0200000000000005</Constant>
						</Apply>
						<Constant dataType="double">0.0035688784195882554</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'P')"/>
							<Constant dataType="double">12.893</Constant>
						</Apply>
						<Constant dataType="double">-0.06914849556812948</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'SS')"/>
							<Constant dataType="double">5.075000000000001</Constant>
						</Apply>
						<Constant dataType="double">-0.029184041009782877</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							<Constant dataType="double">8.437999999999999</Constant>
						</Apply>
						<Constant dataType="double">0.0028002345527669593</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							<Constant dataType="double">6.8519999999999985</Constant>
						</Apply>
						<Constant dataType="double">0.02751681606549911</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							<Constant dataType="double">9.142</Constant>
						</Apply>
						<Constant dataType="double">-0.026827493193710566</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">5.866999999999999</Constant>
						</Apply>
						<Constant dataType="double">0.02581457273626859</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							<Constant dataType="double">8.871999999999996</Constant>
						</Apply>
						<Constant dataType="double">0.007493247292184879</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							<Constant dataType="double">19.0209</Constant>
						</Apply>
						<Constant dataType="double">-0.04349836072113137</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							<Constant dataType="double">8.375999999999996</Constant>
						</Apply>
						<Constant dataType="double">0.006118741457171285</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">273.309</Constant>
						</Apply>
						<Constant dataType="double">-0.004550198632571087</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">22.0</Constant>
						</Apply>
						<Constant dataType="double">-0.4331927597405372</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">4.55</Constant>
						</Apply>
						<Constant dataType="double">0.04101185601472552</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">6.31</Constant>
						</Apply>
						<Constant dataType="double">0.08852663418182755</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '1B')"/>
							<Constant dataType="double">5.17</Constant>
						</Apply>
						<Constant dataType="double">0.08660393380318873</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '2B')"/>
							<Constant dataType="double">3.775000000000001</Constant>
						</Apply>
						<Constant dataType="double">0.06335043954559703</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '3B')"/>
							<Constant dataType="double">4.58</Constant>
						</Apply>
						<Constant dataType="double">0.08328736525162224</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'C')"/>
							<Constant dataType="double">3.0150000000000006</Constant>
						</Apply>
						<Constant dataType="double">-0.009500469315191717</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'OF')"/>
							<Constant dataType="double">5.0200000000000005</Constant>
						</Apply>
						<Constant dataType="double">0.026766558618887135</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'P')"/>
							<Constant dataType="double">12.893</Constant>
						</Apply>
						<Constant dataType="double">-0.5384789861271171</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'SS')"/>
							<Constant dataType="double">5.075000000000001</Constant>
						</Apply>
						<Constant dataType="double">0.10424342316046385</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							<Constant dataType="double">8.437999999999999</Constant>
						</Apply>
						<Constant dataType="double">0.04767807771797849</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							<Constant dataType="double">6.8519999999999985</Constant>
						</Apply>
						<Constant dataType="double">0.18802684467697178</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							<Constant dataType="double">9.142</Constant>
						</Apply>
						<Constant dataType="double">0.32700907794928724</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">5.866999999999999</Constant>
						</Apply>
						<Constant dataType="double">0.036923043731078596</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							<Constant dataType="double">8.871999999999996</Constant>
						</Apply>
						<Constant dataType="double">0.0065593982797563875</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							<Constant dataType="double">19.0209</Constant>
						</Apply>
						<Constant dataType="double">-0.5674651827794278</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							<Constant dataType="double">8.375999999999996</Constant>
						</Apply>
						<Constant dataType="double">0.12139097247951358</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">273.309</Constant>
						</Apply>
						<Constant dataType="double">-0.13561894766820165</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">22.0</Constant>
						</Apply>
						<Constant dataType="double">0.7489239021596352</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">4.55</Constant>
						</Apply>
						<Constant dataType="double">0.0794145770598239</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">6.31</Constant>
						</Apply>
						<Constant dataType="double">0.07008450635339904</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '1B')"/>
							<Constant dataType="double">5.17</Constant>
						</Apply>
						<Constant dataType="double">-0.2045912477060358</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '2B')"/>
							<Constant dataType="double">3.775000000000001</Constant>
						</Apply>
						<Constant dataType="double">0.05612181115758451</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '3B')"/>
							<Constant dataType="double">4.58</Constant>
						</Apply>
						<Constant dataType="double">0.045032209783863485</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'C')"/>
							<Constant dataType="double">3.0150000000000006</Constant>
						</Apply>
						<Constant dataType="double">0.13417526267201907</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'OF')"/>
							<Constant dataType="double">5.0200000000000005</Constant>
						</Apply>
						<Constant dataType="double">0.023867251819677932</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'P')"/>
							<Constant dataType="double">12.893</Constant>
						</Apply>
						<Constant dataType="double">-0.09174819686905158</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'SS')"/>
							<Constant dataType="double">5.075000000000001</Constant>
						</Apply>
						<Constant dataType="double">-0.1480210856542029</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							<Constant dataType="double">8.437999999999999</Constant>
						</Apply>
						<Constant dataType="double">-0.07440155178917635</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							<Constant dataType="double">6.8519999999999985</Constant>
						</Apply>
						<Constant dataType="double">0.08824396317567303</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							<Constant dataType="double">9.142</Constant>
						</Apply>
						<Constant dataType="double">0.03684864795310017</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">5.866999999999999</Constant>
						</Apply>
						<Constant dataType="double">0.1455473544253706</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							<Constant dataType="double">8.871999999999996</Constant>
						</Apply>
						<Constant dataType="double">0.2070455423326077</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							<Constant dataType="double">19.0209</Constant>
						</Apply>
						<Constant dataType="double">-0.4764250308766826</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							<Constant dataType="double">8.375999999999996</Constant>
						</Apply>
						<Constant dataType="double">-0.08861777703425362</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">273.309</Constant>
						</Apply>
						<Constant dataType="double">0.030518454074807366</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">22.0</Constant>
						</Apply>
						<Constant dataType="double">-0.17114987140262</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">4.55</Constant>
						</Apply>
						<Constant dataType="double">0.043943581595576264</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">6.31</Constant>
						</Apply>
						<Constant dataType="double">0.06607823843092663</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '1B')"/>
							<Constant dataType="double">5.17</Constant>
						</Apply>
						<Constant dataType="double">-0.18830492680406688</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '2B')"/>
							<Constant dataType="double">3.775000000000001</Constant>
						</Apply>
						<Constant dataType="double">-0.3968374684492848</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '3B')"/>
							<Constant dataType="double">4.58</Constant>
						</Apply>
						<Constant dataType="double">-0.07051308836617362</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'C')"/>
							<Constant dataType="double">3.0150000000000006</Constant>
						</Apply>
						<Constant dataType="double">-0.0011419988995618397</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'OF')"/>
							<Constant dataType="double">5.0200000000000005</Constant>
						</Apply>
						<Constant dataType="double">0.1302904448696439</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'P')"/>
							<Constant dataType="double">12.893</Constant>
						</Apply>
						<Constant dataType="double">-0.09232314182960501</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'SS')"/>
							<Constant dataType="double">5.075000000000001</Constant>
						</Apply>
						<Constant dataType="double">-0.26336140905995914</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							<Constant dataType="double">8.437999999999999</Constant>
						</Apply>
						<Constant dataType="double">-0.3164684574747891</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							<Constant dataType="double">6.8519999999999985</Constant>
						</Apply>
						<Constant dataType="double">-0.14878067699814904</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							<Constant dataType="double">9.142</Constant>
						</Apply>
						<Constant dataType="double">0.3605980744094385</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">5.866999999999999</Constant>
						</Apply>
						<Constant dataType="double">0.1870310050166785</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							<Constant dataType="double">8.871999999999996</Constant>
						</Apply>
						<Constant dataType="double">0.06924773669076092</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							<Constant dataType="double">19.0209</Constant>
						</Apply>
						<Constant dataType="double">0.1217527133785222</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							<Constant dataType="double">8.375999999999996</Constant>
						</Apply>
						<Constant dataType="double">-0.6031500168287235</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">273.309</Constant>
						</Apply>
						<Constant dataType="double">0.016721724107812315</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">22.0</Constant>
						</Apply>
						<Constant dataType="double">-0.17055312353096402</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">4.55</Constant>
						</Apply>
						<Constant dataType="double">-0.09215014262497298</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">6.31</Constant>
						</Apply>
						<Constant dataType="double">-0.11484399618775827</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '1B')"/>
							<Constant dataType="double">5.17</Constant>
						</Apply>
						<Constant dataType="double">-0.5361367232846237</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '2B')"/>
							<Constant dataType="double">3.775000000000001</Constant>
						</Apply>
						<Constant dataType="double">-0.022983994012362917</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '3B')"/>
							<Constant dataType="double">4.58</Constant>
						</Apply>
						<Constant dataType="double">-0.22877236493358433</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'C')"/>
							<Constant dataType="double">3.0150000000000006</Constant>
						</Apply>
						<Constant dataType="double">0.00812641940459564</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'OF')"/>
							<Constant dataType="double">5.0200000000000005</Constant>
						</Apply>
						<Constant dataType="double">-0.025011558143295178</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'P')"/>
							<Constant dataType="double">12.893</Constant>
						</Apply>
						<Constant dataType="double">-0.027870322722055713</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'SS')"/>
							<Constant dataType="double">5.075000000000001</Constant>
						</Apply>
						<Constant dataType="double">0.037472280163170925</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							<Constant dataType="double">8.437999999999999</Constant>
						</Apply>
						<Constant dataType="double">-0.6074401717240985</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							<Constant dataType="double">6.8519999999999985</Constant>
						</Apply>
						<Constant dataType="double">-0.032591846785599364</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							<Constant dataType="double">9.142</Constant>
						</Apply>
						<Constant dataType="double">-0.23749666716959678</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">5.866999999999999</Constant>
						</Apply>
						<Constant dataType="double">0.06345089819157934</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							<Constant dataType="double">8.871999999999996</Constant>
						</Apply>
						<Constant dataType="double">0.00782128549777327</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							<Constant dataType="double">19.0209</Constant>
						</Apply>
						<Constant dataType="double">-0.08736548515321764</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							<Constant dataType="double">8.375999999999996</Constant>
						</Apply>
						<Constant dataType="double">0.4093905968067019</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">273.309</Constant>
						</Apply>
						<Constant dataType="double">-0.007269787595723871</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">22.0</Constant>
						</Apply>
						<Constant dataType="double">0.03714197974315241</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">4.55</Constant>
						</Apply>
						<Constant dataType="double">-0.11940986332832398</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">6.31</Constant>
						</Apply>
						<Constant dataType="double">-0.1985229140726567</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '1B')"/>
							<Constant dataType="double">5.17</Constant>
						</Apply>
						<Constant dataType="double">0.11913468601421953</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '2B')"/>
							<Constant dataType="double">3.775000000000001</Constant>
						</Apply>
						<Constant dataType="double">-0.10620534064653503</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '3B')"/>
							<Constant dataType="double">4.58</Constant>
						</Apply>
						<Constant dataType="double">0.06051843292580381</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'C')"/>
							<Constant dataType="double">3.0150000000000006</Constant>
						</Apply>
						<Constant dataType="double">0.2618335737404286</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'OF')"/>
							<Constant dataType="double">5.0200000000000005</Constant>
						</Apply>
						<Constant dataType="double">-0.332013294102408</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'P')"/>
							<Constant dataType="double">12.893</Constant>
						</Apply>
						<Constant dataType="double">-0.04109795772762044</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'SS')"/>
							<Constant dataType="double">5.075000000000001</Constant>
						</Apply>
						<Constant dataType="double">0.25388237304390937</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							<Constant dataType="double">8.437999999999999</Constant>
						</Apply>
						<Constant dataType="double">0.06169313961164641</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							<Constant dataType="double">6.8519999999999985</Constant>
						</Apply>
						<Constant dataType="double">-0.2636369921917687</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							<Constant dataType="double">9.142</Constant>
						</Apply>
						<Constant dataType="double">-0.009693175726599012</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">5.866999999999999</Constant>
						</Apply>
						<Constant dataType="double">0.7179620511886159</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							<Constant dataType="double">8.871999999999996</Constant>
						</Apply>
						<Constant dataType="double">-0.2843402343459299</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							<Constant dataType="double">19.0209</Constant>
						</Apply>
						<Constant dataType="double">-0.02740361208953892</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							<Constant dataType="double">8.375999999999996</Constant>
						</Apply>
						<Constant dataType="double">0.01879319867353106</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">273.309</Constant>
						</Apply>
						<Constant dataType="double">0.030894038094902192</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">22.0</Constant>
						</Apply>
						<Constant dataType="double">-0.25486002485943865</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">4.55</Constant>
						</Apply>
						<Constant dataType="double">0.04381634654328785</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">6.31</Constant>
						</Apply>
						<Constant dataType="double">-0.0014599135079279518</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '1B')"/>
							<Constant dataType="double">5.17</Constant>
						</Apply>
						<Constant dataType="double">0.2655326265434322</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '2B')"/>
							<Constant dataType="double">3.775000000000001</Constant>
						</Apply>
						<Constant dataType="double">0.020947871391246795</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '3B')"/>
							<Constant dataType="double">4.58</Constant>
						</Apply>
						<Constant dataType="double">0.13319945496593347</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'C')"/>
							<Constant dataType="double">3.0150000000000006</Constant>
						</Apply>
						<Constant dataType="double">-0.20669077919840628</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'OF')"/>
							<Constant dataType="double">5.0200000000000005</Constant>
						</Apply>
						<Constant dataType="double">0.20997055980402435</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'P')"/>
							<Constant dataType="double">12.893</Constant>
						</Apply>
						<Constant dataType="double">0.5617525200772686</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'SS')"/>
							<Constant dataType="double">5.075000000000001</Constant>
						</Apply>
						<Constant dataType="double">-0.12387646129295088</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							<Constant dataType="double">8.437999999999999</Constant>
						</Apply>
						<Constant dataType="double">-0.14450146696051305</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							<Constant dataType="double">6.8519999999999985</Constant>
						</Apply>
						<Constant dataType="double">0.028833787487571167</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							<Constant dataType="double">9.142</Constant>
						</Apply>
						<Constant dataType="double">-0.2998718464381873</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">5.866999999999999</Constant>
						</Apply>
						<Constant dataType="double">0.25803172371842104</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							<Constant dataType="double">8.871999999999996</Constant>
						</Apply>
						<Constant dataType="double">0.09292434207139237</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							<Constant dataType="double">19.0209</Constant>
						</Apply>
						<Constant dataType="double">-0.4694422913172923</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							<Constant dataType="double">8.375999999999996</Constant>
						</Apply>
						<Constant dataType="double">-0.13614293522104243</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">273.309</Constant>
						</Apply>
						<Constant dataType="double">-0.020728761581153127</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">22.0</Constant>
						</Apply>
						<Constant dataType="double">-0.07842221040683696</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">4.55</Constant>
						</Apply>
						<Constant dataType="double">0.18793843738800228</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">6.31</Constant>
						</Apply>
						<Constant dataType="double">0.385689271198225</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '1B')"/>
							<Constant dataType="double">5.17</Constant>
						</Apply>
						<Constant dataType="double">0.07585533352937435</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '2B')"/>
							<Constant dataType="double">3.775000000000001</Constant>
						</Apply>
						<Constant dataType="double">-0.3000584728280709</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '3B')"/>
							<Constant dataType="double">4.58</Constant>
						</Apply>
						<Constant dataType="double">-0.006275222497524181</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'C')"/>
							<Constant dataType="double">3.0150000000000006</Constant>
						</Apply>
						<Constant dataType="double">0.42393387600471794</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'OF')"/>
							<Constant dataType="double">5.0200000000000005</Constant>
						</Apply>
						<Constant dataType="double">0.3378480426196983</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'P')"/>
							<Constant dataType="double">12.893</Constant>
						</Apply>
						<Constant dataType="double">-0.08051106903105243</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'SS')"/>
							<Constant dataType="double">5.075000000000001</Constant>
						</Apply>
						<Constant dataType="double">-0.006571158964338673</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							<Constant dataType="double">8.437999999999999</Constant>
						</Apply>
						<Constant dataType="double">0.1013276058465186</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							<Constant dataType="double">6.8519999999999985</Constant>
						</Apply>
						<Constant dataType="double">0.28325538170102077</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							<Constant dataType="double">9.142</Constant>
						</Apply>
						<Constant dataType="double">-0.23757840719632364</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">5.866999999999999</Constant>
						</Apply>
						<Constant dataType="double">0.2857361703098625</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							<Constant dataType="double">8.871999999999996</Constant>
						</Apply>
						<Constant dataType="double">0.26857973816753355</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							<Constant dataType="double">19.0209</Constant>
						</Apply>
						<Constant dataType="double">0.23357847394703446</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							<Constant dataType="double">8.375999999999996</Constant>
						</Apply>
						<Constant dataType="double">0.2405093173616352</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]" optype="continuous" dataType="double">
				<Apply function="sum">
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="best-possible-score"/>
							<Constant dataType="double">273.309</Constant>
						</Apply>
						<Constant dataType="double">-6.060620324997554E-4</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team_count"/>
							<Constant dataType="double">22.0</Constant>
						</Apply>
						<Constant dataType="double">0.22072221860774188</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-med"/>
							<Constant dataType="double">4.55</Constant>
						</Apply>
						<Constant dataType="double">-0.02537847709494319</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="team-70.0th_pctl"/>
							<Constant dataType="double">6.31</Constant>
						</Apply>
						<Constant dataType="double">0.11988066586628285</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '1B')"/>
							<Constant dataType="double">5.17</Constant>
						</Apply>
						<Constant dataType="double">-0.013492409983153736</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '2B')"/>
							<Constant dataType="double">3.775000000000001</Constant>
						</Apply>
						<Constant dataType="double">-0.18096028452113969</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', '3B')"/>
							<Constant dataType="double">4.58</Constant>
						</Apply>
						<Constant dataType="double">0.3381253737097835</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'C')"/>
							<Constant dataType="double">3.0150000000000006</Constant>
						</Apply>
						<Constant dataType="double">-0.24188800424043</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'OF')"/>
							<Constant dataType="double">5.0200000000000005</Constant>
						</Apply>
						<Constant dataType="double">0.5809471292373327</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'P')"/>
							<Constant dataType="double">12.893</Constant>
						</Apply>
						<Constant dataType="double">-0.00472976383777882</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('med-dfs', 'SS')"/>
							<Constant dataType="double">5.075000000000001</Constant>
						</Apply>
						<Constant dataType="double">0.39225197189527267</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '1B')"/>
							<Constant dataType="double">8.437999999999999</Constant>
						</Apply>
						<Constant dataType="double">-0.1440740265726244</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '2B')"/>
							<Constant dataType="double">6.8519999999999985</Constant>
						</Apply>
						<Constant dataType="double">-0.19717702546222068</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', '3B')"/>
							<Constant dataType="double">9.142</Constant>
						</Apply>
						<Constant dataType="double">0.15057304747740236</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'C')"/>
							<Constant dataType="double">5.866999999999999</Constant>
						</Apply>
						<Constant dataType="double">-0.022263322628335663</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'OF')"/>
							<Constant dataType="double">8.871999999999996</Constant>
						</Apply>
						<Constant dataType="double">-0.36186112716999264</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'P')"/>
							<Constant dataType="double">19.0209</Constant>
						</Apply>
						<Constant dataType="double">0.021207412870666097</Constant>
					</Apply>
					<Apply function="*">
						<Apply function="-">
							<FieldRef field="('70.0th-pctl-dfs', 'SS')"/>
							<Constant dataType="double">8.375999999999996</Constant>
						</Apply>
						<Constant dataType="double">0.1578539503411469</Constant>
					</Apply>
				</Apply>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4])"/>
			</DerivedField>
			<DerivedField name="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3])" optype="continuous" dataType="float">
				<FieldRef field="pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]"/>
			</DerivedField>
			<DerivedField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" optype="continuous" dataType="double">
				<FieldRef field="float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3])"/>
			</DerivedField>
		</LocalTransformations>
		<Segmentation multipleModelMethod="weightedMedian">
			<Segment id="1" weight="0.0016589587451515554">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-0.3001560568809509"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-33.00621700286865"/>
							</Node>
							<Node score="89.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-0.6414607763290405"/>
							</Node>
						</Node>
						<Node score="111.3">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-2.736524820327759"/>
						</Node>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="8.69243836402893"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="2" weight="0.0017211383119137245">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-26.2652907371521"/>
						</Node>
						<Node score="117.46666666666668">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.7839653193950653"/>
							<Node score="111.55">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="20.31264877319336"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="3" weight="0.0020713168251637725">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.7839653193950653"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="2.638675607740879"/>
								<Node score="111.55">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.2257876843214035"/>
								</Node>
							</Node>
							<Node score="119.40000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.7180359363555908"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="4" weight="0.0016285403495186895">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="116.5">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-3.526184916496277"/>
							<Node score="89.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.6280067563056946"/>
							</Node>
						</Node>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-0.04982203245162964"/>
							<Node score="124.80000000000004">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="13.152599096298218"/>
							</Node>
						</Node>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.08328138291835785"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="5" weight="0.0024829292932212585">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.3478979244828224"/>
							</Node>
						</Node>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.4255974590778351"/>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="0.28683626651763916"/>
							</Node>
						</Node>
						<Node score="117.95000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="8.69243836402893"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="6" weight="0.0015323127385354009">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="90.925">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.9424037337303162"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-1.6293858289718628"/>
							</Node>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-33.00621700286865"/>
							</Node>
						</Node>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="1.585497498512268"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="7" weight="0.001970000616803032">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="91.5">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.7996371984481812"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.4255974590778351"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="0.28683626651763916"/>
								</Node>
							</Node>
							<Node score="117.95000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.7180359363555908"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="8" weight="0.001746843139782997">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="75.9">
						<True/>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="6.547478675842285"/>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.2257876843214035"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="1.394142508506775"/>
								</Node>
							</Node>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="1.4098974466323853"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="9" weight="0.0017372528799951203">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="0.8912617564201355"/>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.9177044034004211"/>
							</Node>
							<Node score="89.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-0.5801299061531608"/>
							</Node>
						</Node>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-0.7859001904726028"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="0.08811426162719727"/>
							</Node>
						</Node>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="0.9343753904104233"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="10" weight="0.001968654502450895">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="91.5">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.23626890778541565"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="5.1249754428863525"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-1.2426652610301971"/>
								</Node>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-1.1636186242103577"/>
						</Node>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="1.6042096018791199"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="11" weight="0.0023387431645772736">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="91.5">
						<True/>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-5.7540318965911865"/>
						</Node>
						<Node score="120.23333333333335">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.7996371984481812"/>
							<Node score="111.375">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.4255974590778351"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="12" weight="0.0017302560888696695">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="0.9513640701770782"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="5.1249754428863525"/>
								<Node score="110.82499999999999">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.08328138291835785"/>
								</Node>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="13" weight="0.0018399380071928626">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="110.1">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="-0.2762925624847412"/>
							</Node>
						</Node>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-0.5018055289983749"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.6481106877326965"/>
							</Node>
						</Node>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="4.092511057853699"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="14" weight="0.0017349378499248492">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="75.9">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.4853075444698334"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="6.228024162352085"/>
								<Node score="111.63333333333333">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.7019745111465454"/>
								</Node>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="15" weight="0.0020666967380882375">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
					</MiningSchema>
					<Node score="118.67500000000001">
						<True/>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-16.10481357574463"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="1.4024399518966675"/>
							</Node>
						</Node>
						<Node score="111.3">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="2.535931944847107"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-0.997702956199646"/>
							</Node>
						</Node>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="13.152599096298218"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="16" weight="0.0018057076628511732">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="124.80000000000003">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.4853075444698334"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="2.535931944847107"/>
								<Node score="111.46666666666665">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="4.092511057853699"/>
								</Node>
							</Node>
							<Node score="119.40000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.2978344261646271"/>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-2.0293573290109634"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="17" weight="0.0017439176986806819">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="75.9">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.23626890778541565"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="3.144530475139618"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.7019745111465454"/>
								</Node>
							</Node>
						</Node>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-0.482424259185791"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="18" weight="0.0020082139873225705">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.7839653193950653"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.4255974590778351"/>
								<Node score="111.7">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="4.092511057853699"/>
								</Node>
							</Node>
							<Node score="117.95000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="8.69243836402893"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="19" weight="0.0016932500050368872">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="118.43333333333335">
						<True/>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-5.7746970653533936"/>
						</Node>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
						</Node>
						<Node score="111.125">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.08328138291835785"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="20" weight="0.002205980996327649">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.0339515507221222"/>
							</Node>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="2.9190375208854675"/>
							<Node score="111.06666666666666">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.5546698272228241"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="21" weight="0.0017835302541340575">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="75.9">
						<True/>
						<Node score="124.80000000000003">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.23626890778541565"/>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="3.144530475139618"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.2777068035211414"/>
								</Node>
							</Node>
						</Node>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.042865365743637085"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="22" weight="0.002183927903019254">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-0.3001560568809509"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="0.6850778460502625"/>
								<Node score="89.2">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="0.7006046772003174"/>
								</Node>
							</Node>
						</Node>
						<Node score="111.3">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-0.9447629451751709"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="0.390816330909729"/>
							</Node>
						</Node>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.09141242504119873"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="23" weight="0.0016173671591120232">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-3.4004554748535156"/>
							<Node score="89.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.6280067563056946"/>
							</Node>
						</Node>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="2.638675607740879"/>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="0.28683626651763916"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="24" weight="0.0015512195801840657">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="91.5">
						<True/>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="2.0527204871177673"/>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.2257876843214035"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.2777068035211414"/>
								</Node>
							</Node>
							<Node score="119.40000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-0.20478057861328125"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="25" weight="0.0022951211471253573">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="118.43333333333335">
						<True/>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-0.3001560568809509"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.9424037337303162"/>
								<Node score="89.2">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-0.6414607763290405"/>
								</Node>
							</Node>
						</Node>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.5681037604808807"/>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-2.3922372683882713"/>
							</Node>
						</Node>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="13.152599096298218"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="26" weight="0.0020230172359320007">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="91.5">
						<True/>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.7996371984481812"/>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="1.5356268882751465"/>
								<Node score="110.1">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="-0.41279929876327515"/>
								</Node>
							</Node>
							<Node score="124.80000000000004">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="0.9343753904104233"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="27" weight="0.0019376401505941374">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="122.10000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.4853075444698334"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
							</Node>
							<Node score="110.94999999999999">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="0.19371485710144043"/>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="0.9221478626132011"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="28" weight="0.0013804557846369878">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-12.571178674697876"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.3478979244828224"/>
							</Node>
						</Node>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.8797111660242081"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-2.02437162399292"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="29" weight="0.0018673014608789364">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="91.5">
						<True/>
						<Node score="124.80000000000003">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.23626890778541565"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="2.535931944847107"/>
								<Node score="111.63333333333333">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.8782990276813507"/>
								</Node>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="-0.9463849663734436"/>
						</Node>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-0.6414607763290405"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="30" weight="0.0019087456075868561">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="90.35">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-0.3001560568809509"/>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-1.0533367097377777"/>
							</Node>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-2.0293573290109634"/>
							</Node>
						</Node>
						<Node score="111.3">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="2.9190375208854675"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="1.326616883277893"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="31" weight="0.0015871875120961737">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="111.8">
						<True/>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="0.16779839992523193"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="9.618964195251465"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="4.092511057853699"/>
								</Node>
							</Node>
							<Node score="119.40000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.06444099545478821"/>
							</Node>
						</Node>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="1.7070381045341492"/>
							<Node score="89.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.16502134501934052"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="32" weight="0.0016829983318811122">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-13.762596487998962"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-0.583385690664727"/>
							</Node>
						</Node>
						<Node score="111.3">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.5681037604808807"/>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="1.394142508506775"/>
							</Node>
						</Node>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="0.21912908554077148"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="33" weight="0.001722853052399044">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="116.5">
						<True/>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-5.7746970653533936"/>
						</Node>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.08328138291835785"/>
							<Node score="111.46666666666665">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="3.3867247253656387"/>
							</Node>
						</Node>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="31.78286075592041"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="34" weight="0.001966736172055683">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.23626890778541565"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="6.228024162352085"/>
								<Node score="111.7">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.22062361077405512"/>
								</Node>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-1.1636186242103577"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="35" weight="0.0016207554519131213">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="75.9">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.4853075444698334"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.4255974590778351"/>
								<Node score="111.58571428571427">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.8782990276813507"/>
								</Node>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="36" weight="0.0019558467778942293">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="1.4098974466323853"/>
							<Node score="111.425">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="21.1661936044693"/>
							</Node>
						</Node>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="0.9343753904104233"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="37" weight="0.0014032433089422838">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-2.4007186889648438"/>
						</Node>
						<Node score="117.08000000000001">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="0.9708131551742554"/>
							<Node score="110.66666666666667">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="9.618964195251465"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="38" weight="0.001791884544353672">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="91.5">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.700102373957634"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="2.9190375208854675"/>
								<Node score="111.63333333333333">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-3.600350260734558"/>
								</Node>
							</Node>
						</Node>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.16502134501934052"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="39" weight="0.0010796808953460145">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.14007771760225296"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-0.8534258157014847"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.056339412927627563"/>
								</Node>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.7146030366420746"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="40" weight="0.0013492895205145941">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="91.5">
						<True/>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.22391554713249207"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="-1.716280996799469"/>
							</Node>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-4.938070774078369"/>
							</Node>
						</Node>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-0.6414607763290405"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="41" weight="0.001754983410210507">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="91.5">
						<True/>
						<Node score="117.95000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.7996371984481812"/>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.5681037604808807"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.2777068035211414"/>
								</Node>
							</Node>
							<Node score="124.80000000000004">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="13.152599096298218"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="42" weight="9.95181460875151E-4">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
					</MiningSchema>
					<Node score="122.10000000000002">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-33.00621700286865"/>
							</Node>
						</Node>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-2.4375927448272705"/>
						</Node>
						<Node score="112.55">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="1.5356268882751465"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="43" weight="0.001425555658331326">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
					</MiningSchema>
					<Node score="91.5">
						<True/>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.7996371984481812"/>
							<Node score="118.43333333333335">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="1.478051483631134"/>
								<Node score="124.80000000000004">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.050589367747306824"/>
								</Node>
							</Node>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="1.0149913728237152"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="44" weight="0.00141176359815266">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.030361570417881012"/>
							<Node score="111.55">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="4.999246001243591"/>
								<Node score="116.5">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-1.2665824592113495"/>
								</Node>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="-0.9463849663734436"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="45" weight="0.0014659628677304096">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="0.9708131551742554"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="9.618964195251465"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-0.11900222301483154"/>
								</Node>
							</Node>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-0.9447629451751709"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="46" weight="0.001828972074781013">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="116.5">
						<True/>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-16.10481357574463"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="1.611396312713623"/>
							</Node>
						</Node>
						<Node score="111.63333333333333">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.5546698272228241"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="-0.41279929876327515"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="47" weight="0.002177944247641692">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="111.8">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.14007771760225296"/>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="1.585497498512268"/>
								<Node score="116.5">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-1.2665824592113495"/>
								</Node>
							</Node>
						</Node>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-0.41172635555267334"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.7146030366420746"/>
							</Node>
						</Node>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="-0.18730634450912476"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="48" weight="0.0019690117900219113">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.3478979244828224"/>
							</Node>
						</Node>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="20.31264877319336"/>
							<Node score="111.675">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="4.092511057853699"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="49" weight="0.0024277686278134786">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.4853075444698334"/>
							<Node score="119.40000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.7996371984481812"/>
								<Node score="111.375">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="2.638675607740879"/>
								</Node>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.7146030366420746"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="50" weight="0.0011456872763953583">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="91.5">
						<True/>
						<Node score="111.3">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-0.5734015852212906"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="0.390816330909729"/>
								<Node score="119.40000000000002">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.06444099545478821"/>
								</Node>
							</Node>
						</Node>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-0.5801299061531608"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="51" weight="0.0022489477545537023">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-0.3001560568809509"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="-0.1463465690612793"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.06414330005645752"/>
								</Node>
							</Node>
							<Node score="89.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.16502134501934052"/>
							</Node>
						</Node>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.2257876843214035"/>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-2.3922372683882713"/>
							</Node>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.8717328161001205"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="52" weight="0.0020302056181455653">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-0.3001560568809509"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.9424037337303162"/>
								<Node score="89.96666666666665">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="1.4024399518966675"/>
								</Node>
							</Node>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="6.228024162352085"/>
							<Node score="111.55">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.3411063237581402"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="53" weight="0.0016482298164367099">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="0.8912617564201355"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.9424037337303162"/>
								<Node score="89.96666666666665">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="1.4024399518966675"/>
								</Node>
							</Node>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-3.474620819091797"/>
							</Node>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.7180359363555908"/>
							<Node score="119.40000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="-2.309092104434967"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="54" weight="0.002035220633556969">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.0339515507221222"/>
							</Node>
						</Node>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.39554598927497864"/>
							<Node score="111.675">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="4.092511057853699"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="55" weight="0.0013672919128563474">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
					</MiningSchema>
					<Node score="110.1">
						<True/>
						<Node score="124.80000000000003">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-0.777984784450382"/>
							<Node score="119.40000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.7180359363555908"/>
							</Node>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.9280224740505219"/>
						</Node>
						<Node score="111.3">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-3.495285987854004"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="56" weight="0.0014651272174139203">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-0.3001560568809509"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.13530969619750977"/>
							</Node>
						</Node>
						<Node score="111.425">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.8797111660242081"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="0.390816330909729"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="57" weight="0.001817345789039692">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="75.9">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.23626890778541565"/>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.744428277015686"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="0.07667136192321777"/>
								</Node>
							</Node>
						</Node>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="1.611396312713623"/>
							<Node score="89.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.6280067563056946"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="58" weight="0.001228357627872663">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-2.4007186889648438"/>
						</Node>
						<Node score="123.00000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="0.9708131551742554"/>
							<Node score="112.97500000000001">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-0.8534258157014847"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="59" weight="0.0012797706950592417">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="91.5">
						<True/>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-1.561860203742981"/>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.056339412927627563"/>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-33.00621700286865"/>
						</Node>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="1.6042096018791199"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="60" weight="0.0019964575069754058">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="110.1">
						<True/>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-3.526184916496277"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.9424037337303162"/>
								<Node score="89.2">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.16502134501934052"/>
								</Node>
							</Node>
						</Node>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="1.478051483631134"/>
							<Node score="117.95000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="1.929700791835785"/>
							</Node>
						</Node>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.16555872559547424"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="61" weight="0.002148094834374146">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="116.5">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-0.3001560568809509"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-1.1636186242103577"/>
							</Node>
							<Node score="89.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-5.679866552352905"/>
							</Node>
						</Node>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-0.777984784450382"/>
							<Node score="124.80000000000004">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="13.152599096298218"/>
							</Node>
						</Node>
						<Node score="111.55">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="29.517661094665527"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="62" weight="0.001849164737614156">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
					</MiningSchema>
					<Node score="75.9">
						<True/>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="6.547478675842285"/>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="20.31264877319336"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.2777068035211414"/>
								</Node>
							</Node>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-0.9447629451751709"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="63" weight="0.0018292081951228514">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-0.3001560568809509"/>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.4592815041542053"/>
							</Node>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.13530969619750977"/>
							</Node>
						</Node>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="20.31264877319336"/>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="1.2763793603517115"/>
							</Node>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.6481106877326965"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="64" weight="0.0023132522322714144">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-16.10481357574463"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-1.381013572216034"/>
							</Node>
						</Node>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.4255974590778351"/>
							<Node score="111.55">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.22062361077405512"/>
							</Node>
						</Node>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.5294167399406433"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="65" weight="0.001990412354927709">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="110.94999999999999">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.4853075444698334"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.6888605654239655"/>
							</Node>
							<Node score="121.20000000000003">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-0.0364459753036499"/>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="0.9221478626132011"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="66" weight="0.0018861223514669858">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
					</MiningSchema>
					<Node score="75.9">
						<True/>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.4853075444698334"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="20.31264877319336"/>
								<Node score="111.63333333333333">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.22062361077405512"/>
								</Node>
							</Node>
						</Node>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-0.482424259185791"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="67" weight="0.0017456104583620832">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
					</MiningSchema>
					<Node score="75.9">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.4853075444698334"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="2.535931944847107"/>
								<Node score="111.55">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.0011453628540039062"/>
								</Node>
							</Node>
							<Node score="119.40000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.2978344261646271"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="68" weight="0.001704088854449992">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="0.9708131551742554"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="1.4098974466323853"/>
								<Node score="111.46666666666665">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="0.7365126744844019"/>
								</Node>
							</Node>
							<Node score="124.80000000000004">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.5294167399406433"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="69" weight="0.0018838857204679154">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="2.638675607740879"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-1.2665824592113495"/>
							</Node>
							<Node score="111.63333333333333">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.7019745111465454"/>
							</Node>
						</Node>
						<Node score="124.80000000000003">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="0.9343753904104233"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="70" weight="0.0012838442985496313">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-0.3001560568809509"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-15.407266676425934"/>
							</Node>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-0.9447629451751709"/>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="21.1661936044693"/>
							</Node>
						</Node>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.5294167399406433"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="71" weight="0.0019570602338198685">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="90.35">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-0.3001560568809509"/>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-1.9676986932754517"/>
							</Node>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-33.00621700286865"/>
							</Node>
						</Node>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.2257876843214035"/>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="0.754528671503067"/>
							</Node>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.8717328161001205"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="72" weight="0.0018934185798388124">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="91.5">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.700102373957634"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="2.9190375208854675"/>
								<Node score="110.82499999999999">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.5546698272228241"/>
								</Node>
							</Node>
						</Node>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.6280067563056946"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="73" weight="0.0013778146833863872">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="0.1925743226056511"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-2.0293573290109634"/>
							</Node>
							<Node score="89.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-5.679866552352905"/>
							</Node>
						</Node>
						<Node score="110.09999999999998">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="0.19371485710144043"/>
						</Node>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.7180359363555908"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="74" weight="0.001983223359433948">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="118.43333333333335">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.7839653193950653"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.4255974590778351"/>
								<Node score="111.46666666666665">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="3.3867247253656387"/>
								</Node>
							</Node>
							<Node score="124.80000000000004">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="13.152599096298218"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="75" weight="0.001134675332059111">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-0.41172635555267334"/>
							<Node score="89.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-0.482424259185791"/>
							</Node>
						</Node>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="1.585497498512268"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="76" weight="0.002001229981334933">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.0339515507221222"/>
							</Node>
						</Node>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="1.5356268882751465"/>
							<Node score="111.7">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-3.474620819091797"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="77" weight="0.00164224054849333">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.0339515507221222"/>
							</Node>
						</Node>
						<Node score="111.3">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="1.585497498512268"/>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.2777068035211414"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="78" weight="0.0025398657517669166">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.3478979244828224"/>
							</Node>
						</Node>
						<Node score="111.675">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="2.638675607740879"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-1.2665824592113495"/>
							</Node>
						</Node>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="8.69243836402893"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="79" weight="0.002062651266013945">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="75.9">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.23626890778541565"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.4255974590778351"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.06414330005645752"/>
								</Node>
							</Node>
						</Node>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="1.611396312713623"/>
							<Node score="89.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-0.5801299061531608"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="80" weight="0.0014840143172563881">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.030361570417881012"/>
							<Node score="124.80000000000004">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="1.3208098262548447"/>
								<Node score="112.72500000000001">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="2.9190375208854675"/>
								</Node>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-2.0293573290109634"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="81" weight="0.0016828956030090956">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="91.5">
						<True/>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.700102373957634"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.5546698272228241"/>
								<Node score="111.63333333333333">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.22062361077405512"/>
								</Node>
							</Node>
						</Node>
						<Node score="89.2">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.16502134501934052"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="82" weight="0.0019927185955152965">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.4853075444698334"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="1.5356268882751465"/>
								<Node score="111.46666666666665">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.0011453628540039062"/>
								</Node>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.4132440984249115"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="83" weight="0.001796639351297032">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.14007771760225296"/>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="1.929700791835785"/>
								<Node score="116.5">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-0.07730138301849365"/>
								</Node>
							</Node>
						</Node>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.3701396584510803"/>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-1.1636186242103577"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="84" weight="0.0020663565177271763">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
					</MiningSchema>
					<Node score="116.5">
						<True/>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.3478979244828224"/>
							</Node>
						</Node>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.7664784342050552"/>
						</Node>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.06444099545478821"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="85" weight="0.0019795424478247386">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.4853075444698334"/>
							<Node score="111.63333333333333">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.4255974590778351"/>
								<Node score="110.1">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="-1.716280996799469"/>
								</Node>
							</Node>
							<Node score="119.40000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-1.7192780375480652"/>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-19.54377657175064"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="86" weight="0.0016159412267820064">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="111.8">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="0.1925743226056511"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.9424037337303162"/>
								<Node score="89.2">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-0.6414607763290405"/>
								</Node>
							</Node>
						</Node>
						<Node score="111.3">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="2.535931944847107"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="3.637824773788452"/>
							</Node>
						</Node>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="8.69243836402893"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="87" weight="0.0019810281247705543">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.4853075444698334"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.4255974590778351"/>
								<Node score="111.63333333333333">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.7019745111465454"/>
								</Node>
							</Node>
							<Node score="119.40000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="0.21912908554077148"/>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-1.1636186242103577"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="88" weight="0.0016821321400616713">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.4853075444698334"/>
							<Node score="119.40000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="-3.112707734107971"/>
							</Node>
							<Node score="111.55">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.22062361077405512"/>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-2.0293573290109634"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="89" weight="0.0014634780998677675">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="75.9">
						<True/>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.3723968267440796"/>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="2.638675607740879"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="1.394142508506775"/>
								</Node>
							</Node>
							<Node score="124.80000000000004">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.5294167399406433"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="90" weight="0.0014749519303428882">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="111.8">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="0.8912617564201355"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="-2.0293573290109634"/>
							</Node>
							<Node score="89.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="1.6042096018791199"/>
							</Node>
						</Node>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="0.49004465341567993"/>
							<Node score="124.80000000000004">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[7]))" operator="lessOrEqual" value="-0.09141242504119873"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="91" weight="0.0016587840139219011">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.3723968267440796"/>
							<Node score="111.3">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="2.638675607740879"/>
								<Node score="111.8">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.2777068035211414"/>
								</Node>
							</Node>
							<Node score="119.40000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="8.69243836402893"/>
							</Node>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.4132440984249115"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="92" weight="0.001985924894119776">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
						</Node>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.4255974590778351"/>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="-0.06414330005645752"/>
							</Node>
						</Node>
						<Node score="117.46666666666668">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="8.69243836402893"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="93" weight="0.0016072999010358965">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
						</Node>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="20.31264877319336"/>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="0.28683626651763916"/>
							</Node>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="0.8717328161001205"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="94" weight="0.0020384112236370108">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.4853075444698334"/>
							<Node score="110.1">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="20.31264877319336"/>
								<Node score="111.55">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="3.3867247253656387"/>
								</Node>
							</Node>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-1.6293858289718628"/>
						</Node>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="-0.9463849663734436"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="95" weight="0.001283668562670418">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="111.8">
						<True/>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="8.051311433315277"/>
							<Node score="89.2">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="1.4024399518966675"/>
								<Node score="91.5">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-15.407266676425934"/>
								</Node>
							</Node>
						</Node>
						<Node score="119.40000000000002">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="0.6163092851638794"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="1.4098974466323853"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="96" weight="0.0021051139058354813">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))"/>
					</MiningSchema>
					<Node score="89.2">
						<True/>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.7839653193950653"/>
							<Node score="116.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="2.638675607740879"/>
								<Node score="111.55">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[6]))" operator="lessOrEqual" value="-0.2257876843214035"/>
								</Node>
							</Node>
							<Node score="119.40000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="-1.7192780375480652"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="97" weight="0.002076118268700199">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="1.4024399518966675"/>
							</Node>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="6.228024162352085"/>
							<Node score="111.675">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.3411063237581402"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="98" weight="0.0023586939427601306">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))"/>
					</MiningSchema>
					<Node score="119.40000000000002">
						<True/>
						<Node score="91.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-22.128780841827393"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="-0.583385690664727"/>
							</Node>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="2.638675607740879"/>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[8]))" operator="lessOrEqual" value="0.056339412927627563"/>
							</Node>
						</Node>
						<Node score="124.80000000000004">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[4]))" operator="lessOrEqual" value="0.9343753904104233"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="99" weight="0.001487928426107364">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="111.8">
						<True/>
						<Node score="75.9">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-0.3001560568809509"/>
							<Node score="91.5">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="1.611396312713623"/>
								<Node score="89.2">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="-5.679866552352905"/>
								</Node>
							</Node>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="0.390816330909729"/>
						</Node>
						<Node score="111.3">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="9.695981621742249"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="100" weight="0.0016484481827697848">
				<True/>
				<TreeModel functionName="regression" algorithmName="sklearn.tree._classes.DecisionTreeRegressor" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
					<MiningSchema>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))"/>
						<MiningField name="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))"/>
					</MiningSchema>
					<Node score="124.80000000000004">
						<True/>
						<Node score="110.1">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="0.8912617564201355"/>
							<Node score="75.9">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[2]))" operator="lessOrEqual" value="0.9424037337303162"/>
								<Node score="90.35">
									<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[5]))" operator="lessOrEqual" value="1.4024399518966675"/>
								</Node>
							</Node>
							<Node score="111.8">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[0]))" operator="lessOrEqual" value="-9.363887310028076"/>
							</Node>
						</Node>
						<Node score="116.5">
							<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[1]))" operator="lessOrEqual" value="8.69243836402893"/>
							<Node score="119.40000000000002">
								<SimplePredicate field="double(float(pca(best-possible-score, team_count, .., ('70.0th-pctl-dfs', 'P'), ('70.0th-pctl-dfs', 'SS'))[3]))" operator="lessOrEqual" value="-2.309092104434967"/>
							</Node>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
		</Segmentation>
	</MiningModel>
</PMML>
